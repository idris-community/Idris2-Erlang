-module('Idris.Idris2.Yaffle.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in repl-1772'/7,
  'case--repl-1716'/6,
  'case--process-1552'/6,
  'case--case block in case block in process-1444'/10,
  'case--case block in process-1372'/10,
  'case--process-1318'/6,
  'case--case block in case block in process-1139'/13,
  'case--case block in process-1077'/12,
  'case--process-1028'/7,
  'case--process-909'/6,
  'case--process-770'/6,
  'case--process-693'/5,
  'case--process-536'/5,
  'nested--13172-596--in--un--printName'/6,
  'un--showInfo'/1,
  'un--repl'/4,
  'un--processCatch'/5,
  'un--process'/4
]).
'case--case block in repl-1772'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> fun (V7) -> ('un--repl'(V2, V1, V0, V7)) end; 1 -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--repl-1716'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> fun (V7) -> begin (V45 = begin (V44 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('Idris.Idris2.Parser.Support':'dn--un--show_Show__(ParseError $tok)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V36) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--show_Show__Token'(V36)) end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--showPrec_Show__Token'(V37, V38)) end end}, V35)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Parser.Support':'dn--un--showPrec_Show__(ParseError $tok)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V41) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--show_Show__Token'(V41)) end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--showPrec_Show__Token'(V42, V43)) end end}, V39, V40)) end end}}, V6))(V7))), {'Idris.Prelude.Types.Right', V44} end), case V45 of {'Idris.Prelude.Types.Left', E1} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V47) -> ('un--repl'(V2, V1, V0, V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Right', E3} -> (fun (V48) -> fun (V49) -> begin (V50 = ('un--processCatch'(V2, V1, V0, V48, V49))), case V50 of {'Idris.Prelude.Types.Left', E4} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V52) -> case V52 of 0 -> ('un--repl'(V2, V1, V0, V49)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-1552'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V0}, V6)) end; _ -> fun (V7) -> begin (V45 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V8) -> fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Termination':'un--checkTotal'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--getTotality'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V9))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V43 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), begin (V30 = (V27(V28))), (V29(V30)) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), ((V34(V36))(V35)) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V38(V39))), (V40(V39)) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V8)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show__Totality'(V15))))))))(V9))), {'Idris.Prelude.Types.Right', V43} end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V44) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V44)) end, V5))))(V7))), case V45 of {'Idris.Prelude.Types.Left', E4} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V47) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in process-1444'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [E0 | E1] -> (fun (V10, V11) -> case V11 of [] -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V10)))); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V12)) end, V9)))))) end end(E0, E1)); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V13)) end, V9)))))) end.
'case--case block in process-1372'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Core.TT.MissingCases', E0} -> (fun (V10) -> fun (V11) -> begin (V40 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V7)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<":\x{a}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V39) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(Term $vars)'([], V39)) end, V10))))))))))(V11))), {'Idris.Prelude.Types.Right', V40} end end end(E0)); {'Idris.Core.TT.NonCoveringCall', E1} -> (fun (V41) -> fun (V42) -> begin (V74 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> V49 end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V53(V55))), begin (V57 = (V54(V55))), (V56(V57)) end end end end end end end}, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V60(V62))), ((V61(V63))(V62)) end end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> begin (V67 = (V65(V66))), (V67(V66)) end end end end}, fun (V68) -> fun (V69) -> V69 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V7)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<": Calls non covering function"/utf8>>, case V41 of [E2 | E3] -> (fun (V70, V71) -> case V71 of [] -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V70)))); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V72) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V72)) end, V41)))))) end end(E2, E3)); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V73) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V73)) end, V41)))))) end))))))(V42))), {'Idris.Prelude.Types.Right', V74} end end end(E1)); _ -> fun (V75) -> begin (V103 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V78, V79, V80)) end end end end end, fun (V81) -> fun (V82) -> fun (V83) -> V82 end end end, fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> begin (V89 = (V86(V88))), begin (V90 = (V87(V88))), (V89(V90)) end end end end end end end}, fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> begin (V96 = (V93(V95))), ((V94(V96))(V95)) end end end end end end, fun (V97) -> fun (V98) -> fun (V99) -> begin (V100 = (V98(V99))), (V100(V99)) end end end end}, fun (V101) -> fun (V102) -> V102 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V7)), <<": All cases covered"/utf8>>))))(V75))), {'Idris.Prelude.Types.Right', V103} end end end.
'case--process-1318'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V0}, V6)) end; _ -> fun (V7) -> begin (V17 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V8) -> fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Context':'un--getTotality'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = V5), (('case--case block in process-1372'(V0, V1, V2, V3, V4, V5, V13, V8, V12, case V12 of {'Idris.Core.TT.MkTotality', E2, E3} -> (fun (V14, V15) -> V15 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V16) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V16)) end, V5))))(V7))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in process-1139'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of [E0 | E1] -> (fun (V13, V14) -> case V13 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V15, V16) -> fun (V17) -> begin (V48 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> V24 end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), begin (V32 = (V29(V30))), (V31(V32)) end end end end end end end}, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), ((V36(V38))(V37)) end end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V40(V41))), (V42(V41)) end end end end}, fun (V43) -> fun (V44) -> V44 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__ImpClause'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__ImpClause'(V46, V47)) end end}, V16))))(V17))), {'Idris.Prelude.Types.Right', V48} end end end(E2, E3)); _ -> fun (V49) -> begin (V77 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V52, V53, V54)) end end end end end, fun (V55) -> fun (V56) -> fun (V57) -> V56 end end end, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V60(V62))), begin (V64 = (V61(V62))), (V63(V64)) end end end end end end end}, fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> begin (V70 = (V67(V69))), ((V68(V70))(V69)) end end end end end end, fun (V71) -> fun (V72) -> fun (V73) -> begin (V74 = (V72(V73))), (V74(V73)) end end end end}, fun (V75) -> fun (V76) -> V76 end end}, <<"Failed"/utf8>>))(V49))), {'Idris.Prelude.Types.Right', V77} end end end end(E0, E1)); _ -> fun (V78) -> begin (V106 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V81, V82, V83)) end end end end end, fun (V84) -> fun (V85) -> fun (V86) -> V85 end end end, fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> begin (V92 = (V89(V91))), begin (V93 = (V90(V91))), (V92(V93)) end end end end end end end}, fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> begin (V99 = (V96(V98))), ((V97(V99))(V98)) end end end end end end, fun (V100) -> fun (V101) -> fun (V102) -> begin (V103 = (V101(V102))), (V103(V102)) end end end end}, fun (V104) -> fun (V105) -> V105 end end}, <<"Failed"/utf8>>))(V78))), {'Idris.Prelude.Types.Right', V106} end end end.
'case--case block in process-1077'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Just', E0} -> (fun (V12) -> case V12 of {'Idris.Core.Context.None'} -> (fun () -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V14) -> begin (V18 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V4, fun () -> <<"Generation"/utf8>> end, fun (V15) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V4, V3, V2, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.FC':'un--onLine'(V1, V16)) end end, (1 + 0), V9, V15)) end, V14))), case V18 of {'Idris.Prelude.Types.Left', E1} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V20) -> case V20 of [E3 | E4] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V23, V24) -> begin (V55 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__ImpClause'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__ImpClause'(V53, V54)) end end}, V24))))(V14))), {'Idris.Prelude.Types.Right', V55} end end(E5, E6)); _ -> begin (V83 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V58, V59, V60)) end end end end end, fun (V61) -> fun (V62) -> fun (V63) -> V62 end end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> begin (V69 = (V66(V68))), begin (V70 = (V67(V68))), (V69(V70)) end end end end end end end}, fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> begin (V76 = (V73(V75))), ((V74(V76))(V75)) end end end end end end, fun (V77) -> fun (V78) -> fun (V79) -> begin (V80 = (V78(V79))), (V80(V79)) end end end end}, fun (V81) -> fun (V82) -> V82 end end}, <<"Failed"/utf8>>))(V14))), {'Idris.Prelude.Types.Right', V83} end end end(E3, E4)); _ -> begin (V111 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V86, V87, V88)) end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> V90 end end end, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> begin (V97 = (V94(V96))), begin (V98 = (V95(V96))), (V97(V98)) end end end end end end end}, fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> begin (V104 = (V101(V103))), ((V102(V104))(V103)) end end end end end end, fun (V105) -> fun (V106) -> fun (V107) -> begin (V108 = (V106(V107))), (V108(V107)) end end end end}, fun (V109) -> fun (V110) -> V110 end end}, <<"Failed"/utf8>>))(V14))), {'Idris.Prelude.Types.Right', V111} end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V112) -> fun (V113) -> begin (V141 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V116, V117, V118)) end end end end end, fun (V119) -> fun (V120) -> fun (V121) -> V120 end end end, fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> begin (V127 = (V124(V126))), begin (V128 = (V125(V126))), (V127(V128)) end end end end end end end}, fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> begin (V134 = (V131(V133))), ((V132(V134))(V133)) end end end end end end, fun (V135) -> fun (V136) -> fun (V137) -> begin (V138 = (V136(V137))), (V138(V137)) end end end end}, fun (V139) -> fun (V140) -> V140 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V9))))))(V113))), {'Idris.Prelude.Types.Right', V141} end end end, V13)) end end()); _ -> fun (V142) -> begin (V170 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V145, V146, V147)) end end end end end, fun (V148) -> fun (V149) -> fun (V150) -> V149 end end end, fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> begin (V156 = (V153(V155))), begin (V157 = (V154(V155))), (V156(V157)) end end end end end end end}, fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> begin (V163 = (V160(V162))), ((V161(V163))(V162)) end end end end end end, fun (V164) -> fun (V165) -> fun (V166) -> begin (V167 = (V165(V166))), (V167(V166)) end end end end}, fun (V168) -> fun (V169) -> V169 end end}, <<"Already defined"/utf8>>))(V142))), {'Idris.Prelude.Types.Right', V170} end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V171) -> begin (V199 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V174, V175, V176)) end end end end end, fun (V177) -> fun (V178) -> fun (V179) -> V178 end end end, fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> begin (V185 = (V182(V184))), begin (V186 = (V183(V184))), (V185(V186)) end end end end end end end}, fun (V187) -> fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> begin (V192 = (V189(V191))), ((V190(V192))(V191)) end end end end end end, fun (V193) -> fun (V194) -> fun (V195) -> begin (V196 = (V194(V195))), (V196(V195)) end end end end}, fun (V197) -> fun (V198) -> V198 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V0))))))(V171))), {'Idris.Prelude.Types.Right', V199} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-1028'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V12, V13) -> fun (V14) -> begin (V229 = begin (V41 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V10, case V5 of {'Idris.Core.Context.MkDefs', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V15 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V14))), case V41 of {'Idris.Prelude.Types.Left', E33} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V43) -> case V43 of {'Idris.Prelude.Types.Just', E35} -> (fun (V44) -> case V44 of {'Idris.Core.Context.None'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V45) -> begin (V49 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V4, fun () -> <<"Generation"/utf8>> end, fun (V46) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V4, V3, V2, fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.FC':'un--onLine'(V1, V47)) end end, (1 + 0), V10, V46)) end, V45))), case V49 of {'Idris.Prelude.Types.Left', E36} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V51) -> case V51 of [E38 | E39] -> (fun (V52, V53) -> case V52 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V54, V55) -> begin (V86 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V58, V59, V60)) end end end end end, fun (V61) -> fun (V62) -> fun (V63) -> V62 end end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> begin (V69 = (V66(V68))), begin (V70 = (V67(V68))), (V69(V70)) end end end end end end end}, fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> begin (V76 = (V73(V75))), ((V74(V76))(V75)) end end end end end end, fun (V77) -> fun (V78) -> fun (V79) -> begin (V80 = (V78(V79))), (V80(V79)) end end end end}, fun (V81) -> fun (V82) -> V82 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V83) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__ImpClause'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__ImpClause'(V84, V85)) end end}, V55))))(V45))), {'Idris.Prelude.Types.Right', V86} end end(E40, E41)); _ -> begin (V114 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V89, V90, V91)) end end end end end, fun (V92) -> fun (V93) -> fun (V94) -> V93 end end end, fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> begin (V100 = (V97(V99))), begin (V101 = (V98(V99))), (V100(V101)) end end end end end end end}, fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> begin (V107 = (V104(V106))), ((V105(V107))(V106)) end end end end end end, fun (V108) -> fun (V109) -> fun (V110) -> begin (V111 = (V109(V110))), (V111(V110)) end end end end}, fun (V112) -> fun (V113) -> V113 end end}, <<"Failed"/utf8>>))(V45))), {'Idris.Prelude.Types.Right', V114} end end end(E38, E39)); _ -> begin (V142 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V117, V118, V119)) end end end end end, fun (V120) -> fun (V121) -> fun (V122) -> V121 end end end, fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> begin (V128 = (V125(V127))), begin (V129 = (V126(V127))), (V128(V129)) end end end end end end end}, fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> begin (V135 = (V132(V134))), ((V133(V135))(V134)) end end end end end end, fun (V136) -> fun (V137) -> fun (V138) -> begin (V139 = (V137(V138))), (V139(V138)) end end end end}, fun (V140) -> fun (V141) -> V141 end end}, <<"Failed"/utf8>>))(V45))), {'Idris.Prelude.Types.Right', V142} end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V143) -> fun (V144) -> begin (V172 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V147, V148, V149)) end end end end end, fun (V150) -> fun (V151) -> fun (V152) -> V151 end end end, fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> begin (V158 = (V155(V157))), begin (V159 = (V156(V157))), (V158(V159)) end end end end end end end}, fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> begin (V165 = (V162(V164))), ((V163(V165))(V164)) end end end end end end, fun (V166) -> fun (V167) -> fun (V168) -> begin (V169 = (V167(V168))), (V169(V168)) end end end end}, fun (V170) -> fun (V171) -> V171 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V10))))))(V144))), {'Idris.Prelude.Types.Right', V172} end end end, V14)) end()); _ -> begin (V200 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V175, V176, V177)) end end end end end, fun (V178) -> fun (V179) -> fun (V180) -> V179 end end end, fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> begin (V186 = (V183(V185))), begin (V187 = (V184(V185))), (V186(V187)) end end end end end end end}, fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> begin (V193 = (V190(V192))), ((V191(V193))(V192)) end end end end end end, fun (V194) -> fun (V195) -> fun (V196) -> begin (V197 = (V195(V196))), (V197(V196)) end end end end}, fun (V198) -> fun (V199) -> V199 end end}, <<"Already defined"/utf8>>))(V14))), {'Idris.Prelude.Types.Right', V200} end end end(E35)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V228 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V203, V204, V205)) end end end end end, fun (V206) -> fun (V207) -> fun (V208) -> V207 end end end, fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> begin (V214 = (V211(V213))), begin (V215 = (V212(V213))), (V214(V215)) end end end end end end end}, fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> begin (V221 = (V218(V220))), ((V219(V221))(V220)) end end end end end end, fun (V222) -> fun (V223) -> fun (V224) -> begin (V225 = (V223(V224))), (V225(V224)) end end end end}, fun (V226) -> fun (V227) -> V227 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V0))))))(V14))), {'Idris.Prelude.Types.Right', V228} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V229 of {'Idris.Prelude.Types.Left', E42} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V231) -> {'Idris.Prelude.Types.Right', 0} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V232) -> begin (V261 = begin (V260 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V235, V236, V237)) end end end end end, fun (V238) -> fun (V239) -> fun (V240) -> V239 end end end, fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> fun (V245) -> begin (V246 = (V243(V245))), begin (V247 = (V244(V245))), (V246(V247)) end end end end end end end}, fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> fun (V252) -> begin (V253 = (V250(V252))), ((V251(V253))(V252)) end end end end end end, fun (V254) -> fun (V255) -> fun (V256) -> begin (V257 = (V255(V256))), (V257(V256)) end end end end}, fun (V258) -> fun (V259) -> V259 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V0))))))(V232))), {'Idris.Prelude.Types.Right', V260} end), case V261 of {'Idris.Prelude.Types.Left', E44} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V263) -> {'Idris.Prelude.Types.Right', 0} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-909'(V0, V1, V2, V3, V4, V5) -> case V5 of [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V10, V11) -> case V7 of [] -> fun (V12) -> begin (V13 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V3, V2, V1, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), (1 + 0), V8, [], V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V49 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V16) -> fun (V17) -> begin (V48 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> V24 end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), begin (V32 = (V29(V30))), (V31(V32)) end end end end end end end}, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), ((V36(V38))(V37)) end end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V40(V41))), (V42(V41)) end end end end}, fun (V43) -> fun (V44) -> V44 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V46, V47)) end end}}, V16))(V17))), {'Idris.Prelude.Types.Right', V48} end end end, V15))(V12))), case V49 of {'Idris.Prelude.Types.Left', E8} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V51) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V52) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V53) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V53)) end, V5))}, V52)) end end end(E4, E5)); _ -> fun (V54) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V55) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V55)) end, V5))}, V54)) end end end(E2, E3)); _ -> fun (V56) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V57) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V57)) end, V5))}, V56)) end end end(E0, E1)); [] -> fun (V58) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V0}, V58)) end; _ -> fun (V59) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V60) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V60)) end, V5))}, V59)) end end.
'case--process-770'(V0, V1, V2, V3, V4, V5) -> case V5 of [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V10, V11) -> case V7 of [] -> fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Unify':'un--search'([], V3, V1, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), 1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(1000)), V8, V11, {'Idris.Core.Env.Nil'}, V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V19) -> begin (V20 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V3, [], V19, {'Idris.Core.Env.Nil'}, V15, V12))), case V20 of {'Idris.Prelude.Types.Left', E10} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V22) -> begin (V61 = begin (V27 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V3, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__(Term $vars)'('erased', V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'('erased', V25, V26)) end end}, V22, V12))), case V27 of {'Idris.Prelude.Types.Left', E12} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V29) -> begin (V60 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V32, V33, V34)) end end end end end, fun (V35) -> fun (V36) -> fun (V37) -> V36 end end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> begin (V43 = (V40(V42))), begin (V44 = (V41(V42))), (V43(V44)) end end end end end end end}, fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> begin (V50 = (V47(V49))), ((V48(V50))(V49)) end end end end end end, fun (V51) -> fun (V52) -> fun (V53) -> begin (V54 = (V52(V53))), (V54(V53)) end end end end}, fun (V55) -> fun (V56) -> V56 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V57) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(Term $vars)'([], V57)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(Term $vars)'([], V58, V59)) end end}}, V29))(V12))), {'Idris.Prelude.Types.Right', V60} end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V61 of {'Idris.Prelude.Types.Left', E14} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V63) -> {'Idris.Prelude.Types.Right', 0} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V64) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V65) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V65)) end, V5))}, V64)) end end end(E4, E5)); _ -> fun (V66) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V67) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V67)) end, V5))}, V66)) end end end(E2, E3)); _ -> fun (V68) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V69) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V69)) end, V5))}, V68)) end end end(E0, E1)); [] -> fun (V70) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V0}, V70)) end; _ -> fun (V71) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V72) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V72)) end, V5))}, V71)) end end.
'case--process-693'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> begin (V9 = begin (V8 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V8} end), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V6))(V7))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V3, [], V11, {'Idris.Core.Env.Nil'}, V14, V7))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V52 = begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V3, {'Idris.Core.Env.Nil'}, V17))(V7))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V51 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V23, V24, V25)) end end end end end, fun (V26) -> fun (V27) -> fun (V28) -> V27 end end end, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V31(V33))), begin (V35 = (V32(V33))), (V34(V35)) end end end end end end end}, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> begin (V41 = (V38(V40))), ((V39(V41))(V40)) end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V43(V44))), (V45(V44)) end end end end}, fun (V46) -> fun (V47) -> V47 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V49, V50)) end end}}, V20))(V7))), {'Idris.Prelude.Types.Right', V51} end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E10} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V54) -> {'Idris.Prelude.Types.Right', 0} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-536'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> begin (V9 = begin (V8 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V8} end), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V3, [], V11, {'Idris.Core.Env.Nil'}, V5, V7))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V49 = begin (V15 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V3, {'Idris.Core.Env.Nil'}, V14))(V7))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V48 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> V24 end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), begin (V32 = (V29(V30))), (V31(V32)) end end end end end end end}, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), ((V36(V38))(V37)) end end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V40(V41))), (V42(V41)) end end end end}, fun (V43) -> fun (V44) -> V44 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V46, V47)) end end}}, V17))(V7))), {'Idris.Prelude.Types.Right', V48} end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V49 of {'Idris.Prelude.Types.Left', E8} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V51) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13172-596--in--un--printName'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> fun (V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V4, [], V14, {'Idris.Core.Env.Nil'}, V9, V10))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V4, {'Idris.Core.Env.Nil'}, V17))(V10))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V48 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V23, V24, V25)) end end end end end, fun (V26) -> fun (V27) -> fun (V28) -> V27 end end end, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V31(V33))), begin (V35 = (V32(V33))), (V34(V35)) end end end end end end end}, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> begin (V41 = (V38(V40))), ((V39(V41))(V40)) end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V43(V44))), (V45(V44)) end end end end}, fun (V46) -> fun (V47) -> V47 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V6)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V20))))))))(V10))), {'Idris.Prelude.Types.Right', V48} end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--showInfo'(V0) -> case V0 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V3, V4) -> fun (V5) -> begin (V78 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), ((V24(V26))(V25)) end end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V28(V29))), (V30(V29)) end end end end}, fun (V31) -> fun (V32) -> V32 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V1)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" ==>\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Context':'dn--un--show_Show__Def'(case V4 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53) -> V50 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V54) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show__SCCall'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show__SCCall'(V55, V56)) end end}, case V4 of {'Idris.Core.Context.MkGlobalDef', E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77) -> V77 end(E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), <<"\x{a}"/utf8>>))))))))))))))))(V5))), {'Idris.Prelude.Types.Right', V78} end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--repl'(V0, V1, V2, V3) -> begin (V32 = begin (V31 = (('Idris.Idris2.Prelude.IO':'un--putStr'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V6, V7, V8)) end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> V10 end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> begin (V17 = (V14(V16))), begin (V18 = (V15(V16))), (V17(V18)) end end end end end end end}, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), ((V22(V24))(V23)) end end end end end end, fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V26(V27))), (V28(V27)) end end end end}, fun (V29) -> fun (V30) -> V30 end end}, <<"Yaffle> "/utf8>>))(V3))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E0} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V34) -> begin (V63 = begin (V62 = (('Idris.Idris2.Prelude.IO':'un--getLine'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V37, V38, V39)) end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> V41 end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> begin (V48 = (V45(V47))), begin (V49 = (V46(V47))), (V48(V49)) end end end end end end end}, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> begin (V55 = (V52(V54))), ((V53(V55))(V54)) end end end end end end, fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V57(V58))), (V59(V58)) end end end end}, fun (V60) -> fun (V61) -> V61 end end}))(V3))), {'Idris.Prelude.Types.Right', V62} end), case V63 of {'Idris.Prelude.Types.Left', E2} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V65) -> (('case--repl-1716'(V2, V1, V0, V34, V65, ('Idris.Idris2.Parser.Source':'un--runParser'('erased', 0, {'Idris.Prelude.Types.Nothing'}, V65, ('Idris.Idris2.TTImp.Parser':'un--command'())))))(V3)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--processCatch'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', ('un--process'(V0, V1, V2, V3)), fun (V5) -> fun (V6) -> begin (V35 = begin (V34 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> V13 end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> begin (V20 = (V17(V19))), begin (V21 = (V18(V19))), (V20(V21)) end end end end end end end}, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V24(V26))), ((V25(V27))(V26)) end end end end end end, fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V29(V30))), (V31(V30)) end end end end}, fun (V32) -> fun (V33) -> V33 end end}, ('Idris.Idris2.Core.Core':'dn--un--show_Show__Error'(V5))))(V6))), {'Idris.Prelude.Types.Right', V34} end), case V35 of {'Idris.Prelude.Types.Left', E0} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V37) -> {'Idris.Prelude.Types.Right', 0} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V4)).
'un--process'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.Eval', E0} -> (fun (V4) -> fun (V5) -> begin (V6 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V4, {'Idris.Prelude.Types.Nothing'}))(V5))), case V6 of {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, [], V14, {'Idris.Core.Env.Nil'}, V9, V5))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V52 = begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V17))(V5))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V51 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V23, V24, V25)) end end end end end, fun (V26) -> fun (V27) -> fun (V28) -> V27 end end end, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V31(V33))), begin (V35 = (V32(V33))), (V34(V35)) end end end end end end end}, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> begin (V41 = (V38(V40))), ((V39(V41))(V40)) end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V43(V44))), (V45(V44)) end end end end}, fun (V46) -> fun (V47) -> V47 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V49, V50)) end end}}, V20))(V5))), {'Idris.Prelude.Types.Right', V51} end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E11} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V54) -> {'Idris.Prelude.Types.Right', 0} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.Check', E13} -> (fun (V55) -> case V55 of {'Idris.TTImp.TTImp.IVar', E28, E29} -> (fun (V56, V57) -> fun (V58) -> begin (V60 = begin (V59 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V59} end), case V60 of {'Idris.Prelude.Types.Left', E30} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V62) -> begin (V89 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V57, case V62 of {'Idris.Core.Context.MkDefs', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88) -> V63 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V58))), case V89 of {'Idris.Prelude.Types.Left', E58} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V91) -> begin (V93 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V92) -> ('nested--13172-596--in--un--printName'(V56, V57, V2, V1, V0, V92)) end, V91, []))(V58))), case V93 of {'Idris.Prelude.Types.Left', E60} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V95) -> {'Idris.Prelude.Types.Right', 0} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E28, E29)); _ -> fun (V96) -> begin (V97 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V55, {'Idris.Prelude.Types.Nothing'}))(V96))), case V97 of {'Idris.Prelude.Types.Left', E14} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V99) -> case V99 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V100, V101) -> begin (V103 = begin (V102 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V102} end), case V103 of {'Idris.Prelude.Types.Left', E18} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V105) -> begin (V106 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V101))(V96))), case V106 of {'Idris.Prelude.Types.Left', E20} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V108) -> begin (V109 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V105, {'Idris.Core.Env.Nil'}, V108, V96))), case V109 of {'Idris.Prelude.Types.Left', E22} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V111) -> begin (V146 = begin (V112 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V111))(V96))), case V112 of {'Idris.Prelude.Types.Left', E24} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V114) -> begin (V145 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V117, V118, V119)) end end end end end, fun (V120) -> fun (V121) -> fun (V122) -> V121 end end end, fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> begin (V128 = (V125(V127))), begin (V129 = (V126(V127))), (V128(V129)) end end end end end end end}, fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> begin (V135 = (V132(V134))), ((V133(V135))(V134)) end end end end end end, fun (V136) -> fun (V137) -> fun (V138) -> begin (V139 = (V137(V138))), (V139(V138)) end end end end}, fun (V140) -> fun (V141) -> V141 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V142) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V142)) end, fun (V143) -> fun (V144) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V143, V144)) end end}}, V114))(V96))), {'Idris.Prelude.Types.Right', V145} end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V146 of {'Idris.Prelude.Types.Left', E26} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V148) -> {'Idris.Prelude.Types.Right', 0} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E13)); {'Idris.TTImp.TTImp.ProofSearch', E62} -> (fun (V149) -> fun (V150) -> begin (V152 = begin (V151 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V151} end), case V152 of {'Idris.Prelude.Types.Left', E63} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V154) -> begin (V181 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V149, case V154 of {'Idris.Core.Context.MkDefs', E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90} -> (fun (V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180) -> V155 end(E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V150))), case V181 of {'Idris.Prelude.Types.Left', E91} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V183) -> case V183 of [E93 | E94] -> (fun (V184, V185) -> case V184 of {'Idris.Builtin.MkPair', E95, E96} -> (fun (V186, V187) -> case V187 of {'Idris.Builtin.MkPair', E97, E98} -> (fun (V188, V189) -> case V185 of [] -> begin (V190 = ('Idris.Idris2.Core.Unify':'un--search'([], V0, V2, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), 1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(1000)), V186, V189, {'Idris.Core.Env.Nil'}, V150))), case V190 of {'Idris.Prelude.Types.Left', E99} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V192) -> begin (V194 = begin (V193 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V193} end), case V194 of {'Idris.Prelude.Types.Left', E101} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V196) -> begin (V197 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V196, {'Idris.Core.Env.Nil'}, V192, V150))), case V197 of {'Idris.Prelude.Types.Left', E103} -> (fun (V198) -> {'Idris.Prelude.Types.Left', V198} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V199) -> begin (V238 = begin (V204 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V200) -> fun (V201) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__(Term $vars)'('erased', V200, V201)) end end, fun (V202) -> fun (V203) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'('erased', V202, V203)) end end}, V199, V150))), case V204 of {'Idris.Prelude.Types.Left', E105} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V206) -> begin (V237 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V209, V210, V211)) end end end end end, fun (V212) -> fun (V213) -> fun (V214) -> V213 end end end, fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> begin (V220 = (V217(V219))), begin (V221 = (V218(V219))), (V220(V221)) end end end end end end end}, fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> begin (V227 = (V224(V226))), ((V225(V227))(V226)) end end end end end end, fun (V228) -> fun (V229) -> fun (V230) -> begin (V231 = (V229(V230))), (V231(V230)) end end end end}, fun (V232) -> fun (V233) -> V233 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V234) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(Term $vars)'([], V234)) end, fun (V235) -> fun (V236) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(Term $vars)'([], V235, V236)) end end}}, V206))(V150))), {'Idris.Prelude.Types.Right', V237} end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V238 of {'Idris.Prelude.Types.Left', E107} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V240) -> {'Idris.Prelude.Types.Right', 0} end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V241) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V241)) end, V183))}, V150)) end end(E97, E98)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V242) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V242)) end, V183))}, V150)) end end(E95, E96)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V243) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V243)) end, V183))}, V150)) end end(E93, E94)); [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V149}, V150)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V244) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V244)) end, V183))}, V150)) end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E62)); {'Idris.TTImp.TTImp.ExprSearch', E109} -> (fun (V245) -> fun (V246) -> begin (V248 = begin (V247 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V247} end), case V248 of {'Idris.Prelude.Types.Left', E110} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V250) -> begin (V277 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V245, case V250 of {'Idris.Core.Context.MkDefs', E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137} -> (fun (V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276) -> V251 end(E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V246))), case V277 of {'Idris.Prelude.Types.Left', E138} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V279) -> case V279 of [E140 | E141] -> (fun (V280, V281) -> case V280 of {'Idris.Builtin.MkPair', E142, E143} -> (fun (V282, V283) -> case V283 of {'Idris.Builtin.MkPair', E144, E145} -> (fun (V284, V285) -> case V281 of [] -> begin (V286 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V0, V1, V2, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), (1 + 0), V282, [], V246))), case V286 of {'Idris.Prelude.Types.Left', E146} -> (fun (V287) -> {'Idris.Prelude.Types.Left', V287} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V288) -> begin (V322 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V289) -> fun (V290) -> begin (V321 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V291) -> fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V293, V294, V295)) end end end end end, fun (V296) -> fun (V297) -> fun (V298) -> V297 end end end, fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> fun (V303) -> begin (V304 = (V301(V303))), begin (V305 = (V302(V303))), (V304(V305)) end end end end end end end}, fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> begin (V311 = (V308(V310))), ((V309(V311))(V310)) end end end end end end, fun (V312) -> fun (V313) -> fun (V314) -> begin (V315 = (V313(V314))), (V315(V314)) end end end end}, fun (V316) -> fun (V317) -> V317 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V318) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V318)) end, fun (V319) -> fun (V320) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V319, V320)) end end}}, V289))(V290))), {'Idris.Prelude.Types.Right', V321} end end end, V288))(V246))), case V322 of {'Idris.Prelude.Types.Left', E148} -> (fun (V323) -> {'Idris.Prelude.Types.Left', V323} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V324) -> {'Idris.Prelude.Types.Right', 0} end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V325) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V325)) end, V279))}, V246)) end end(E144, E145)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V326) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V326)) end, V279))}, V246)) end end(E142, E143)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V327) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V327)) end, V279))}, V246)) end end(E140, E141)); [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V245}, V246)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V328) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V328)) end, V279))}, V246)) end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E109)); {'Idris.TTImp.TTImp.GenerateDef', E150, E151} -> (fun (V329, V330) -> fun (V331) -> begin (V333 = begin (V332 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V332} end), case V333 of {'Idris.Prelude.Types.Left', E152} -> (fun (V334) -> {'Idris.Prelude.Types.Left', V334} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V335) -> begin (V338 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V1, fun (V336) -> fun (V337) -> ('Idris.Idris2.Core.FC':'un--onLine'(V329, V336)) end end, V331))), case V338 of {'Idris.Prelude.Types.Left', E154} -> (fun (V339) -> {'Idris.Prelude.Types.Left', V339} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V340) -> case V340 of {'Idris.Prelude.Types.Just', E156} -> (fun (V341) -> case V341 of {'Idris.Builtin.MkPair', E157, E158} -> (fun (V342, V343) -> case V343 of {'Idris.Builtin.MkPair', E159, E160} -> (fun (V344, V345) -> case V345 of {'Idris.Builtin.MkPair', E161, E162} -> (fun (V346, V347) -> begin (V562 = begin (V374 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V344, case V335 of {'Idris.Core.Context.MkDefs', E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188} -> (fun (V348, V349, V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373) -> V348 end(E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V331))), case V374 of {'Idris.Prelude.Types.Left', E189} -> (fun (V375) -> {'Idris.Prelude.Types.Left', V375} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V376) -> case V376 of {'Idris.Prelude.Types.Just', E191} -> (fun (V377) -> case V377 of {'Idris.Core.Context.None'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V378) -> begin (V382 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V0, fun () -> <<"Generation"/utf8>> end, fun (V379) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V0, V1, V2, fun (V380) -> fun (V381) -> ('Idris.Idris2.Core.FC':'un--onLine'(V329, V380)) end end, (1 + 0), V344, V379)) end, V378))), case V382 of {'Idris.Prelude.Types.Left', E192} -> (fun (V383) -> {'Idris.Prelude.Types.Left', V383} end(E192)); {'Idris.Prelude.Types.Right', E193} -> (fun (V384) -> case V384 of [E194 | E195] -> (fun (V385, V386) -> case V385 of {'Idris.Builtin.MkPair', E196, E197} -> (fun (V387, V388) -> begin (V419 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V389) -> fun (V390) -> fun (V391) -> fun (V392) -> fun (V393) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V391, V392, V393)) end end end end end, fun (V394) -> fun (V395) -> fun (V396) -> V395 end end end, fun (V397) -> fun (V398) -> fun (V399) -> fun (V400) -> fun (V401) -> begin (V402 = (V399(V401))), begin (V403 = (V400(V401))), (V402(V403)) end end end end end end end}, fun (V404) -> fun (V405) -> fun (V406) -> fun (V407) -> fun (V408) -> begin (V409 = (V406(V408))), ((V407(V409))(V408)) end end end end end end, fun (V410) -> fun (V411) -> fun (V412) -> begin (V413 = (V411(V412))), (V413(V412)) end end end end}, fun (V414) -> fun (V415) -> V415 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V416) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__ImpClause'(V416)) end, fun (V417) -> fun (V418) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__ImpClause'(V417, V418)) end end}, V388))))(V378))), {'Idris.Prelude.Types.Right', V419} end end(E196, E197)); _ -> begin (V447 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> fun (V424) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V422, V423, V424)) end end end end end, fun (V425) -> fun (V426) -> fun (V427) -> V426 end end end, fun (V428) -> fun (V429) -> fun (V430) -> fun (V431) -> fun (V432) -> begin (V433 = (V430(V432))), begin (V434 = (V431(V432))), (V433(V434)) end end end end end end end}, fun (V435) -> fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> begin (V440 = (V437(V439))), ((V438(V440))(V439)) end end end end end end, fun (V441) -> fun (V442) -> fun (V443) -> begin (V444 = (V442(V443))), (V444(V443)) end end end end}, fun (V445) -> fun (V446) -> V446 end end}, <<"Failed"/utf8>>))(V378))), {'Idris.Prelude.Types.Right', V447} end end end(E194, E195)); _ -> begin (V475 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V448) -> fun (V449) -> fun (V450) -> fun (V451) -> fun (V452) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V450, V451, V452)) end end end end end, fun (V453) -> fun (V454) -> fun (V455) -> V454 end end end, fun (V456) -> fun (V457) -> fun (V458) -> fun (V459) -> fun (V460) -> begin (V461 = (V458(V460))), begin (V462 = (V459(V460))), (V461(V462)) end end end end end end end}, fun (V463) -> fun (V464) -> fun (V465) -> fun (V466) -> fun (V467) -> begin (V468 = (V465(V467))), ((V466(V468))(V467)) end end end end end end, fun (V469) -> fun (V470) -> fun (V471) -> begin (V472 = (V470(V471))), (V472(V471)) end end end end}, fun (V473) -> fun (V474) -> V474 end end}, <<"Failed"/utf8>>))(V378))), {'Idris.Prelude.Types.Right', V475} end end end(E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V476) -> fun (V477) -> begin (V505 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V478) -> fun (V479) -> fun (V480) -> fun (V481) -> fun (V482) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V480, V481, V482)) end end end end end, fun (V483) -> fun (V484) -> fun (V485) -> V484 end end end, fun (V486) -> fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> begin (V491 = (V488(V490))), begin (V492 = (V489(V490))), (V491(V492)) end end end end end end end}, fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> begin (V498 = (V495(V497))), ((V496(V498))(V497)) end end end end end end, fun (V499) -> fun (V500) -> fun (V501) -> begin (V502 = (V500(V501))), (V502(V501)) end end end end}, fun (V503) -> fun (V504) -> V504 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V344))))))(V477))), {'Idris.Prelude.Types.Right', V505} end end end, V331)) end()); _ -> begin (V533 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V506) -> fun (V507) -> fun (V508) -> fun (V509) -> fun (V510) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V508, V509, V510)) end end end end end, fun (V511) -> fun (V512) -> fun (V513) -> V512 end end end, fun (V514) -> fun (V515) -> fun (V516) -> fun (V517) -> fun (V518) -> begin (V519 = (V516(V518))), begin (V520 = (V517(V518))), (V519(V520)) end end end end end end end}, fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> fun (V525) -> begin (V526 = (V523(V525))), ((V524(V526))(V525)) end end end end end end, fun (V527) -> fun (V528) -> fun (V529) -> begin (V530 = (V528(V529))), (V530(V529)) end end end end}, fun (V531) -> fun (V532) -> V532 end end}, <<"Already defined"/utf8>>))(V331))), {'Idris.Prelude.Types.Right', V533} end end end(E191)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V561 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V534) -> fun (V535) -> fun (V536) -> fun (V537) -> fun (V538) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V536, V537, V538)) end end end end end, fun (V539) -> fun (V540) -> fun (V541) -> V540 end end end, fun (V542) -> fun (V543) -> fun (V544) -> fun (V545) -> fun (V546) -> begin (V547 = (V544(V546))), begin (V548 = (V545(V546))), (V547(V548)) end end end end end end end}, fun (V549) -> fun (V550) -> fun (V551) -> fun (V552) -> fun (V553) -> begin (V554 = (V551(V553))), ((V552(V554))(V553)) end end end end end end, fun (V555) -> fun (V556) -> fun (V557) -> begin (V558 = (V556(V557))), (V558(V557)) end end end end}, fun (V559) -> fun (V560) -> V560 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V330))))))(V331))), {'Idris.Prelude.Types.Right', V561} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V562 of {'Idris.Prelude.Types.Left', E198} -> (fun (V563) -> {'Idris.Prelude.Types.Left', V563} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V564) -> {'Idris.Prelude.Types.Right', 0} end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E161, E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E159, E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E157, E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E156)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V593 = begin (V592 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V565) -> fun (V566) -> fun (V567) -> fun (V568) -> fun (V569) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V567, V568, V569)) end end end end end, fun (V570) -> fun (V571) -> fun (V572) -> V571 end end end, fun (V573) -> fun (V574) -> fun (V575) -> fun (V576) -> fun (V577) -> begin (V578 = (V575(V577))), begin (V579 = (V576(V577))), (V578(V579)) end end end end end end end}, fun (V580) -> fun (V581) -> fun (V582) -> fun (V583) -> fun (V584) -> begin (V585 = (V582(V584))), ((V583(V585))(V584)) end end end end end end, fun (V586) -> fun (V587) -> fun (V588) -> begin (V589 = (V587(V588))), (V589(V588)) end end end end}, fun (V590) -> fun (V591) -> V591 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V330))))))(V331))), {'Idris.Prelude.Types.Right', V592} end), case V593 of {'Idris.Prelude.Types.Left', E200} -> (fun (V594) -> {'Idris.Prelude.Types.Left', V594} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V595) -> {'Idris.Prelude.Types.Right', 0} end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E150, E151)); {'Idris.TTImp.TTImp.Missing', E202} -> (fun (V596) -> fun (V597) -> begin (V599 = begin (V598 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V598} end), case V599 of {'Idris.Prelude.Types.Left', E203} -> (fun (V600) -> {'Idris.Prelude.Types.Left', V600} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V601) -> begin (V628 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V596, case V601 of {'Idris.Core.Context.MkDefs', E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230} -> (fun (V602, V603, V604, V605, V606, V607, V608, V609, V610, V611, V612, V613, V614, V615, V616, V617, V618, V619, V620, V621, V622, V623, V624, V625, V626, V627) -> V602 end(E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V597))), case V628 of {'Idris.Prelude.Types.Left', E231} -> (fun (V629) -> {'Idris.Prelude.Types.Left', V629} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V630) -> case V630 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V596}, V597)); _ -> begin (V640 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V631) -> fun (V632) -> begin (V633 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V631, V632))), case V633 of {'Idris.Prelude.Types.Left', E233} -> (fun (V634) -> {'Idris.Prelude.Types.Left', V634} end(E233)); {'Idris.Prelude.Types.Right', E234} -> (fun (V635) -> begin (V636 = V630), (('case--case block in process-1372'(V596, V2, V1, V0, V601, V630, V636, V631, V635, case V635 of {'Idris.Core.TT.MkTotality', E235, E236} -> (fun (V637, V638) -> V638 end(E235, E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V632)) end end(E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V639) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V639)) end, V630))))(V597))), case V640 of {'Idris.Prelude.Types.Left', E237} -> (fun (V641) -> {'Idris.Prelude.Types.Left', V641} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V642) -> {'Idris.Prelude.Types.Right', 0} end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E202)); {'Idris.TTImp.TTImp.CheckTotal', E239} -> (fun (V643) -> fun (V644) -> begin (V646 = begin (V645 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V645} end), case V646 of {'Idris.Prelude.Types.Left', E240} -> (fun (V647) -> {'Idris.Prelude.Types.Left', V647} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V648) -> begin (V675 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V643, case V648 of {'Idris.Core.Context.MkDefs', E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267} -> (fun (V649, V650, V651, V652, V653, V654, V655, V656, V657, V658, V659, V660, V661, V662, V663, V664, V665, V666, V667, V668, V669, V670, V671, V672, V673, V674) -> V649 end(E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V644))), case V675 of {'Idris.Prelude.Types.Left', E268} -> (fun (V676) -> {'Idris.Prelude.Types.Left', V676} end(E268)); {'Idris.Prelude.Types.Right', E269} -> (fun (V677) -> case V677 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V643}, V644)); _ -> begin (V715 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V678) -> fun (V679) -> begin (V680 = ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V678, V679))), case V680 of {'Idris.Prelude.Types.Left', E270} -> (fun (V681) -> {'Idris.Prelude.Types.Left', V681} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V682) -> begin (V683 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V678, V679))), case V683 of {'Idris.Prelude.Types.Left', E272} -> (fun (V684) -> {'Idris.Prelude.Types.Left', V684} end(E272)); {'Idris.Prelude.Types.Right', E273} -> (fun (V685) -> begin (V713 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V686) -> fun (V687) -> fun (V688) -> fun (V689) -> fun (V690) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V688, V689, V690)) end end end end end, fun (V691) -> fun (V692) -> fun (V693) -> V692 end end end, fun (V694) -> fun (V695) -> fun (V696) -> fun (V697) -> fun (V698) -> begin (V699 = (V696(V698))), begin (V700 = (V697(V698))), (V699(V700)) end end end end end end end}, fun (V701) -> fun (V702) -> fun (V703) -> fun (V704) -> fun (V705) -> begin (V706 = (V703(V705))), ((V704(V706))(V705)) end end end end end end, fun (V707) -> fun (V708) -> fun (V709) -> begin (V710 = (V708(V709))), (V710(V709)) end end end end}, fun (V711) -> fun (V712) -> V712 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V678)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show__Totality'(V685))))))))(V679))), {'Idris.Prelude.Types.Right', V713} end end(E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V714) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V714)) end, V677))))(V644))), case V715 of {'Idris.Prelude.Types.Left', E274} -> (fun (V716) -> {'Idris.Prelude.Types.Left', V716} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V717) -> {'Idris.Prelude.Types.Right', 0} end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E269)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E239)); {'Idris.TTImp.TTImp.DebugInfo', E276} -> (fun (V718) -> fun (V719) -> begin (V721 = begin (V720 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V720} end), case V721 of {'Idris.Prelude.Types.Left', E277} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V723) -> begin (V754 = begin (V750 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V718, case V723 of {'Idris.Core.Context.MkDefs', E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304} -> (fun (V724, V725, V726, V727, V728, V729, V730, V731, V732, V733, V734, V735, V736, V737, V738, V739, V740, V741, V742, V743, V744, V745, V746, V747, V748, V749) -> V724 end(E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V719))), case V750 of {'Idris.Prelude.Types.Left', E305} -> (fun (V751) -> {'Idris.Prelude.Types.Left', V751} end(E305)); {'Idris.Prelude.Types.Right', E306} -> (fun (V752) -> (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V753) -> ('un--showInfo'(V753)) end, V752, []))(V719)) end(E306)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V754 of {'Idris.Prelude.Types.Left', E307} -> (fun (V755) -> {'Idris.Prelude.Types.Left', V755} end(E307)); {'Idris.Prelude.Types.Right', E308} -> (fun (V756) -> {'Idris.Prelude.Types.Right', 0} end(E308)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E276)); {'Idris.TTImp.TTImp.Quit'} -> (fun () -> fun (V757) -> begin (V786 = begin (V785 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V758) -> fun (V759) -> fun (V760) -> fun (V761) -> fun (V762) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V760, V761, V762)) end end end end end, fun (V763) -> fun (V764) -> fun (V765) -> V764 end end end, fun (V766) -> fun (V767) -> fun (V768) -> fun (V769) -> fun (V770) -> begin (V771 = (V768(V770))), begin (V772 = (V769(V770))), (V771(V772)) end end end end end end end}, fun (V773) -> fun (V774) -> fun (V775) -> fun (V776) -> fun (V777) -> begin (V778 = (V775(V777))), ((V776(V778))(V777)) end end end end end end, fun (V779) -> fun (V780) -> fun (V781) -> begin (V782 = (V780(V781))), (V782(V781)) end end end end}, fun (V783) -> fun (V784) -> V784 end end}, <<"Bye for now!"/utf8>>))(V757))), {'Idris.Prelude.Types.Right', V785} end), case V786 of {'Idris.Prelude.Types.Left', E309} -> (fun (V787) -> {'Idris.Prelude.Types.Left', V787} end(E309)); {'Idris.Prelude.Types.Right', E310} -> (fun (V788) -> {'Idris.Prelude.Types.Right', 1} end(E310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
