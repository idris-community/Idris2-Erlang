-module('Idris.Idris2.Idris.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--displayResult-12321'/6,
  'case--displayResult-12178'/7,
  'case--handleMissing-11916'/2,
  'case--handleMissing\x{27}-11837'/2,
  'case--repl-11747'/10,
  'case--interpret-11576'/7,
  'case--parseRepl-11543'/2,
  'case--parseRepl,fnameCmd-11481'/6,
  'case--process-11281'/7,
  'case--process-11235'/7,
  'case--process-11151'/11,
  'case--process-11099'/13,
  'case--process-10856'/8,
  'case--case block in process-10740'/12,
  'case--process-10682'/8,
  'case--process-10554'/8,
  'case--process-10451'/7,
  'case--process-10376'/7,
  'case--process-10297'/7,
  'case--process-10237'/8,
  'case--process-10145'/9,
  'case--process-10055'/9,
  'case--case block in case block in process-9902'/22,
  'case--case block in process-9810'/12,
  'case--process-9717'/8,
  'case--case block in loadMainFile-9584'/13,
  'case--loadMainFile-9531'/8,
  'case--compileExp-9412'/10,
  'case--execExp-9274'/9,
  'case--case block in case block in case block in processEdit-9067'/15,
  'case--case block in case block in processEdit-9031'/13,
  'case--case block in processEdit-9001'/12,
  'case--processEdit-8976'/10,
  'case--case block in case block in case block in processEdit-8814'/17,
  'case--case block in case block in processEdit-8774'/15,
  'case--case block in processEdit-8740'/14,
  'case--processEdit-8711'/12,
  'case--case block in case block in case block in case block in processEdit-8462'/28,
  'case--case block in case block in case block in processEdit-8400'/27,
  'case--case block in case block in processEdit-8346'/25,
  'case--case block in case block in processEdit-8247'/23,
  'case--case block in processEdit-8181'/18,
  'case--processEdit-8129'/12,
  'case--case block in case block in processEdit-7998'/13,
  'case--case block in processEdit-7972'/11,
  'case--processEdit-7935'/6,
  'case--case block in case block in processEdit-7760'/18,
  'case--case block in case block in case block in case block in case block in processEdit-7514'/29,
  'case--case block in case block in case block in case block in processEdit-7444'/27,
  'case--case block in case block in case block in processEdit-7390'/25,
  'case--case block in case block in processEdit-7323'/20,
  'case--case block in processEdit-7244'/16,
  'case--processEdit-7195'/11,
  'case--case block in case block in processEdit-7050'/18,
  'case--case block in processEdit-6996'/11,
  'case--processEdit-6966'/8,
  'case--case block in case block in case block in processEdit-6755'/26,
  'case--case block in case block in case block in processEdit-6656'/25,
  'case--case block in case block in processEdit-6593'/22,
  'case--case block in processEdit-6498'/21,
  'case--case block in processEdit-6407'/19,
  'case--case block in case block in processEdit-6221'/27,
  'case--case block in case block in processEdit-6118'/26,
  'case--case block in processEdit-6058'/22,
  'case--processEdit-5974'/13,
  'case--case block in processEdit-5862'/10,
  'case--processEdit-5841'/9,
  'case--case block in processEdit-5723'/13,
  'case--processEdit-5681'/11,
  'case--processEdit-5607'/10,
  'case--processEdit-5541'/10,
  'case--case block in processEdit-5464'/12,
  'case--case block in processEdit-5359'/15,
  'case--processEdit-5323'/12,
  'case--case block in case block in nextGenDef-5172'/8,
  'case--case block in case block in nextGenDef-5100'/10,
  'case--case block in case block in nextGenDef-5031'/11,
  'case--case block in nextGenDef-4996'/8,
  'case--nextGenDef-4967'/6,
  'case--case block in case block in nextProofSearch-4926'/7,
  'case--case block in case block in nextProofSearch-4858'/9,
  'case--case block in nextProofSearch-4802'/7,
  'case--nextProofSearch-4775'/5,
  'case--addMadeLemma,insertInBlank-4635'/10,
  'case--proofSearch,replaceStr-4544'/8,
  'case--addClause-4466'/4,
  'case--case block in updateFile-4376'/5,
  'case--updateFile-4352'/4,
  'case--case block in findCG-4160'/5,
  'case--findCG-4089'/4,
  'case--setOpt-4013'/5,
  'case--setOpt-3994'/4,
  'case--setOpt-3955'/4,
  'case--setOpt-3916'/4,
  'case--setOpt-3877'/4,
  'case--setOpt-3856'/4,
  'case--displayPats-3759'/7,
  'case--showInfo-3406'/11,
  'nested--25889-4533--in--un--replaceStr'/7,
  'nested--33979-11699--in--un--prompt'/6,
  'nested--31871-9680--in--un--nfun'/8,
  'nested--33999-12437--in--un--makeSpace'/1,
  'nested--25970-4604--in--un--insertInBlank'/8,
  'nested--33768-11455--in--un--getLoad'/4,
  'nested--33768-11456--in--un--fnameCmd'/3,
  'nested--31495-9327--in--un--execDecl'/7,
  'nested--31871-9679--in--un--emode'/7,
  'nested--33999-12438--in--un--col'/5,
  'nested--33999-12439--in--un--cmdInfo'/1,
  'nested--26101-4721--in--un--addW'/7,
  'nested--25970-4605--in--un--addApp'/10,
  'un--updateFile'/3,
  'un--showInfo'/2,
  'un--setOpt'/3,
  'un--rtrim'/1,
  'un--replCmd'/6,
  'un--repl'/6,
  'un--proofSearch'/4,
  'un--processEdit'/6,
  'un--processCatch'/7,
  'un--process'/6,
  'un--printClause'/5,
  'un--parseRepl'/1,
  'un--parseEmptyCmd'/0,
  'un--parseCmd'/0,
  'un--nextProofSearch'/4,
  'un--nextGenDef'/5,
  'un--lookupDefTyName'/3,
  'un--loadMainFile'/7,
  'un--interpret'/6,
  'un--handleResult'/6,
  'un--handleMissing\x{27}'/1,
  'un--handleMissing'/1,
  'un--getOptions'/3,
  'un--findCG'/3,
  'un--execExp'/7,
  'un--execDecls'/6,
  'un--dropLamsTm'/4,
  'un--dropLams'/2,
  'un--displayType'/4,
  'un--displayTerm'/5,
  'un--displayResult'/6,
  'un--displayPats'/4,
  'un--displayPatTerm'/5,
  'un--displayHelp'/0,
  'un--displayErrors'/6,
  'un--displayClause'/4,
  'un--compileLib'/5,
  'un--compileExp'/8,
  'un--caseSplit'/3,
  'un--anyAt'/4,
  'un--addMadeLemma'/6,
  'un--addMadeCase'/4,
  'un--addClause'/3
]).
'case--displayResult-12321'(V0, V1, V2, V3, V4, V5) -> case V0 of 0 -> <<"Set color on"/utf8>>; 1 -> <<"Set color off"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--displayResult-12178'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V7)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<"is"/utf8>>)), ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty__Totality'('erased', V8)))))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--handleMissing-11916'(V0, V1) -> case V0 of [E0 | E1] -> (fun (V2, V3) -> case V3 of [] -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"function"/utf8>>)), ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V2)))))); _ -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"functions:"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'('erased', fun (V4) -> fun (V5) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'('erased')), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'('erased')))), V4, V5)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V8, V9)) end end end end, fun (V10) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V10)))) end, V0)))))) end end(E0, E1)); _ -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"functions:"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'('erased', fun (V11) -> fun (V12) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'('erased')), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'('erased')))), V11, V12)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V15, V16)) end end end end, fun (V17) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V17)))) end, V0)))))) end.
'case--handleMissing\x{27}-11837'(V0, V1) -> case V0 of [E0 | E1] -> (fun (V2, V3) -> case V3 of [] -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V2)))); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V4) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V4)) end, V0)))))) end end(E0, E1)); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V5) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V5)) end, V0)))))) end.
'case--repl-11747'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> fun (V10) -> begin (V39 = begin (V38 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> V17 end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), begin (V25 = (V22(V23))), (V24(V25)) end end end end end end end}, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), ((V29(V31))(V30)) end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V33(V34))), (V35(V34)) end end end end}, fun (V36) -> fun (V37) -> V37 end end}, <<""/utf8>>))(V10))), {'Idris.Prelude.Types.Right', V38} end), case V39 of {'Idris.Prelude.Types.Left', E0} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V41) -> ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V0, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<"Bye for now!"/utf8>>)), V10)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V42) -> begin (V43 = (('un--interpret'(V4, V3, V2, V1, V0, V8))(V42))), case V43 of {'Idris.Prelude.Types.Left', E2} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V45) -> (('un--handleResult'(V4, V3, V2, V1, V0, V45))(V42)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--interpret-11576'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.REPLError', ('Idris.Idris2.Parser.Support':'dn--un--pretty_Pretty__(ParseError $tok)'('erased', 'erased', {'Idris.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V9) -> fun (V10) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--pretty_Pretty__Token'('erased', V10)) end end, fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--prettyPrec_Pretty__Token'('erased', V12, V13)) end end end}, V7))}} end end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> case V14 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V16) -> fun (V17) -> begin (V18 = ('Idris.Idris2.Idris.REPLOpts':'un--setCurrentElabSource'(V1, V0, V17))), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> ('un--processCatch'(V5, V4, V3, V2, V1, V16, V17)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--parseRepl-11543'(V0, V1) -> case V1 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Parser.Source':'un--runParser'('erased', 1, {'Idris.Prelude.Types.Nothing'}, V0, {'Idris.Text.Parser.Core.Alt', 1, 1, ('un--parseEmptyCmd'()), fun () -> ('un--parseCmd'()) end})) end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V2) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V2}} end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--parseRepl,fnameCmd-11481'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('nested--33768-11455--in--un--getLoad'(V0, ('Idris.Idris2.Prelude.Types.Strings':'un--length'(V1)), V2, V4)); 1 -> ('nested--33768-11456--in--un--fnameCmd'(V0, V3, V4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-11281'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> {'Idris.Core.Options.MkSessionOpts', V7, V8, V9, V10, [V0 | V11], V12, V13, V14, V15, V16, V17, V18, V19, V20} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-11235'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Core.Options.MkPPOpts', E0, E1, E2} -> (fun (V7, V8, V9) -> {'Idris.Core.Options.MkPPOpts', V7, 1, V9} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-11151'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V13, V14) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad__Maybe'('erased', 'erased', ('Idris.Idris2.Idris.IDEMode.Holes':'un--isHole'(V14)), fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative__Maybe'('erased', {'Idris.Builtin.MkPair', V11, {'Idris.Builtin.MkPair', V14, V15}})) end)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-11099'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V15, V16) -> fun (V17) -> ('Idris.Idris2.Idris.IDEMode.Holes':'un--holeData'([], V4, V2, V5, {'Idris.Core.Env.Nil'}, V13, V16, case V15 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38) -> V20 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V17)) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-10856'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> fun (V8) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V0}, V8)) end; _ -> fun (V9) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V10) -> case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CheckedTotal', V12}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V13) -> fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Termination':'un--checkTotal'(V5, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V13, V14))), case V15 of {'Idris.Prelude.Types.Left', E2} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V17) -> begin (V25 = begin (V18 = ('Idris.Idris2.Core.Context':'un--getTotality'(V5, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V13, V14))), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V5, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Totality'(V21, V22)) end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__Totality'(V23, V24)) end end}, V20, V14)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V25 of {'Idris.Prelude.Types.Left', E6} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V13, V27}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V28) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V28)) end, V7)), [])), V9)) end end.
'case--case block in process-10740'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Core.TT.MissingCases', E0} -> (fun (V12) -> fun (V13) -> begin (V16 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V14) -> fun (V15) -> ('un--displayPatTerm'(V5, V3, V6, V14, V15)) end end, V12, []))(V13))), case V16 of {'Idris.Prelude.Types.Left', E1} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CasesMissing', V9, V18}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Core.TT.NonCoveringCall', E3} -> (fun (V19) -> fun (V20) -> begin (V22 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V21) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V5, V21)) end, V19, []))(V20))), case V22 of {'Idris.Prelude.Types.Left', E4} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CallsNonCovering', V9, V24}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.AllCasesCovered', V9}} end end.
'case--process-10682'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> fun (V8) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V0}, V8)) end; _ -> fun (V9) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V10) -> case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Missed', V12}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V13) -> fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Context':'un--getTotality'(V5, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V13, V14))), case V15 of {'Idris.Prelude.Types.Left', E2} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V17) -> begin (V18 = V7), (('case--case block in process-10740'(V0, V1, V2, V3, V4, V5, V6, V7, V18, V13, V17, case V17 of {'Idris.Core.TT.MkTotality', E4, E5} -> (fun (V19, V20) -> V20 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14)) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V21) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V21)) end, V7)), [])), V9)) end end.
'case--process-10554'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [E0 | E1] -> (fun (V8, V9) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V12, V13) -> case V9 of [] -> fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Unify':'un--search'([], V5, V4, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), 1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(1000)), V10, V13, {'Idris.Core.Env.Nil'}, V14))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V21 = begin (V18 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V5, [], V6, {'Idris.Core.Env.Nil'}, V17, V14))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V5, V3, {'Idris.Core.Env.Nil'}, V20, V14)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ProofFound', V23}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V24) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V25) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V25)) end, V7))}, V24)) end end end(E4, E5)); _ -> fun (V26) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V27) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V27)) end, V7))}, V26)) end end end(E2, E3)); _ -> fun (V28) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V29) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V29)) end, V7))}, V28)) end end end(E0, E1)); [] -> fun (V30) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V0}, V30)) end; _ -> fun (V31) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V32) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V32)) end, V7))}, V31)) end end.
'case--process-10451'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.NoFileLoaded'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> begin (V24 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> <<""/utf8>> end, fun () -> fun (V9) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" +"/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Int'(((V9 + 1) rem 9223372036854775808))))) end end, case V5 of {'Idris.Idris.REPLOpts.MkREPLOpts', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> V16 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), fun (V25) -> begin (V68 = begin (V67 = (('Idris.Idris2.Erlang.System':'un--system'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> V32 end end end, fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> begin (V39 = (V36(V38))), begin (V40 = (V37(V38))), (V39(V40)) end end end end end end end}, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> begin (V46 = (V43(V45))), ((V44(V46))(V45)) end end end end end end, fun (V47) -> fun (V48) -> fun (V49) -> begin (V50 = (V48(V49))), (V50(V49)) end end end end}, fun (V51) -> fun (V52) -> V52 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(case V5 of {'Idris.Idris.REPLOpts.MkREPLOpts', E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66) -> V58 end(E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" \x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V8, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{22}"/utf8>>, V24))))))))))(V25))), {'Idris.Prelude.Types.Right', V67} end), case V68 of {'Idris.Prelude.Types.Left', E29} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V70) -> ('un--loadMainFile'(V4, V3, V2, V1, V0, V8, V25)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-10376'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V7, V8, {'Idris.Prelude.Types.Just', V0}, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-10297'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.NoFileLoaded'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> fun (V9) -> ('un--loadMainFile'(V4, V3, V2, V1, V0, V8, V9)) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-10237'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> fun (V8) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V0}, V8)) end; _ -> fun (V9) -> begin (V11 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V10) -> ('un--displayPats'(V5, V3, V6, V10)) end, V7, []))(V9))), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Printed', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', V13))}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--process-10145'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> begin (V13 = begin (V12 = ('erlang':'get'(V5))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V19 = begin (V16 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V5, [], V15, {'Idris.Core.Env.Nil'}, V9, V11))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V5, V3, {'Idris.Core.Env.Nil'}, V18, V11)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V11))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> begin (V28 = begin (V25 = (('Idris.Idris2.Core.Normalise':'un--normaliseScope'(V5, [], V15, {'Idris.Core.Env.Nil'}, V24))(V11))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V5, V3, {'Idris.Core.Env.Nil'}, V27, V11)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.TermChecked', V21, V30}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-10055'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of [] -> fun (V9) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V1, V0}, V9)) end; _ -> fun (V10) -> begin (V12 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V11) -> ('un--displayType'(V6, V4, V7, V11)) end, V8, []))(V10))), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Printed', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', V14))}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in process-9902'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of 0 -> fun (V22) -> begin (V23 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V12))(V22))), case V23 of {'Idris.Prelude.Types.Left', E0} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V25) -> begin (V29 = begin (V26 = ((((V17(V15))({'Idris.Core.Env.Nil'}))(V25))(V22))), case V26 of {'Idris.Prelude.Types.Left', E2} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V28) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V5, V3, {'Idris.Core.Env.Nil'}, V28, V22)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V29 of {'Idris.Prelude.Types.Left', E4} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Evaluated', V20, {'Idris.Prelude.Types.Just', V31}}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Evaluated', V20, {'Idris.Prelude.Types.Nothing'}}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in process-9810'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V12, V13) -> fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V5, <<"repl.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Elaborated input"/utf8>> end, V12, V14))), case V15 of {'Idris.Prelude.Types.Left', E2} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V17) -> begin (V19 = begin (V18 = ('erlang':'get'(V5))), {'Idris.Prelude.Types.Right', V18} end), case V19 of {'Idris.Prelude.Types.Left', E4} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V21) -> begin (V23 = begin (V22 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V22} end), case V23 of {'Idris.Prelude.Types.Left', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V25) -> begin (V40 = ('nested--31871-9680--in--un--nfun'(V0, V1, V2, V3, V4, V5, [], case V25 of {'Idris.Idris.REPLOpts.MkREPLOpts', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V27 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V41 = ((((V40(V21))({'Idris.Core.Env.Nil'}))(V12))(V14))), case V41 of {'Idris.Prelude.Types.Left', E22} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V43) -> begin (V44 = (('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V5, <<"repl.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Normalised"/utf8>> end, {'Idris.Core.Env.Nil'}, V43))(V14))), case V44 of {'Idris.Prelude.Types.Left', E24} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V5, V3, {'Idris.Core.Env.Nil'}, V43, V14))), case V47 of {'Idris.Prelude.Types.Left', E26} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V49) -> begin (V50 = {'Idris.Builtin.MkPair', V12, V13}), (('case--case block in case block in process-9902'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V12, V13, V50, V17, V21, V25, V40, V43, V46, V49, case V25 of {'Idris.Idris.REPLOpts.MkREPLOpts', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64) -> V51 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14)) end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-9717'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Idris.Syntax.Execute'} -> (fun () -> fun (V8) -> begin (V9 = ('un--execExp'(V5, V4, V3, V2, V1, V0, V8))), case V9 of {'Idris.Prelude.Types.Left', E66} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Executed', V0}} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> fun (V12) -> begin (V13 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V3, V5, V2, V4, {'Idris.Idris.Desugar.AnyExpr'}, [], V0, V12))), case V13 of {'Idris.Prelude.Types.Left', E0} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V15) -> begin (V16 = (('Idris.Idris2.Core.Context':'un--resolveName'(V5, {'Idris.Core.Name.UN', <<"[input]"/utf8>>}))(V12))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> begin (V25 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V19) -> begin (V20 = ('Idris.Idris2.Core.Context':'un--hide'(V5, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', <<"::"/utf8>>}}, V19))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> ('Idris.Idris2.Core.Context':'un--hide'(V5, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', <<"Nil"/utf8>>}}, V19)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V23) -> fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end, V12))), case V25 of {'Idris.Prelude.Types.Left', E6} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V27) -> begin (V42 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V5, V2, V4, V18, ('nested--31871-9679--in--un--emode'(V0, V1, V2, V3, V4, V5, case V6 of {'Idris.Idris.REPLOpts.MkREPLOpts', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V29 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), [], [], {'Idris.Core.Env.Nil'}, V15, {'Idris.Prelude.Types.Nothing'}))(V12))), case V42 of {'Idris.Prelude.Types.Left', E22} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V44) -> case V44 of {'Idris.Builtin.MkPair', E24, E25} -> (fun (V45, V46) -> begin (V47 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V5, <<"repl.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Elaborated input"/utf8>> end, V45, V12))), case V47 of {'Idris.Prelude.Types.Left', E26} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V49) -> begin (V51 = begin (V50 = ('erlang':'get'(V5))), {'Idris.Prelude.Types.Right', V50} end), case V51 of {'Idris.Prelude.Types.Left', E28} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V53) -> begin (V55 = begin (V54 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V54} end), case V55 of {'Idris.Prelude.Types.Left', E30} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V57) -> begin (V72 = ('nested--31871-9680--in--un--nfun'(V0, V1, V2, V3, V4, V5, [], case V57 of {'Idris.Idris.REPLOpts.MkREPLOpts', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71) -> V59 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V73 = ((((V72(V53))({'Idris.Core.Env.Nil'}))(V45))(V12))), case V73 of {'Idris.Prelude.Types.Left', E46} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V75) -> begin (V76 = (('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V5, <<"repl.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Normalised"/utf8>> end, {'Idris.Core.Env.Nil'}, V75))(V12))), case V76 of {'Idris.Prelude.Types.Left', E48} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V78) -> begin (V79 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V5, V3, {'Idris.Core.Env.Nil'}, V75, V12))), case V79 of {'Idris.Prelude.Types.Left', E50} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V81) -> begin (V82 = {'Idris.Builtin.MkPair', V45, V46}), (('case--case block in case block in process-9902'(V0, V1, V2, V3, V4, V5, V6, V7, V15, V18, V27, V45, V46, V82, V49, V53, V57, V72, V75, V78, V81, case V57 of {'Idris.Idris.REPLOpts.MkREPLOpts', E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65} -> (fun (V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96) -> V83 end(E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V12)) end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in loadMainFile-9584'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V9 of [] -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.FileLoaded', V0}} end; _ -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ErrorsBuildingFile', V0, V9}} end end.
'case--loadMainFile-9531'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Right', E0} -> (fun (V8) -> fun (V9) -> begin (V11 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V5, fun () -> <<"+ Build deps"/utf8>> end, fun (V10) -> ('Idris.Idris2.Idris.ModTree':'un--buildDeps'(V5, V3, V2, V4, V1, V0, V10)) end, V9))), case V11 of {'Idris.Prelude.Types.Left', E1} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.Idris.REPLCommon':'un--updateErrorLine'(V1, V13))(V9))), case V14 of {'Idris.Prelude.Types.Left', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Idris.REPLOpts':'un--setSource'(V1, V8, V9))), case V17 of {'Idris.Prelude.Types.Left', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V19) -> begin (V20 = ('Idris.Idris2.Idris.REPLOpts':'un--resetProofState'(V1, V9))), case V20 of {'Idris.Prelude.Types.Left', E7} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V22) -> case V13 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.FileLoaded', V0}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ErrorsBuildingFile', V0, V13}} end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Left', E9} -> (fun (V23) -> fun (V24) -> begin (V25 = ('Idris.Idris2.Idris.REPLOpts':'un--setSource'(V1, <<""/utf8>>, V24))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ErrorLoadingFile', V0, V23}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--compileExp-9412'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> fun (V12) -> begin (V17 = ('Idris.Idris2.Core.LinearCheck':'un--linearCheck'([], V6, V5, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Algebra.Semiring':'un--linear'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V13) -> fun (V14) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V13, V14)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V15) -> fun (V16) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V15, V16)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())})), 0, {'Idris.Core.Env.Nil'}, V10, V12))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V23 = begin (V20 = ('un--findCG'(V2, V6, V12))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> ('Idris.Idris2.Compiler.Common':'un--cgCompileExpr'(V6, V22, V19, V0, V12)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V23 of {'Idris.Prelude.Types.Left', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V25) -> (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CompilationFailed'}} end end, fun () -> fun (V27) -> fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Compiled', V27}} end end end, V25))(V12)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--execExp-9274'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> begin (V16 = ('Idris.Idris2.Core.LinearCheck':'un--linearCheck'([], V5, V4, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Algebra.Semiring':'un--linear'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V12) -> fun (V13) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V12, V13)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V14) -> fun (V15) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V14, V15)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())})), 0, {'Idris.Core.Env.Nil'}, V9, V11))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> begin (V22 = begin (V19 = ('un--findCG'(V1, V5, V11))), case V19 of {'Idris.Prelude.Types.Left', E4} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V21) -> ('Idris.Idris2.Compiler.Common':'un--cgExecuteExpr'(V5, V21, V18, V11)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V22 of {'Idris.Prelude.Types.Left', E6} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Executed', V0}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in processEdit-9067'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V2 of 0 -> fun (V15) -> ('un--updateFile'(V3, fun (V16) -> ('un--addMadeCase'(V13, V14, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord__Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V1, 1)))))))), V16)) end, V15)) end; 1 -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.MadeWith', V13, V14}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-9031'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> begin (V15 = ('Idris.Idris2.Data.Strings':'un--lines'(('Idris.Idris2.Idris.IDEMode.MakeClause':'un--makeWith'(V0, V11))))), case V2 of 0 -> fun (V16) -> ('un--updateFile'(V3, fun (V17) -> ('un--addMadeCase'(V13, V15, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord__Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V1, 1)))))))), V17)) end, V16)) end; 1 -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.MadeWith', V13, V15}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-9001'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Right', E0} -> (fun (V12) -> ('case--case block in case block in processEdit-9031'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V12, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V9)))) end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V13) -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V15) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V15)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Invalid literate Idris"/utf8>>))))))}} end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-8976'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> begin (V11 = {'Idris.Prelude.Types.Just', V10}), ('case--case block in processEdit-9001'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V10, V11, ('Idris.Idris2.Parser.Unlit':'un--unlit'(V8, V10)))) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V13) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V13)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not available"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in processEdit-8814'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V2 of 0 -> fun (V17) -> ('un--updateFile'(V3, fun (V18) -> ('un--addMadeCase'(V15, V16, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord__Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V1, 1)))))))), V18)) end, V17)) end; 1 -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.MadeCase', V15, V16}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-8774'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> begin (V17 = ('Idris.Idris2.Data.Strings':'un--lines'(('Idris.Idris2.Idris.IDEMode.MakeClause':'un--makeCase'(V10, V0, V13))))), case V2 of 0 -> fun (V18) -> ('un--updateFile'(V3, fun (V19) -> ('un--addMadeCase'(V15, V17, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord__Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V1, 1)))))))), V19)) end, V18)) end; 1 -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.MadeCase', V15, V17}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-8740'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Prelude.Types.Right', E0} -> (fun (V14) -> ('case--case block in case block in processEdit-8774'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V14, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V11)))) end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V17) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V17)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Invalid literate Idris"/utf8>>))))))}} end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-8711'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Just', E0} -> (fun (V12) -> begin (V13 = {'Idris.Prelude.Types.Just', V12}), ('case--case block in processEdit-8740'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V12, V13, ('Idris.Idris2.Parser.Unlit':'un--unlit'(V8, V12)))) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V15) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V15)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not available"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in processEdit-8462'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V2 of 0 -> fun (V28) -> ('un--updateFile'(V3, fun (V29) -> ('un--addMadeLemma'(V27, V0, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V20)), V23, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord__Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V1, 1)))))))), V29)) end, V28)) end; 1 -> fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.MadeLemma', V27, V0, V20, V23}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in processEdit-8400'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V26 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V27, V28) -> case V2 of 0 -> fun (V29) -> ('un--updateFile'(V3, fun (V30) -> ('un--addMadeLemma'(V27, V0, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V20)), V23, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord__Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V1, 1)))))))), V30)) end, V29)) end; 1 -> fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.MadeLemma', V27, V0, V20, V23}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-8346'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Idris.Prelude.Types.Just', E0} -> (fun (V25) -> begin (V26 = {'Idris.Prelude.Types.Just', V25}), ('case--case block in case block in case block in processEdit-8400'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V25, V26, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V25)))) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V28) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V28)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-8247'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V10 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V21)); 1 -> V21; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-8181'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V18, V19) -> fun (V20) -> begin (V21 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V7, V5, V18, V20))), case V21 of {'Idris.Prelude.Types.Left', E2} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V7, V5, V19, V20))), case V24 of {'Idris.Prelude.Types.Left', E4} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V26) -> begin (V28 = begin (V27 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V27} end), case V28 of {'Idris.Prelude.Types.Left', E6} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V30) -> begin (V31 = ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(case V10 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V26)); 1 -> V26; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V32 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V3, V1, V20))), case V32 of {'Idris.Prelude.Types.Left', E8} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V34) -> begin (V35 = {'Idris.Builtin.MkPair', V18, V19}), case V34 of {'Idris.Prelude.Types.Just', E10} -> (fun (V36) -> begin (V37 = {'Idris.Prelude.Types.Just', V36}), (('case--case block in case block in case block in processEdit-8400'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V18, V19, V35, V23, V26, V30, V31, V36, V37, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V36))))(V20)) end end(E10)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V38) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V38)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-8129'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of [E0 | E1] -> (fun (V12, V13) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V14, V15) -> case V15 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V18, V19) -> case V18 of {'Idris.Core.Context.Hole', E8, E9} -> (fun (V20, V21) -> case V13 of [] -> fun (V22) -> begin (V23 = ('Idris.Idris2.TTImp.Interactive.MakeLemma':'un--makeLemma'(V4, V7, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V0, V20, V19, V22))), case V23 of {'Idris.Prelude.Types.Left', E10} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V25) -> begin (V26 = [{'Idris.Builtin.MkPair', V14, {'Idris.Builtin.MkPair', V16, {'Idris.Builtin.MkPair', {'Idris.Core.Context.Hole', V20, V21}, V19}}} | []]), case V25 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V27, V28) -> begin (V29 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V7, V5, V27, V22))), case V29 of {'Idris.Prelude.Types.Left', E14} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V31) -> begin (V32 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V7, V5, V28, V22))), case V32 of {'Idris.Prelude.Types.Left', E16} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V34) -> begin (V36 = begin (V35 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E18} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V38) -> begin (V39 = ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(case V10 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V34)); 1 -> V34; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V40 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V3, V1, V22))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> begin (V43 = {'Idris.Builtin.MkPair', V27, V28}), case V42 of {'Idris.Prelude.Types.Just', E22} -> (fun (V44) -> begin (V45 = {'Idris.Prelude.Types.Just', V44}), (('case--case block in case block in case block in processEdit-8400'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V21, V14, V16, V20, V19, V26, V27, V28, V43, V31, V34, V38, V39, V44, V45, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V44))))(V22)) end end(E22)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V46) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V46)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V47) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V48) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V48)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end end(E8, E9)); _ -> fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V50) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V50)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end end(E6, E7)); _ -> fun (V51) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V52) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V52)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end end(E4, E5)); _ -> fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V54) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V54)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end end(E2, E3)); _ -> fun (V55) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V56) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V56)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end end(E0, E1)); _ -> fun (V57) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V58) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V58)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end.
'case--case block in case block in processEdit-7998'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> fun (V15) -> begin (V17 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V16) -> ('un--printClause'(V4, V2, V13, V9, V16)) end, V7, []))(V15))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V22, V23)) end end end end, fun (V24) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V24)) end, V19))))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-7972'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> begin (V12 = {'Idris.Prelude.Types.Just', V11}), ('case--case block in case block in processEdit-7998'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V11, V12, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V11)))) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V14) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V14)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-7935'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V9, V10) -> begin (V11 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Core.FC':'un--startPos'(V9))))))))), fun (V12) -> begin (V13 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V0, V7, V12))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V16 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V7, {'Idris.Builtin.MkPair', V9, V10}}}), case V15 of {'Idris.Prelude.Types.Just', E7} -> (fun (V17) -> begin (V18 = {'Idris.Prelude.Types.Just', V17}), (('case--case block in case block in processEdit-7998'(V0, V1, V2, V3, V4, V7, V9, V10, V16, V11, V17, V18, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V17))))(V12)) end end(E7)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V19) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V19)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V21) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V21)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No more results"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-7760'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V2, V16}}, V29, V30, V31} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in case block in processEdit-7514'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> case V3 of 0 -> fun (V29) -> ('un--updateFile'(V4, fun (V30) -> ('un--addClause'(('Idris.Idris2.Data.Strings':'un--unlines'(V28)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(V2)))), V30)) end, V29)) end; 1 -> fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V34, V35)) end end end end, fun (V36) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V36)) end, V28))))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in processEdit-7444'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V26 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V27, V28) -> fun (V29) -> begin (V31 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V30) -> ('un--printClause'(V8, V6, V27, V23, V30)) end, V21, []))(V29))), case V31 of {'Idris.Prelude.Types.Left', E2} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V33) -> case V3 of 0 -> ('un--updateFile'(V4, fun (V34) -> ('un--addClause'(('Idris.Idris2.Data.Strings':'un--unlines'(V33)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(V2)))), V34)) end, V29)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V37, V38)) end end end end, fun (V39) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V39)) end, V33))))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in processEdit-7390'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Idris.Prelude.Types.Just', E0} -> (fun (V25) -> begin (V26 = {'Idris.Prelude.Types.Just', V25}), ('case--case block in case block in case block in case block in processEdit-7444'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V25, V26, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V25)))) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V28) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V28)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-7323'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Prelude.Types.Just', E0} -> (fun (V20) -> case V20 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V21, V22) -> case V22 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V23, V24) -> begin (V25 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Core.FC':'un--startPos'(V23))))))))), fun (V26) -> begin (V27 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V4, V2, V26))), case V27 of {'Idris.Prelude.Types.Left', E5} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V29) -> begin (V30 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V21, {'Idris.Builtin.MkPair', V23, V24}}}), case V29 of {'Idris.Prelude.Types.Just', E7} -> (fun (V31) -> begin (V32 = {'Idris.Prelude.Types.Just', V31}), (('case--case block in case block in case block in case block in processEdit-7444'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V21, V23, V24, V30, V25, V31, V32, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V31))))(V26)) end end(E7)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V33) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V33)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V35) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V35)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No search results"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-7244'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Prelude.Types.Just', E0} -> (fun (V16) -> case V16 of {'Idris.Core.Context.None'} -> (fun () -> begin (V22 = fun (V17) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefSort'(V8, V5, V7, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.FC':'un--onLine'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)), V18)) end end, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))), fun (V20) -> fun (V21) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--mostUsed'(V20, V21)) end end, V13, V17)) end), fun (V23) -> begin (V25 = begin (V24 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V24} end), case V25 of {'Idris.Prelude.Types.Left', E1} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V27) -> begin (V43 = begin (V42 = ('erlang':'put'(V4, case V27 of {'Idris.Idris.REPLOpts.MkREPLOpts', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V2, V22}}, V39, V40, V41} end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V42} end), case V43 of {'Idris.Prelude.Types.Left', E17} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V45) -> begin (V46 = ('un--nextGenDef'(V8, V7, V4, V0, V23))), case V46 of {'Idris.Prelude.Types.Left', E19} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V48) -> begin (V49 = {'Idris.Prelude.Types.Just', {'Idris.Core.Context.None'}}), case V48 of {'Idris.Prelude.Types.Just', E21} -> (fun (V50) -> case V50 of {'Idris.Builtin.MkPair', E22, E23} -> (fun (V51, V52) -> case V52 of {'Idris.Builtin.MkPair', E24, E25} -> (fun (V53, V54) -> begin (V55 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Core.FC':'un--startPos'(V53))))))))), begin (V56 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V4, V2, V23))), case V56 of {'Idris.Prelude.Types.Left', E26} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V58) -> begin (V59 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V51, {'Idris.Builtin.MkPair', V53, V54}}}), case V58 of {'Idris.Prelude.Types.Just', E28} -> (fun (V60) -> begin (V61 = {'Idris.Prelude.Types.Just', V60}), (('case--case block in case block in case block in case block in processEdit-7444'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V49, V22, V27, V45, V51, V53, V54, V59, V55, V60, V61, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V60))))(V23)) end end(E28)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V62) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V62)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V63) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V63)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No search results"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end()); _ -> fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V65) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V65)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Already defined"/utf8>>))))))}} end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V66) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V1))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-7195'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> case V11 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V14, V15) -> case V15 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V16, V17) -> fun (V18) -> begin (V45 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V14, case V9 of {'Idris.Core.Context.MkDefs', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> V19 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V18))), case V45 of {'Idris.Prelude.Types.Left', E33} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V47) -> begin (V48 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V12, {'Idris.Builtin.MkPair', V14, {'Idris.Builtin.MkPair', V16, V17}}}}), case V47 of {'Idris.Prelude.Types.Just', E35} -> (fun (V49) -> case V49 of {'Idris.Core.Context.None'} -> (fun () -> begin (V55 = fun (V50) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefSort'(V8, V5, V7, fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.FC':'un--onLine'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)), V51)) end end, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))), fun (V53) -> fun (V54) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--mostUsed'(V53, V54)) end end, V14, V50)) end), begin (V57 = begin (V56 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V56} end), case V57 of {'Idris.Prelude.Types.Left', E36} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V59) -> begin (V75 = begin (V74 = ('erlang':'put'(V4, case V59 of {'Idris.Idris.REPLOpts.MkREPLOpts', E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V2, V55}}, V71, V72, V73} end(E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V74} end), case V75 of {'Idris.Prelude.Types.Left', E52} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V77) -> begin (V78 = ('un--nextGenDef'(V8, V7, V4, V0, V18))), case V78 of {'Idris.Prelude.Types.Left', E54} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V80) -> begin (V81 = {'Idris.Prelude.Types.Just', {'Idris.Core.Context.None'}}), case V80 of {'Idris.Prelude.Types.Just', E56} -> (fun (V82) -> case V82 of {'Idris.Builtin.MkPair', E57, E58} -> (fun (V83, V84) -> case V84 of {'Idris.Builtin.MkPair', E59, E60} -> (fun (V85, V86) -> begin (V87 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Core.FC':'un--startPos'(V85))))))))), begin (V88 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V4, V2, V18))), case V88 of {'Idris.Prelude.Types.Left', E61} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V90) -> begin (V91 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V83, {'Idris.Builtin.MkPair', V85, V86}}}), case V90 of {'Idris.Prelude.Types.Just', E63} -> (fun (V92) -> begin (V93 = {'Idris.Prelude.Types.Just', V92}), (('case--case block in case block in case block in case block in processEdit-7444'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V17, V16, V12, V14, V48, V81, V55, V59, V77, V83, V85, V86, V91, V87, V92, V93, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V92))))(V18)) end end(E63)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V94) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V94)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E59, E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E56)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V95) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V95)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No search results"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V96) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V96)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Already defined"/utf8>>))))))}} end end(E35)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V1))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V97) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V1)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"on line"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__Int'('erased', V2))))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-7050'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V15 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V17)); 1 -> V17; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-6996'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of [E0 | E1] -> (fun (V11, V12) -> case V11 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V15, V16) -> case V16 of {'Idris.Core.Context.Hole', E6, E7} -> (fun (V17, V18) -> case V12 of [] -> begin (V30 = ('Idris.Idris2.Data.List':'un--elemBy'('erased', fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V19)), ('Idris.Idris2.Core.Name':'un--dropNS'(V20)))) end end, V7, case V6 of {'Idris.Idris.Syntax.MkSyntax', E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V27 end(E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V31 = ('un--dropLams'(V17, V8))), fun (V32) -> begin (V33 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V4, V2, V31, V32))), case V33 of {'Idris.Prelude.Types.Left', E17} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V35) -> begin (V36 = case V30 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V35)); 1 -> V35; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V36))}} end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V38) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V38)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E6, E7)); _ -> fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V40) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V40)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E4, E5)); _ -> fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V42) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V42)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E2, E3)); _ -> fun (V43) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V44) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V44)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E0, E1)); _ -> fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V46) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V46)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end.
'case--processEdit-6966'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V9, V10) -> fun (V11) -> begin (V38 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V9, case V5 of {'Idris.Core.Context.MkDefs', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V12 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V11))), case V38 of {'Idris.Prelude.Types.Left', E29} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V40) -> case V40 of [E31 | E32] -> (fun (V41, V42) -> case V41 of {'Idris.Builtin.MkPair', E33, E34} -> (fun (V43, V44) -> case V44 of {'Idris.Builtin.MkPair', E35, E36} -> (fun (V45, V46) -> case V46 of {'Idris.Core.Context.Hole', E37, E38} -> (fun (V47, V48) -> case V42 of [] -> begin (V60 = ('Idris.Idris2.Data.List':'un--elemBy'('erased', fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V49)), ('Idris.Idris2.Core.Name':'un--dropNS'(V50)))) end end, V9, case V6 of {'Idris.Idris.Syntax.MkSyntax', E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V57 end(E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V61 = ('un--dropLams'(V47, V10))), begin (V62 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V4, V2, V61, V11))), case V62 of {'Idris.Prelude.Types.Left', E48} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V64) -> begin (V65 = case V60 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V64)); 1 -> V64; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V65))}} end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V66) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V66)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E37, E38)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V67) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V67)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E35, E36)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V68) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V68)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E33, E34)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V69) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V69)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E31, E32)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V70) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V70)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V71) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V72) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V72)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No more results"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in processEdit-6755'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V3 of 0 -> fun (V26) -> ('un--updateFile'(V4, fun (V27) -> ('un--proofSearch'(V1, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V25)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)))))), V27)) end, V26)) end; 1 -> fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V25))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in processEdit-6656'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V11 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V24)); 1 -> V24; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-6593'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V22, V23) -> case V23 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V24, V25) -> fun (V26) -> begin (V27 = ('Idris.Idris2.Idris.Resugar':'un--resugar'(V22, V8, V6, V24, V25, V26))), case V27 of {'Idris.Prelude.Types.Left', E4} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V29) -> begin (V30 = case V11 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V29)); 1 -> V29; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V3 of 0 -> ('un--updateFile'(V4, fun (V31) -> ('un--proofSearch'(V1, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V30)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)))))), V31)) end, V26)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V30))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-6498'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Idris.Core.Context.NotHole'} -> (fun () -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V22) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V22)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end()); {'Idris.Core.Context.SolvedHole', E0} -> (fun (V23) -> ('case--case block in case block in processEdit-6593'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V23, ('un--dropLamsTm'([], V23, {'Idris.Core.Env.Nil'}, V17)))) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-6407'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V19, V20, V21, V22, V23, V24, V25, V26, V27, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V17}}, V29, V30, V31, V32} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-6221'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V3 of 0 -> fun (V27) -> ('un--updateFile'(V4, fun (V28) -> ('un--proofSearch'(V1, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V26)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)))))), V28)) end, V27)) end; 1 -> fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V26))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-6118'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V11 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V25)); 1 -> V25; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-6058'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of {'Idris.Prelude.Types.Just', E0} -> (fun (V22) -> case V22 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V23, V24) -> begin (V25 = ('un--dropLams'(V15, V24))), fun (V26) -> begin (V27 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V8, V6, V25, V26))), case V27 of {'Idris.Prelude.Types.Left', E3} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V29) -> begin (V30 = case V11 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V29)); 1 -> V29; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V3 of 0 -> ('un--updateFile'(V4, fun (V31) -> ('un--proofSearch'(V1, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V30)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)))))), V31)) end, V26)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V30))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V33) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V33)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No search results"/utf8>>))))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-5974'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of [E0 | E1] -> (fun (V13, V14) -> case V13 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V17, V18) -> case V18 of {'Idris.Core.Context.Hole', E6, E7} -> (fun (V19, V20) -> case V14 of [] -> begin (V22 = fun (V21) -> ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearch'(V8, V5, V7, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V1, [], V21)) end), fun (V23) -> begin (V25 = begin (V24 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V24} end), case V25 of {'Idris.Prelude.Types.Left', E8} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V27) -> begin (V43 = begin (V42 = ('erlang':'put'(V4, case V27 of {'Idris.Idris.REPLOpts.MkREPLOpts', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V28, V29, V30, V31, V32, V33, V34, V35, V36, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V22}}, V38, V39, V40, V41} end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V42} end), case V43 of {'Idris.Prelude.Types.Left', E24} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V45) -> begin (V47 = begin (V46 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E26} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V49) -> begin (V50 = ('un--nextProofSearch'(V8, V7, V4, V23))), case V50 of {'Idris.Prelude.Types.Left', E28} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V52) -> case V52 of {'Idris.Prelude.Types.Just', E30} -> (fun (V53) -> case V53 of {'Idris.Builtin.MkPair', E31, E32} -> (fun (V54, V55) -> begin (V56 = ('un--dropLams'(V19, V55))), begin (V57 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V8, V6, V56, V23))), case V57 of {'Idris.Prelude.Types.Left', E33} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V59) -> begin (V60 = case V11 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V59)); 1 -> V59; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V3 of 0 -> ('un--updateFile'(V4, fun (V61) -> ('un--proofSearch'(V1, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V60)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)))))), V61)) end, V23)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V60))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V62) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V62)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No search results"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V64) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V64)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E6, E7)); {'Idris.Core.Context.PMDef', E35, E36, E37, E38, E39} -> (fun (V65, V66, V67, V68, V69) -> case V66 of [] -> case V67 of {'Idris.Core.CaseTree.STerm', E40, E41} -> (fun (V70, V71) -> case V14 of [] -> begin (V72 = [{'Idris.Builtin.MkPair', V15, {'Idris.Builtin.MkPair', V17, {'Idris.Core.Context.PMDef', V65, [], {'Idris.Core.CaseTree.STerm', V70, V71}, V68, V69}}} | []]), ('case--case block in processEdit-6498'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V68, V69, V70, V15, V17, V71, V65, V72, case V65 of {'Idris.Core.Context.MkPMDefInfo', E42, E43} -> (fun (V73, V74) -> V73 end(E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end; _ -> fun (V75) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V76) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V76)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E40, E41)); _ -> fun (V77) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V78) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V78)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end; _ -> fun (V79) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V80) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V80)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E35, E36, E37, E38, E39)); _ -> fun (V81) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V82) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V82)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E4, E5)); _ -> fun (V83) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V84) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V84)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E2, E3)); _ -> fun (V85) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V86) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V86)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end end(E0, E1)); [] -> fun (V87) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"Unknown name"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V1))))}} end; _ -> fun (V88) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V89) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V89)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end.
'case--case block in processEdit-5862'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V2 of 0 -> fun (V10) -> ('un--updateFile'(V3, fun (V11) -> ('un--addClause'(V8, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(V1)))), V11)) end, V10)) end; 1 -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V8))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-5841'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> case V2 of 0 -> fun (V10) -> ('un--updateFile'(V3, fun (V11) -> ('un--addClause'(V9, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(V1)))), V11)) end, V10)) end; 1 -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V9))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V0)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"not defined here"/utf8>>))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-5723'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V3 of 0 -> fun (V13) -> ('un--updateFile'(V4, fun (V14) -> ('un--caseSplit'(('Idris.Idris2.Data.Strings':'un--unlines'(V12)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)))))), V14)) end, V13)) end; 1 -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V18, V19)) end end end end, fun (V20) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V20)) end, V12))))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-5681'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.TTImp.Interactive.CaseSplit.OK', E0} -> (fun (V11) -> fun (V12) -> begin (V13 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--updateCase'(V8, V6, V4, V11, ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V1, 1)), V12))), case V13 of {'Idris.Prelude.Types.Left', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V15) -> case V3 of 0 -> ('un--updateFile'(V4, fun (V16) -> ('un--caseSplit'(('Idris.Idris2.Data.Strings':'un--unlines'(V15)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)))))), V16)) end, V12)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V19, V20)) end end end end, fun (V21) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V21)) end, V15))))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.Interactive.CaseSplit.SplitFail', E3} -> (fun (V22) -> fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.TTImp.Interactive.CaseSplit':'dn--un--show_Show__SplitError'(V22))))}} end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-5607'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> fun (V10) -> ('Idris.Idris2.Core.FC':'un--within'({'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V1, 1))}, V10)) end; 1 -> fun (V11) -> ('Idris.Idris2.Core.FC':'un--onLine'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V2, 1)), V11)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-5541'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [] -> fun (V10) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'('erased'))} end; _ -> fun (V11) -> begin (V13 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V12) -> ('un--displayType'(V7, V5, V8, V12)) end, V9, []))(V11))), case V13 of {'Idris.Prelude.Types.Left', E0} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V15) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', V15))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in processEdit-5464'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V10 of {'Idris.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> fun (V12) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', {'Idris.Core.FC.MkFC', <<"(interactive)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, V0}, V12)) end end()); _ -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', V10}} end end.
'case--case block in processEdit-5359'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V10 of {'Idris.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> fun (V15) -> begin (V16 = ('un--displayTerm'(V7, V5, V8, V13, V15))), case V16 of {'Idris.Prelude.Types.Left', E0} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Core.Name':'un--nameRoot'(V11)))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')), V18))))}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'('erased'))}} end end.
'case--processEdit-5323'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Just', E0} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V15, V16) -> case V10 of {'Idris.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> fun (V17) -> begin (V18 = ('un--displayTerm'(V7, V5, V8, V16, V17))), case V18 of {'Idris.Prelude.Types.Left', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Core.Name':'un--nameRoot'(V13)))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')), V20))))}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'('erased'))}} end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V10 of {'Idris.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> fun (V22) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', {'Idris.Core.FC.MkFC', <<"(interactive)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, V0}, V22)) end end()); _ -> fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', V10}} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in nextGenDef-5172'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V4 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, {'Idris.Prelude.Types.Nothing'}, V19, V20, V21} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in nextGenDef-5100'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V4 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V5, V8}}, V21, V22, V23} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in nextGenDef-5031'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V0 of 0 -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V5, V7}}} end; _ -> begin (V12 = (V0 - 1)), fun (V13) -> ('un--nextGenDef'(V3, V2, V1, V12, V13)) end end end.
'case--case block in nextGenDef-4996'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V9, V10) -> fun (V11) -> begin (V27 = begin (V26 = ('erlang':'put'(V1, case V4 of {'Idris.Idris.REPLOpts.MkREPLOpts', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V5, V10}}, V23, V24, V25} end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V26} end), case V27 of {'Idris.Prelude.Types.Left', E17} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V29) -> case V0 of 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V5, V9}}}; _ -> begin (V30 = (V0 - 1)), ('un--nextGenDef'(V3, V2, V1, V30, V11)) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V31) -> begin (V47 = begin (V46 = ('erlang':'put'(V1, case V4 of {'Idris.Idris.REPLOpts.MkREPLOpts', E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, {'Idris.Prelude.Types.Nothing'}, V43, V44, V45} end(E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E33} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--nextGenDef-4967'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V7, V8) -> fun (V9) -> begin (V10 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--nextResult'('erased', V3, V2, V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> case V12 of {'Idris.Prelude.Types.Just', E5} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V14, V15) -> begin (V31 = begin (V30 = ('erlang':'put'(V1, case V4 of {'Idris.Idris.REPLOpts.MkREPLOpts', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V7, V15}}, V27, V28, V29} end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V30} end), case V31 of {'Idris.Prelude.Types.Left', E22} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V33) -> case V0 of 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V7, V14}}}; _ -> begin (V34 = (V0 - 1)), ('un--nextGenDef'(V3, V2, V1, V34, V9)) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V50 = begin (V49 = ('erlang':'put'(V1, case V4 of {'Idris.Idris.REPLOpts.MkREPLOpts', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, {'Idris.Prelude.Types.Nothing'}, V46, V47, V48} end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V49} end), case V50 of {'Idris.Prelude.Types.Left', E38} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V52) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in nextProofSearch-4926'(V0, V1, V2, V3, V4, V5, V6) -> case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V7, V8, V9, V10, V11, V12, V13, V14, V15, {'Idris.Prelude.Types.Nothing'}, V17, V18, V19, V20} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in nextProofSearch-4858'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V9, V10, V11, V12, V13, V14, V15, V16, V17, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V4, V7}}, V19, V20, V21, V22} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in nextProofSearch-4802'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V8, V9) -> fun (V10) -> begin (V26 = begin (V25 = ('erlang':'put'(V0, case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V11, V12, V13, V14, V15, V16, V17, V18, V19, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V4, V9}}, V21, V22, V23, V24} end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V25} end), case V26 of {'Idris.Prelude.Types.Left', E17} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V4, V8}}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V29) -> begin (V45 = begin (V44 = ('erlang':'put'(V0, case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V30, V31, V32, V33, V34, V35, V36, V37, V38, {'Idris.Prelude.Types.Nothing'}, V40, V41, V42, V43} end(E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V44} end), case V45 of {'Idris.Prelude.Types.Left', E33} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V47) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--nextProofSearch-4775'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> case V5 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--nextResult'('erased', V2, V1, V7, V8))), case V9 of {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> case V11 of {'Idris.Prelude.Types.Just', E5} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V13, V14) -> begin (V30 = begin (V29 = ('erlang':'put'(V0, case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V15, V16, V17, V18, V19, V20, V21, V22, V23, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V6, V14}}, V25, V26, V27, V28} end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V29} end), case V30 of {'Idris.Prelude.Types.Left', E22} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V6, V13}}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V48 = begin (V47 = ('erlang':'put'(V0, case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V33, V34, V35, V36, V37, V38, V39, V40, V41, {'Idris.Prelude.Types.Nothing'}, V43, V44, V45, V46} end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V47} end), case V48 of {'Idris.Prelude.Types.Left', E38} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V50) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V51) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addMadeLemma,insertInBlank-4635'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> [('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Parser.Unlit':'un--relit'(V8, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V4)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V3, <<"\x{a}"/utf8>>)))))))))) | V7]; 1 -> [V6 | ('nested--25970-4604--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V8, V7))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--proofSearch,replaceStr-4544'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V5, ('Idris.Idris2.Prelude.Types':'un--pack'(('Idris.Idris2.Data.List':'un--drop'('erased', ('Idris.Idris2.Prelude.Types.Strings':'un--length'(V6)), ('Idris.Idris2.Prelude.Types':'un--unpack'(V4)))))))); 1 -> ('Idris.Idris2.Prelude.Types':'un--strCons'(('erlang':'hd'(('string':'next_grapheme'(V4)))), ('nested--25889-4533--in--un--replaceStr'(V0, V1, V2, V3, V6, V5, case ('string':'next_grapheme'(V4)) of [E0 | E1] when (erlang:'is_binary'(E1)) -> (fun (V8, V9) -> V9 end(E0, E1)); _ -> <<""/utf8>> end)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addClause-4466'(V0, V1, V2, V3) -> case V3 of 0 -> [('un--rtrim'(V2)) | [V0 | V1]]; 1 -> [V0 | ('un--addClause'(V2, 0, V1))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in updateFile-4376'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Right', E0} -> (fun (V5) -> fun (V6) -> begin (V35 = begin (V34 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> V13 end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> begin (V20 = (V17(V19))), begin (V21 = (V18(V19))), (V20(V21)) end end end end end end end}, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V24(V26))), ((V25(V27))(V26)) end end end end end end, fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V29(V30))), (V31(V30)) end end end end}, fun (V32) -> fun (V33) -> V33 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V3, <<"~"/utf8>>)), V5))(V6))), {'Idris.Prelude.Types.Right', V34} end), case V35 of {'Idris.Prelude.Types.Left', E1} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V37) -> begin (V66 = begin (V65 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V40, V41, V42)) end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> V44 end end end, fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> begin (V51 = (V48(V50))), begin (V52 = (V49(V50))), (V51(V52)) end end end end end end end}, fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V55(V57))), ((V56(V58))(V57)) end end end end end end, fun (V59) -> fun (V60) -> fun (V61) -> begin (V62 = (V60(V61))), (V62(V61)) end end end end}, fun (V63) -> fun (V64) -> V64 end end}, V3, ('Idris.Idris2.Data.Strings':'un--unlines'((V0(('Idris.Idris2.Data.Strings':'un--lines'(V5))))))))(V6))), {'Idris.Prelude.Types.Right', V65} end), case V66 of {'Idris.Prelude.Types.Left', E3} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'('erased'))}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Left', E5} -> (fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.FileErr', V3, V69}, V70)) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateFile-4352'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> fun (V5) -> begin (V34 = begin (V33 = (('Idris.Idris2.Erlang.System.File':'un--readFile'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), ((V24(V26))(V25)) end end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V28(V29))), (V30(V29)) end end end end}, fun (V31) -> fun (V32) -> V32 end end}, V4))(V5))), {'Idris.Prelude.Types.Right', V33} end), case V34 of {'Idris.Prelude.Types.Left', E1} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Right', E3} -> (fun (V37) -> begin (V66 = begin (V65 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V40, V41, V42)) end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> V44 end end end, fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> begin (V51 = (V48(V50))), begin (V52 = (V49(V50))), (V51(V52)) end end end end end end end}, fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V55(V57))), ((V56(V58))(V57)) end end end end end end, fun (V59) -> fun (V60) -> fun (V61) -> begin (V62 = (V60(V61))), (V62(V61)) end end end end}, fun (V63) -> fun (V64) -> V64 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V4, <<"~"/utf8>>)), V37))(V5))), {'Idris.Prelude.Types.Right', V65} end), case V66 of {'Idris.Prelude.Types.Left', E4} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V68) -> begin (V97 = begin (V96 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V71, V72, V73)) end end end end end, fun (V74) -> fun (V75) -> fun (V76) -> V75 end end end, fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> begin (V82 = (V79(V81))), begin (V83 = (V80(V81))), (V82(V83)) end end end end end end end}, fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> begin (V89 = (V86(V88))), ((V87(V89))(V88)) end end end end end end, fun (V90) -> fun (V91) -> fun (V92) -> begin (V93 = (V91(V92))), (V93(V92)) end end end end}, fun (V94) -> fun (V95) -> V95 end end}, V4, ('Idris.Idris2.Data.Strings':'un--unlines'((V0(('Idris.Idris2.Data.Strings':'un--lines'(V37))))))))(V5))), {'Idris.Prelude.Types.Right', V96} end), case V97 of {'Idris.Prelude.Types.Left', E6} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'('erased'))}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); {'Idris.Prelude.Types.Left', E8} -> (fun (V100) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.FileErr', V4, V100}, V5)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V101) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'('erased'))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in findCG-4160'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> fun (V6) -> {'Idris.Prelude.Types.Right', V5} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V7) -> begin (V36 = begin (V35 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"No such code generator: "/utf8>>, V3))))(V7))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E1} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V38) -> begin (V66 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> V45 end end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), begin (V53 = (V50(V51))), (V52(V53)) end end end end end end end}, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V56(V58))), ((V57(V59))(V58)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V61(V62))), (V63(V62)) end end end end}, fun (V64) -> fun (V65) -> V65 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V7))), {'Idris.Prelude.Types.Right', V66} end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--findCG-4089'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.Chez'} -> (fun () -> fun (V4) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.Scheme.Chez':'un--codegenChez'())} end end()); {'Idris.Core.Options.Racket'} -> (fun () -> fun (V5) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.Scheme.Racket':'un--codegenRacket'())} end end()); {'Idris.Core.Options.Gambit'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.Scheme.Gambit':'un--codegenGambit'())} end end()); {'Idris.Core.Options.Node'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.Node':'un--codegenNode'())} end end()); {'Idris.Core.Options.Javascript'} -> (fun () -> fun (V8) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.Javascript':'un--codegenJavascript'())} end end()); {'Idris.Core.Options.RefC'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.RefC.RefC':'un--codegenRefC'())} end end()); {'Idris.Core.Options.Other', E0} -> (fun (V10) -> fun (V11) -> begin (V12 = ('Idris.Idris2.Idris.REPLOpts':'un--getCodegen'(V1, V10, V11))), case V12 of {'Idris.Prelude.Types.Left', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V14) -> case V14 of {'Idris.Prelude.Types.Just', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Right', V15} end(E3)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V44 = begin (V43 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), begin (V30 = (V27(V28))), (V29(V30)) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), ((V34(V36))(V35)) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V38(V39))), (V40(V39)) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"No such code generator: "/utf8>>, V10))))(V11))), {'Idris.Prelude.Types.Right', V43} end), case V44 of {'Idris.Prelude.Types.Left', E4} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V46) -> begin (V74 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V49, V50, V51)) end end end end end, fun (V52) -> fun (V53) -> fun (V54) -> V53 end end end, fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> begin (V60 = (V57(V59))), begin (V61 = (V58(V59))), (V60(V61)) end end end end end end end}, fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> begin (V67 = (V64(V66))), ((V65(V67))(V66)) end end end end end end, fun (V68) -> fun (V69) -> fun (V70) -> begin (V71 = (V69(V70))), (V71(V70)) end end end end}, fun (V72) -> fun (V73) -> V73 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V11))), {'Idris.Prelude.Types.Right', V74} end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--setOpt-4013'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Context':'un--setCG'(V2, V5, V6)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V1, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"No such code generator available"/utf8>>)), V7)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--setOpt-3994'(V0, V1, V2, V3) -> case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V4, V5, V6, V7, V8, V0, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--setOpt-3955'(V0, V1, V2, V3) -> case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V4, V0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--setOpt-3916'(V0, V1, V2, V3) -> case V3 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V0, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--setOpt-3877'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkPPOpts', E0, E1, E2} -> (fun (V4, V5, V6) -> {'Idris.Core.Options.MkPPOpts', V4, V5, V0} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--setOpt-3856'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkPPOpts', E0, E1, E2} -> (fun (V4, V5, V6) -> {'Idris.Core.Options.MkPPOpts', V0, V5, V6} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--displayPats-3759'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Core.Context.PMDef', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> fun (V12) -> begin (V13 = (('un--displayType'(V5, V4, V3, {'Idris.Builtin.MkPair', V0, {'Idris.Builtin.MkPair', V1, V2}}))(V12))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V17 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V16) -> ('un--displayClause'(V5, V4, V3, V16)) end, V11, []))(V12))), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', [V15 | V19]))} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V20) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V0)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"is not a pattern matching definition"/utf8>>))))} end end.
'case--showInfo-3406'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V12) -> fun (V13) -> begin (V41 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V16, V17, V18)) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> V20 end end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V24(V26))), begin (V28 = (V25(V26))), (V27(V28)) end end end end end end end}, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V31(V33))), ((V32(V34))(V33)) end end end end end end, fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V36(V37))), (V38(V37)) end end end end}, fun (V39) -> fun (V40) -> V40 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Compiled: "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show__CDef'(V12))))))(V13))), {'Idris.Prelude.Types.Right', V41} end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--25889-4533--in--un--replaceStr'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of <<""/utf8>> -> <<""/utf8>>; _ -> ('case--proofSearch,replaceStr-4544'(V0, V1, V2, V3, V6, V5, V4, ('Idris.Idris2.Data.Strings':'un--isPrefixOf'(V4, V6)))) end.
'nested--33979-11699--in--un--prompt'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.EvalTC'} -> (fun () -> <<"[tc] "/utf8>> end()); {'Idris.Idris.Syntax.NormaliseAll'} -> (fun () -> <<""/utf8>> end()); {'Idris.Idris.Syntax.Execute'} -> (fun () -> <<"[exec] "/utf8>> end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--31871-9680--in--un--nfun'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Idris.Syntax.NormaliseAll'} -> (fun () -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Normalise':'un--normaliseAll'(V5, V6, V8, V9, V10, V11)) end end end end end()); _ -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Normalise':'un--normalise'(V5, V6, V12, V13, V14, V15)) end end end end end.
'nested--33999-12437--in--un--makeSpace'(V0) -> ('Idris.Idris2.Prelude.Types':'un--pack'(('Idris.Idris2.Prelude.Types':'un--take'('erased', V0, ('Idris.Idris2.Data.Stream':'un--repeat'('erased', $ )))))).
'nested--25970-4604--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> [('Idris.Idris2.Parser.Unlit':'un--relit'(V6, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V4)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V3, <<"\x{a}"/utf8>>)))))))) | []]; [E0 | E1] -> (fun (V8, V9) -> ('case--addMadeLemma,insertInBlank-4635'(V0, V1, V2, V3, V4, V5, V8, V9, V6, ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(('Idris.Idris2.Data.Strings':'un--trim'(V8)), <<""/utf8>>)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--33768-11455--in--un--getLoad'(V0, V1, V2, V3) -> {'Idris.Prelude.Types.Just', (V2(('Idris.Idris2.Data.Strings':'un--trim'(('Idris.Idris2.Prelude.Types':'un--substr'(V1, ('Idris.Idris2.Prelude.Types.Strings':'un--length'(V3)), V3))))))}.
'nested--33768-11456--in--un--fnameCmd'(V0, V1, V2) -> case V1 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> ('case--parseRepl,fnameCmd-11481'(V0, V5, V6, V4, V2, ('Idris.Idris2.Data.Strings':'un--isPrefixOf'(V5, V2)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--31495-9327--in--un--execDecl'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = (('Idris.Idris2.Idris.Desugar':'un--desugarDecl'(V2, V4, V3, V1, [], V5))(V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V10) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'([], V4, V1, V3, [], [], {'Idris.Core.Env.Nil'}, V10)) end, V9))(V6)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--31871-9679--in--un--emode'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Idris.Syntax.EvalTC'} -> (fun () -> {'Idris.TTImp.Elab.Check.InType'} end()); _ -> {'Idris.TTImp.Elab.Check.InExpr'} end.
'nested--33999-12438--in--un--col'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V2, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('nested--33999-12437--in--un--makeSpace'(('Idris.Idris2.Prelude.Types':'un--minus'(V0, ('Idris.Idris2.Prelude.Types.Strings':'un--length'(V2)))))), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V3, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('nested--33999-12437--in--un--makeSpace'(('Idris.Idris2.Prelude.Types':'un--minus'(V1, ('Idris.Idris2.Prelude.Types.Strings':'un--length'(V3)))))), V4)))))))).
'nested--33999-12439--in--un--cmdInfo'(V0) -> case V0 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('nested--33999-12438--in--un--col'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))), ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<" "/utf8>>, V1)), ('Idris.Idris2.Idris.Parser':'dn--un--show_Show__CmdArg'(V3)), V4)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--26101-4721--in--un--addW'(V0, V1, V2, V3, V4, V5, V6) -> case V4 of 0 -> case V6 of [E2 | E3] -> (fun (V7, V8) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Data.List':'un--reverse'('erased', V5)), ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V9) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V3, V9)) end, V2)), V8)))) end(E2, E3)); [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> begin (V10 = (V4 - 1)), case V6 of [E0 | E1] -> (fun (V11, V12) -> ('nested--26101-4721--in--un--addW'(V0, V1, V2, V3, V10, [V11 | V5], V12)) end(E0, E1)); [] -> ('Idris.Idris2.Data.List':'un--reverse'('erased', V5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'nested--25970-4605--in--un--addApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of 0 -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Data.List':'un--reverse'('erased', ('nested--25970-4604--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V8)))), V9)); _ -> begin (V10 = (V7 - 1)), case V9 of [E0 | E1] -> (fun (V11, V12) -> ('nested--25970-4605--in--un--addApp'(V0, V1, V2, V3, V4, V5, V6, V10, [V11 | V8], V12)) end(E0, E1)); [] -> ('Idris.Idris2.Data.List':'un--reverse'('erased', V8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--updateFile'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> (('case--updateFile-4352'(V1, V0, V6, case V6 of {'Idris.Idris.REPLOpts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> V9 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--showInfo'(V0, V1) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V4, V5) -> fun (V6) -> begin (V84 = begin (V32 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Def'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__Def'(V9, V10)) end end}, case V5 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> V28 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6))), case V32 of {'Idris.Prelude.Types.Left', E25} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V34) -> begin (V83 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V37, V38, V39)) end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> V41 end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> begin (V48 = (V45(V47))), begin (V49 = (V46(V47))), (V48(V49)) end end end end end end end}, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> begin (V55 = (V52(V54))), ((V53(V55))(V54)) end end end end end end, fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V57(V58))), (V59(V58)) end end end end}, fun (V60) -> fun (V61) -> V61 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(case V5 of {'Idris.Core.Context.MkGlobalDef', E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82) -> V63 end(E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.Core.Context':'dn--un--show_Show__Def'(V34))))))))(V6))), {'Idris.Prelude.Types.Right', V83} end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V84 of {'Idris.Prelude.Types.Left', E48} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V86) -> begin (V136 = begin (V135 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V89, V90, V91)) end end end end end, fun (V92) -> fun (V93) -> fun (V94) -> V93 end end end, fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> begin (V100 = (V97(V99))), begin (V101 = (V98(V99))), (V100(V101)) end end end end end end end}, fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> begin (V107 = (V104(V106))), ((V105(V107))(V106)) end end end end end end, fun (V108) -> fun (V109) -> fun (V110) -> begin (V111 = (V109(V110))), (V111(V110)) end end end end}, fun (V112) -> fun (V113) -> V113 end end}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show__ZeroOneOmega'(case V5 of {'Idris.Core.Context.MkGlobalDef', E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70} -> (fun (V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134) -> V121 end(E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V6))), {'Idris.Prelude.Types.Right', V135} end), case V136 of {'Idris.Prelude.Types.Left', E71} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V138) -> begin (V191 = begin (V190 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V141, V142, V143)) end end end end end, fun (V144) -> fun (V145) -> fun (V146) -> V145 end end end, fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> begin (V152 = (V149(V151))), begin (V153 = (V150(V151))), (V152(V153)) end end end end end end end}, fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> begin (V159 = (V156(V158))), ((V157(V159))(V158)) end end end end end end, fun (V160) -> fun (V161) -> fun (V162) -> begin (V163 = (V161(V162))), (V163(V162)) end end end end}, fun (V164) -> fun (V165) -> V165 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Erasable args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V166) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Nat'(V166)) end, fun (V167) -> fun (V168) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__Nat'(V167, V168)) end end}, case V5 of {'Idris.Core.Context.MkGlobalDef', E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93} -> (fun (V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189) -> V172 end(E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V6))), {'Idris.Prelude.Types.Right', V190} end), case V191 of {'Idris.Prelude.Types.Left', E94} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V193) -> begin (V246 = begin (V245 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V196, V197, V198)) end end end end end, fun (V199) -> fun (V200) -> fun (V201) -> V200 end end end, fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> fun (V206) -> begin (V207 = (V204(V206))), begin (V208 = (V205(V206))), (V207(V208)) end end end end end end end}, fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> begin (V214 = (V211(V213))), ((V212(V214))(V213)) end end end end end end, fun (V215) -> fun (V216) -> fun (V217) -> begin (V218 = (V216(V217))), (V218(V217)) end end end end}, fun (V219) -> fun (V220) -> V220 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Detaggable arg types: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V221) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Nat'(V221)) end, fun (V222) -> fun (V223) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__Nat'(V222, V223)) end end}, case V5 of {'Idris.Core.Context.MkGlobalDef', E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116} -> (fun (V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244) -> V228 end(E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V6))), {'Idris.Prelude.Types.Right', V245} end), case V246 of {'Idris.Prelude.Types.Left', E117} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V248) -> begin (V301 = begin (V300 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V249) -> fun (V250) -> fun (V251) -> fun (V252) -> fun (V253) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V251, V252, V253)) end end end end end, fun (V254) -> fun (V255) -> fun (V256) -> V255 end end end, fun (V257) -> fun (V258) -> fun (V259) -> fun (V260) -> fun (V261) -> begin (V262 = (V259(V261))), begin (V263 = (V260(V261))), (V262(V263)) end end end end end end end}, fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> begin (V269 = (V266(V268))), ((V267(V269))(V268)) end end end end end end, fun (V270) -> fun (V271) -> fun (V272) -> begin (V273 = (V271(V272))), (V273(V272)) end end end end}, fun (V274) -> fun (V275) -> V275 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Specialise args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V276) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Nat'(V276)) end, fun (V277) -> fun (V278) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__Nat'(V277, V278)) end end}, case V5 of {'Idris.Core.Context.MkGlobalDef', E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139} -> (fun (V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297, V298, V299) -> V284 end(E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V6))), {'Idris.Prelude.Types.Right', V300} end), case V301 of {'Idris.Prelude.Types.Left', E140} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V303) -> begin (V356 = begin (V355 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V304) -> fun (V305) -> fun (V306) -> fun (V307) -> fun (V308) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V306, V307, V308)) end end end end end, fun (V309) -> fun (V310) -> fun (V311) -> V310 end end end, fun (V312) -> fun (V313) -> fun (V314) -> fun (V315) -> fun (V316) -> begin (V317 = (V314(V316))), begin (V318 = (V315(V316))), (V317(V318)) end end end end end end end}, fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> begin (V324 = (V321(V323))), ((V322(V324))(V323)) end end end end end end, fun (V325) -> fun (V326) -> fun (V327) -> begin (V328 = (V326(V327))), (V328(V327)) end end end end}, fun (V329) -> fun (V330) -> V330 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Inferrable args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V331) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Nat'(V331)) end, fun (V332) -> fun (V333) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__Nat'(V332, V333)) end end}, case V5 of {'Idris.Core.Context.MkGlobalDef', E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162} -> (fun (V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350, V351, V352, V353, V354) -> V340 end(E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V6))), {'Idris.Prelude.Types.Right', V355} end), case V356 of {'Idris.Prelude.Types.Left', E163} -> (fun (V357) -> {'Idris.Prelude.Types.Left', V357} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V358) -> begin (V380 = (('case--showInfo-3406'(V2, V4, V5, V0, V86, V138, V193, V248, V303, V358, case V5 of {'Idris.Core.Context.MkGlobalDef', E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185} -> (fun (V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377, V378, V379) -> V377 end(E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6))), case V380 of {'Idris.Prelude.Types.Left', E186} -> (fun (V381) -> {'Idris.Prelude.Types.Left', V381} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V382) -> begin (V418 = begin (V384 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V383) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V383)) end, ('Idris.Idris2.Data.NameMap':'un--keys'('erased', ('Idris.Idris2.Core.Context':'un--refersTo'(V5)))), []))(V6))), case V384 of {'Idris.Prelude.Types.Left', E188} -> (fun (V385) -> {'Idris.Prelude.Types.Left', V385} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V386) -> begin (V417 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V387) -> fun (V388) -> fun (V389) -> fun (V390) -> fun (V391) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V389, V390, V391)) end end end end end, fun (V392) -> fun (V393) -> fun (V394) -> V393 end end end, fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> begin (V400 = (V397(V399))), begin (V401 = (V398(V399))), (V400(V401)) end end end end end end end}, fun (V402) -> fun (V403) -> fun (V404) -> fun (V405) -> fun (V406) -> begin (V407 = (V404(V406))), ((V405(V407))(V406)) end end end end end end, fun (V408) -> fun (V409) -> fun (V410) -> begin (V411 = (V409(V410))), (V411(V410)) end end end end}, fun (V412) -> fun (V413) -> V413 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Refers to: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V414) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V414)) end, fun (V415) -> fun (V416) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V415, V416)) end end}, V386))))))(V6))), {'Idris.Prelude.Types.Right', V417} end end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V418 of {'Idris.Prelude.Types.Left', E190} -> (fun (V419) -> {'Idris.Prelude.Types.Left', V419} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V420) -> begin (V456 = begin (V422 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V421) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V421)) end, ('Idris.Idris2.Data.NameMap':'un--keys'('erased', ('Idris.Idris2.Core.Context':'un--refersToRuntime'(V5)))), []))(V6))), case V422 of {'Idris.Prelude.Types.Left', E192} -> (fun (V423) -> {'Idris.Prelude.Types.Left', V423} end(E192)); {'Idris.Prelude.Types.Right', E193} -> (fun (V424) -> begin (V455 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> fun (V429) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V427, V428, V429)) end end end end end, fun (V430) -> fun (V431) -> fun (V432) -> V431 end end end, fun (V433) -> fun (V434) -> fun (V435) -> fun (V436) -> fun (V437) -> begin (V438 = (V435(V437))), begin (V439 = (V436(V437))), (V438(V439)) end end end end end end end}, fun (V440) -> fun (V441) -> fun (V442) -> fun (V443) -> fun (V444) -> begin (V445 = (V442(V444))), ((V443(V445))(V444)) end end end end end end, fun (V446) -> fun (V447) -> fun (V448) -> begin (V449 = (V447(V448))), (V449(V448)) end end end end}, fun (V450) -> fun (V451) -> V451 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Refers to (runtime): "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V452) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V452)) end, fun (V453) -> fun (V454) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V453, V454)) end end}, V424))))))(V6))), {'Idris.Prelude.Types.Right', V455} end end(E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V456 of {'Idris.Prelude.Types.Left', E194} -> (fun (V457) -> {'Idris.Prelude.Types.Left', V457} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V458) -> begin (V511 = begin (V510 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> fun (V463) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V461, V462, V463)) end end end end end, fun (V464) -> fun (V465) -> fun (V466) -> V465 end end end, fun (V467) -> fun (V468) -> fun (V469) -> fun (V470) -> fun (V471) -> begin (V472 = (V469(V471))), begin (V473 = (V470(V471))), (V472(V473)) end end end end end end end}, fun (V474) -> fun (V475) -> fun (V476) -> fun (V477) -> fun (V478) -> begin (V479 = (V476(V478))), ((V477(V479))(V478)) end end end end end end, fun (V480) -> fun (V481) -> fun (V482) -> begin (V483 = (V481(V482))), (V483(V482)) end end end end}, fun (V484) -> fun (V485) -> V485 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Flags: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V486) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show__DefFlag'(V486)) end, fun (V487) -> fun (V488) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show__DefFlag'(V487, V488)) end end}, case V5 of {'Idris.Core.Context.MkGlobalDef', E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216} -> (fun (V489, V490, V491, V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509) -> V500 end(E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V6))), {'Idris.Prelude.Types.Right', V510} end), case V511 of {'Idris.Prelude.Types.Left', E217} -> (fun (V512) -> {'Idris.Prelude.Types.Left', V512} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V513) -> begin (V543 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V514) -> fun (V515) -> ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V516) -> fun (V517) -> fun (V518) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__SCCall'(V516, V517, V518)) end end end, fun (V519) -> fun (V520) -> fun (V521) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__SCCall'(V519, V520, V521)) end end end}, V514, V515)) end end, case V5 of {'Idris.Core.Context.MkGlobalDef', E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239} -> (fun (V522, V523, V524, V525, V526, V527, V528, V529, V530, V531, V532, V533, V534, V535, V536, V537, V538, V539, V540, V541, V542) -> V542 end(E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, []))(V6))), case V543 of {'Idris.Prelude.Types.Left', E240} -> (fun (V544) -> {'Idris.Prelude.Types.Left', V544} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V545) -> case ('Idris.Idris2.Prelude.Basics':'un--not'(('Idris.Idris2.Data.List':'un--isNil'('erased', case V5 of {'Idris.Core.Context.MkGlobalDef', E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266} -> (fun (V546, V547, V548, V549, V550, V551, V552, V553, V554, V555, V556, V557, V558, V559, V560, V561, V562, V563, V564, V565, V566) -> V566 end(E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) of 0 -> ((begin (V605 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V567) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(case V567 of {'Idris.Core.Context.MkSCCall', E242, E243} -> (fun (V568, V569) -> V568 end(E242, E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V570) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V571) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V572) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Nat'(V572)) end, fun (V573) -> fun (V574) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__Nat'(V573, V574)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V575) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show__SizeChange'(V575)) end, fun (V576) -> fun (V577) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show__SizeChange'(V576, V577)) end end}}, V571)) end, fun (V578) -> fun (V579) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V580) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Nat'(V580)) end, fun (V581) -> fun (V582) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__Nat'(V581, V582)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V583) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show__SizeChange'(V583)) end, fun (V584) -> fun (V585) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show__SizeChange'(V584, V585)) end end}}, V578, V579)) end end}, V570)) end, fun (V586) -> fun (V587) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V588) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V589) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Nat'(V589)) end, fun (V590) -> fun (V591) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__Nat'(V590, V591)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V592) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show__SizeChange'(V592)) end, fun (V593) -> fun (V594) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show__SizeChange'(V593, V594)) end end}}, V588)) end, fun (V595) -> fun (V596) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V597) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Nat'(V597)) end, fun (V598) -> fun (V599) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__Nat'(V598, V599)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V600) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show__SizeChange'(V600)) end, fun (V601) -> fun (V602) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show__SizeChange'(V601, V602)) end end}}, V595, V596)) end end}, V586, V587)) end end}, case V567 of {'Idris.Core.Context.MkSCCall', E244, E245} -> (fun (V603, V604) -> V604 end(E244, E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))) end, V545))), fun () -> fun (V606) -> begin (V634 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V607) -> fun (V608) -> fun (V609) -> fun (V610) -> fun (V611) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V609, V610, V611)) end end end end end, fun (V612) -> fun (V613) -> fun (V614) -> V613 end end end, fun (V615) -> fun (V616) -> fun (V617) -> fun (V618) -> fun (V619) -> begin (V620 = (V617(V619))), begin (V621 = (V618(V619))), (V620(V621)) end end end end end end end}, fun (V622) -> fun (V623) -> fun (V624) -> fun (V625) -> fun (V626) -> begin (V627 = (V624(V626))), ((V625(V627))(V626)) end end end end end end, fun (V628) -> fun (V629) -> fun (V630) -> begin (V631 = (V629(V630))), (V631(V630)) end end end end}, fun (V632) -> fun (V633) -> V633 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Size change: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, V605))))))(V606))), {'Idris.Prelude.Types.Right', V634} end end end end())(V6)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--setOpt'(V0, V1, V2) -> case V2 of {'Idris.Idris.Syntax.ShowImplicits', E0} -> (fun (V3) -> fun (V4) -> begin (V5 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V4))), case V5 of {'Idris.Prelude.Types.Left', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V7) -> ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V7 of {'Idris.Core.Options.MkPPOpts', E3, E4, E5} -> (fun (V8, V9, V10) -> {'Idris.Core.Options.MkPPOpts', V3, V9, V10} end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Idris.Syntax.ShowNamespace', E6} -> (fun (V11) -> fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V12))), case V13 of {'Idris.Prelude.Types.Left', E7} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V15) -> ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V15 of {'Idris.Core.Options.MkPPOpts', E9, E10, E11} -> (fun (V16, V17, V18) -> {'Idris.Core.Options.MkPPOpts', V16, V17, V11} end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V12)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6)); {'Idris.Idris.Syntax.ShowTypes', E12} -> (fun (V19) -> fun (V20) -> begin (V22 = begin (V21 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V21} end), case V22 of {'Idris.Prelude.Types.Left', E13} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V24) -> begin (V39 = ('erlang':'put'(V1, case V24 of {'Idris.Idris.REPLOpts.MkREPLOpts', E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V19, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38} end(E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V39} end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E12)); {'Idris.Idris.Syntax.EvalMode', E29} -> (fun (V40) -> fun (V41) -> begin (V43 = begin (V42 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V42} end), case V43 of {'Idris.Prelude.Types.Left', E30} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V45) -> begin (V60 = ('erlang':'put'(V1, case V45 of {'Idris.Idris.REPLOpts.MkREPLOpts', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V46, V40, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59} end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V60} end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E29)); {'Idris.Idris.Syntax.Editor', E46} -> (fun (V61) -> fun (V62) -> begin (V64 = begin (V63 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V63} end), case V64 of {'Idris.Prelude.Types.Left', E47} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V66) -> begin (V81 = ('erlang':'put'(V1, case V66 of {'Idris.Idris.REPLOpts.MkREPLOpts', E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V67, V68, V69, V70, V71, V61, V73, V74, V75, V76, V77, V78, V79, V80} end(E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V81} end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E46)); {'Idris.Idris.Syntax.CG', E63} -> (fun (V82) -> fun (V83) -> begin (V85 = begin (V84 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V84} end), case V85 of {'Idris.Prelude.Types.Left', E64} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V87) -> (('case--setOpt-4013'(V82, V1, V0, V87, ('Idris.Idris2.Core.Options':'un--getCG'(case V87 of {'Idris.Core.Context.MkDefs', E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91} -> (fun (V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113) -> V92 end(E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V82))))(V83)) end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--rtrim'(V0) -> ('Idris.Idris2.Prelude.Types':'un--reverse'(('Idris.Idris2.Data.Strings':'un--ltrim'(('Idris.Idris2.Prelude.Types':'un--reverse'(V0)))))).
'un--replCmd'(V0, V1, V2, V3, V4, V5) -> case V5 of <<""/utf8>> -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> fun (V7) -> begin (V8 = (('un--interpret'(V0, V1, V2, V3, V4, V5))(V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> (('un--displayResult'(V0, V1, V2, V3, V4, V10))(V7)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--repl'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Core.Context':'un--getNS'(V0, V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V55 = begin (V54 = (('Idris.Idris2.Prelude.IO':'un--putStr'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V15, V16, V17)) end end end end end, fun (V18) -> fun (V19) -> fun (V20) -> V19 end end end, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), begin (V27 = (V24(V25))), (V26(V27)) end end end end end end end}, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> begin (V33 = (V30(V32))), ((V31(V33))(V32)) end end end end end end, fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V35(V36))), (V37(V36)) end end end end}, fun (V38) -> fun (V39) -> V39 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('nested--33979-11699--in--un--prompt'(V4, V3, V2, V1, V0, case V12 of {'Idris.Idris.REPLOpts.MkREPLOpts', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53) -> V41 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show__Namespace'(V8)), <<"> "/utf8>>))))))(V5))), {'Idris.Prelude.Types.Right', V54} end), case V55 of {'Idris.Prelude.Types.Left', E18} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V57) -> begin (V86 = begin (V85 = (('Idris.Idris2.Prelude.IO':'un--getLine'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V60, V61, V62)) end end end end end, fun (V63) -> fun (V64) -> fun (V65) -> V64 end end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> begin (V71 = (V68(V70))), begin (V72 = (V69(V70))), (V71(V72)) end end end end end end end}, fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> begin (V78 = (V75(V77))), ((V76(V78))(V77)) end end end end end end, fun (V79) -> fun (V80) -> fun (V81) -> begin (V82 = (V80(V81))), (V82(V81)) end end end end}, fun (V83) -> fun (V84) -> V84 end end}))(V5))), {'Idris.Prelude.Types.Right', V85} end), case V86 of {'Idris.Prelude.Types.Left', E20} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V88) -> (('case--repl-11747'(V4, V3, V2, V1, V0, V8, V12, V57, V88, 1))(V5)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--proofSearch'(V0, V1, V2, V3) -> case V2 of 0 -> case V3 of [E2 | E3] -> (fun (V4, V5) -> [('nested--25889-4533--in--un--replaceStr'(V4, V5, V1, V0, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"?"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V0)))), V1, V4)) | V5] end(E2, E3)); _ -> case V3 of [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V6 = (V2 - 1)), case V3 of [E0 | E1] -> (fun (V7, V8) -> [V7 | ('un--proofSearch'(V0, V1, V6, V8))] end(E0, E1)); _ -> case V3 of [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--processEdit'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.TypeAt', E0, E1, E2} -> (fun (V6, V7, V8) -> fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> begin (V40 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V8, case V13 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V14 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9))), case V40 of {'Idris.Prelude.Types.Left', E31} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V42) -> begin (V47 = case V42 of [] -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'('erased'))}; _ -> begin (V44 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V43) -> ('un--displayType'(V0, V2, V13, V43)) end, V42, []))(V9))), case V44 of {'Idris.Prelude.Types.Left', E33} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V46) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', V46))} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V47 of {'Idris.Prelude.Types.Left', E35} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V49) -> begin (V52 = ('Idris.Idris2.Core.Metadata':'un--findTypeAt'(V3, fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.FC':'un--within'({'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V6, 1)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V7, 1))}, V50)) end end, V9))), case V52 of {'Idris.Prelude.Types.Left', E37} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V54) -> case V54 of {'Idris.Prelude.Types.Just', E39} -> (fun (V55) -> case V55 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V56, V57) -> case V57 of {'Idris.Builtin.MkPair', E42, E43} -> (fun (V58, V59) -> case V49 of {'Idris.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> begin (V60 = ('un--displayTerm'(V0, V2, V13, V59, V9))), case V60 of {'Idris.Prelude.Types.Left', E44} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V62) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Core.Name':'un--nameRoot'(V56)))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')), V62))))}} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'('erased'))}} end end(E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E39)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V49 of {'Idris.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', {'Idris.Core.FC.MkFC', <<"(interactive)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, V8}, V9)) end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', V49}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.Idris.Syntax.CaseSplit', E46, E47, E48, E49} -> (fun (V63, V64, V65, V66) -> begin (V67 = ('case--processEdit-5607'(V66, V65, V64, V63, V4, V3, V2, V1, V0, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord__Int'(V65, 0))))), fun (V68) -> begin (V71 = ('Idris.Idris2.TTImp.Interactive.CaseSplit':'un--getSplits'(V0, V3, V1, fun (V69) -> fun (V70) -> ('un--anyAt'('erased', V67, V69, V70)) end end, V66, V68))), case V71 of {'Idris.Prelude.Types.Left', E50} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V73) -> case V73 of {'Idris.TTImp.Interactive.CaseSplit.OK', E52} -> (fun (V74) -> begin (V75 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--updateCase'(V0, V2, V4, V74, ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V64, 1)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V65, 1)), V68))), case V75 of {'Idris.Prelude.Types.Left', E53} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V77) -> case V63 of 0 -> ('un--updateFile'(V4, fun (V78) -> ('un--caseSplit'(('Idris.Idris2.Data.Strings':'un--unlines'(V77)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V64, 1)))))), V78)) end, V68)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V81, V82)) end end end end, fun (V83) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V83)) end, V77))))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); {'Idris.TTImp.Interactive.CaseSplit.SplitFail', E55} -> (fun (V84) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.TTImp.Interactive.CaseSplit':'dn--un--show_Show__SplitError'(V84))))}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E46, E47, E48, E49)); {'Idris.Idris.Syntax.AddClause', E56, E57, E58} -> (fun (V85, V86, V87) -> fun (V88) -> begin (V89 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--getClause'(V0, V3, V4, V86, V87, V88))), case V89 of {'Idris.Prelude.Types.Left', E59} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V91) -> case V91 of {'Idris.Prelude.Types.Just', E61} -> (fun (V92) -> case V85 of 0 -> ('un--updateFile'(V4, fun (V93) -> ('un--addClause'(V92, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(V86)))), V93)) end, V88)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V92))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E61)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V87)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"not defined here"/utf8>>))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58)); {'Idris.Idris.Syntax.ExprSearch', E62, E63, E64, E65} -> (fun (V94, V95, V96, V97) -> fun (V98) -> begin (V100 = begin (V99 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V99} end), case V100 of {'Idris.Prelude.Types.Left', E66} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V102) -> begin (V104 = begin (V103 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V103} end), case V104 of {'Idris.Prelude.Types.Left', E68} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V106) -> begin (V118 = ('Idris.Idris2.Data.List':'un--elemBy'('erased', fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V107)), ('Idris.Idris2.Core.Name':'un--dropNS'(V108)))) end end, V96, case V106 of {'Idris.Idris.Syntax.MkSyntax', E70, E71, E72, E73, E74, E75, E76, E77, E78} -> (fun (V109, V110, V111, V112, V113, V114, V115, V116, V117) -> V115 end(E70, E71, E72, E73, E74, E75, E76, E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V145 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V96, case V102 of {'Idris.Core.Context.MkDefs', E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104} -> (fun (V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144) -> V119 end(E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V98))), case V145 of {'Idris.Prelude.Types.Left', E105} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V147) -> case V147 of [E107 | E108] -> (fun (V148, V149) -> case V148 of {'Idris.Builtin.MkPair', E109, E110} -> (fun (V150, V151) -> case V151 of {'Idris.Builtin.MkPair', E111, E112} -> (fun (V152, V153) -> case V153 of {'Idris.Core.Context.Hole', E113, E114} -> (fun (V154, V155) -> case V149 of [] -> begin (V157 = fun (V156) -> ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearch'(V0, V3, V1, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V96, [], V156)) end), begin (V159 = begin (V158 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V158} end), case V159 of {'Idris.Prelude.Types.Left', E115} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V161) -> begin (V177 = begin (V176 = ('erlang':'put'(V4, case V161 of {'Idris.Idris.REPLOpts.MkREPLOpts', E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130} -> (fun (V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V162, V163, V164, V165, V166, V167, V168, V169, V170, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V96, V157}}, V172, V173, V174, V175} end(E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V176} end), case V177 of {'Idris.Prelude.Types.Left', E131} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V179) -> begin (V181 = begin (V180 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V180} end), case V181 of {'Idris.Prelude.Types.Left', E133} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V183) -> begin (V184 = ('un--nextProofSearch'(V0, V1, V4, V98))), case V184 of {'Idris.Prelude.Types.Left', E135} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V186) -> case V186 of {'Idris.Prelude.Types.Just', E137} -> (fun (V187) -> case V187 of {'Idris.Builtin.MkPair', E138, E139} -> (fun (V188, V189) -> begin (V190 = ('un--dropLams'(V154, V189))), begin (V191 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, V190, V98))), case V191 of {'Idris.Prelude.Types.Left', E140} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V193) -> begin (V194 = case V118 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V193)); 1 -> V193; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V94 of 0 -> ('un--updateFile'(V4, fun (V195) -> ('un--proofSearch'(V96, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V194)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V95, 1)))))), V195)) end, V98)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V194))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E138, E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E137)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V196) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V196)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No search results"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V197) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V197)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E113, E114)); {'Idris.Core.Context.PMDef', E142, E143, E144, E145, E146} -> (fun (V198, V199, V200, V201, V202) -> case V199 of [] -> case V200 of {'Idris.Core.CaseTree.STerm', E147, E148} -> (fun (V203, V204) -> case V149 of [] -> begin (V205 = [{'Idris.Builtin.MkPair', V150, {'Idris.Builtin.MkPair', V152, {'Idris.Core.Context.PMDef', V198, [], {'Idris.Core.CaseTree.STerm', V203, V204}, V201, V202}}} | []]), (('case--case block in processEdit-6498'(V97, V96, V95, V94, V4, V3, V2, V1, V0, V102, V106, V118, V201, V202, V203, V150, V152, V204, V198, V205, case V198 of {'Idris.Core.Context.MkPMDefInfo', E149, E150} -> (fun (V206, V207) -> V206 end(E149, E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V98)) end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V208) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V208)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E147, E148)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V209) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V209)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V210) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V210)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E142, E143, E144, E145, E146)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V211) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V211)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E111, E112)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V212) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V212)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E109, E110)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V213) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V213)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E107, E108)); [] -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"Unknown name"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V96))))}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V214) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V214)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E62, E63, E64, E65)); {'Idris.Idris.Syntax.ExprSearchNext'} -> (fun () -> fun (V215) -> begin (V217 = begin (V216 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V216} end), case V217 of {'Idris.Prelude.Types.Left', E151} -> (fun (V218) -> {'Idris.Prelude.Types.Left', V218} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V219) -> begin (V221 = begin (V220 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V220} end), case V221 of {'Idris.Prelude.Types.Left', E153} -> (fun (V222) -> {'Idris.Prelude.Types.Left', V222} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V223) -> begin (V224 = ('un--nextProofSearch'(V0, V1, V4, V215))), case V224 of {'Idris.Prelude.Types.Left', E155} -> (fun (V225) -> {'Idris.Prelude.Types.Left', V225} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V226) -> case V226 of {'Idris.Prelude.Types.Just', E157} -> (fun (V227) -> case V227 of {'Idris.Builtin.MkPair', E158, E159} -> (fun (V228, V229) -> begin (V256 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V228, case V219 of {'Idris.Core.Context.MkDefs', E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185} -> (fun (V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255) -> V230 end(E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V215))), case V256 of {'Idris.Prelude.Types.Left', E186} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V258) -> case V258 of [E188 | E189] -> (fun (V259, V260) -> case V259 of {'Idris.Builtin.MkPair', E190, E191} -> (fun (V261, V262) -> case V262 of {'Idris.Builtin.MkPair', E192, E193} -> (fun (V263, V264) -> case V264 of {'Idris.Core.Context.Hole', E194, E195} -> (fun (V265, V266) -> case V260 of [] -> begin (V278 = ('Idris.Idris2.Data.List':'un--elemBy'('erased', fun (V267) -> fun (V268) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V267)), ('Idris.Idris2.Core.Name':'un--dropNS'(V268)))) end end, V228, case V223 of {'Idris.Idris.Syntax.MkSyntax', E196, E197, E198, E199, E200, E201, E202, E203, E204} -> (fun (V269, V270, V271, V272, V273, V274, V275, V276, V277) -> V275 end(E196, E197, E198, E199, E200, E201, E202, E203, E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V279 = ('un--dropLams'(V265, V229))), begin (V280 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, V279, V215))), case V280 of {'Idris.Prelude.Types.Left', E205} -> (fun (V281) -> {'Idris.Prelude.Types.Left', V281} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V282) -> begin (V283 = case V278 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V282)); 1 -> V282; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DisplayEdit', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V283))}} end end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V284) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V284)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E194, E195)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V285) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V285)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E192, E193)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V286) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V286)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E190, E191)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V287) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V287)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E188, E189)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V288) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V288)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Not a searchable hole"/utf8>>))))))}} end end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E158, E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E157)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V289) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V289)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No more results"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.GenerateDef', E207, E208, E209, E210} -> (fun (V290, V291, V292, V293) -> fun (V294) -> begin (V296 = begin (V295 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V295} end), case V296 of {'Idris.Prelude.Types.Left', E211} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E211)); {'Idris.Prelude.Types.Right', E212} -> (fun (V298) -> begin (V301 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V3, fun (V299) -> fun (V300) -> ('Idris.Idris2.Core.FC':'un--onLine'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V291, 1)), V299)) end end, V294))), case V301 of {'Idris.Prelude.Types.Left', E213} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V303) -> case V303 of {'Idris.Prelude.Types.Just', E215} -> (fun (V304) -> case V304 of {'Idris.Builtin.MkPair', E216, E217} -> (fun (V305, V306) -> case V306 of {'Idris.Builtin.MkPair', E218, E219} -> (fun (V307, V308) -> case V308 of {'Idris.Builtin.MkPair', E220, E221} -> (fun (V309, V310) -> begin (V337 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V307, case V298 of {'Idris.Core.Context.MkDefs', E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247} -> (fun (V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336) -> V311 end(E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V294))), case V337 of {'Idris.Prelude.Types.Left', E248} -> (fun (V338) -> {'Idris.Prelude.Types.Left', V338} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V339) -> begin (V340 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V305, {'Idris.Builtin.MkPair', V307, {'Idris.Builtin.MkPair', V309, V310}}}}), case V339 of {'Idris.Prelude.Types.Just', E250} -> (fun (V341) -> case V341 of {'Idris.Core.Context.None'} -> (fun () -> begin (V347 = fun (V342) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefSort'(V0, V3, V1, fun (V343) -> fun (V344) -> ('Idris.Idris2.Core.FC':'un--onLine'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V291, 1)), V343)) end end, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))), fun (V345) -> fun (V346) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--mostUsed'(V345, V346)) end end, V307, V342)) end), begin (V349 = begin (V348 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V348} end), case V349 of {'Idris.Prelude.Types.Left', E251} -> (fun (V350) -> {'Idris.Prelude.Types.Left', V350} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V351) -> begin (V367 = begin (V366 = ('erlang':'put'(V4, case V351 of {'Idris.Idris.REPLOpts.MkREPLOpts', E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266} -> (fun (V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V291, V347}}, V363, V364, V365} end(E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V366} end), case V367 of {'Idris.Prelude.Types.Left', E267} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E267)); {'Idris.Prelude.Types.Right', E268} -> (fun (V369) -> begin (V370 = ('un--nextGenDef'(V0, V1, V4, V293, V294))), case V370 of {'Idris.Prelude.Types.Left', E269} -> (fun (V371) -> {'Idris.Prelude.Types.Left', V371} end(E269)); {'Idris.Prelude.Types.Right', E270} -> (fun (V372) -> begin (V373 = {'Idris.Prelude.Types.Just', {'Idris.Core.Context.None'}}), case V372 of {'Idris.Prelude.Types.Just', E271} -> (fun (V374) -> case V374 of {'Idris.Builtin.MkPair', E272, E273} -> (fun (V375, V376) -> case V376 of {'Idris.Builtin.MkPair', E274, E275} -> (fun (V377, V378) -> begin (V379 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Core.FC':'un--startPos'(V377))))))))), begin (V380 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V4, V291, V294))), case V380 of {'Idris.Prelude.Types.Left', E276} -> (fun (V381) -> {'Idris.Prelude.Types.Left', V381} end(E276)); {'Idris.Prelude.Types.Right', E277} -> (fun (V382) -> begin (V383 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V375, {'Idris.Builtin.MkPair', V377, V378}}}), case V382 of {'Idris.Prelude.Types.Just', E278} -> (fun (V384) -> begin (V385 = {'Idris.Prelude.Types.Just', V384}), (('case--case block in case block in case block in case block in processEdit-7444'(V293, V292, V291, V290, V4, V3, V2, V1, V0, V298, V310, V309, V305, V307, V340, V373, V347, V351, V369, V375, V377, V378, V383, V379, V384, V385, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V384))))(V294)) end end(E278)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V386) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V386)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E274, E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E272, E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E271)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V387) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V387)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No search results"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V388) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V388)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Already defined"/utf8>>))))))}} end end(E250)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V292))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220, E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E218, E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E216, E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E215)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V292)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"on line"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__Int'('erased', V291))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E207, E208, E209, E210)); {'Idris.Idris.Syntax.GenerateDefNext'} -> (fun () -> fun (V389) -> begin (V390 = ('un--nextGenDef'(V0, V1, V4, 0, V389))), case V390 of {'Idris.Prelude.Types.Left', E279} -> (fun (V391) -> {'Idris.Prelude.Types.Left', V391} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V392) -> case V392 of {'Idris.Prelude.Types.Just', E281} -> (fun (V393) -> case V393 of {'Idris.Builtin.MkPair', E282, E283} -> (fun (V394, V395) -> case V395 of {'Idris.Builtin.MkPair', E284, E285} -> (fun (V396, V397) -> begin (V398 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Integer'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Core.FC':'un--startPos'(V396))))))))), begin (V399 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V4, V394, V389))), case V399 of {'Idris.Prelude.Types.Left', E286} -> (fun (V400) -> {'Idris.Prelude.Types.Left', V400} end(E286)); {'Idris.Prelude.Types.Right', E287} -> (fun (V401) -> begin (V402 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V394, {'Idris.Builtin.MkPair', V396, V397}}}), case V401 of {'Idris.Prelude.Types.Just', E288} -> (fun (V403) -> begin (V404 = {'Idris.Prelude.Types.Just', V403}), (('case--case block in case block in processEdit-7998'(V4, V3, V2, V1, V0, V394, V396, V397, V402, V398, V403, V404, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V403))))(V389)) end end(E288)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V405) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V405)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E284, E285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E282, E283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E281)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V406) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V406)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"No more results"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.MakeLemma', E289, E290, E291} -> (fun (V407, V408, V409) -> fun (V410) -> begin (V412 = begin (V411 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V411} end), case V412 of {'Idris.Prelude.Types.Left', E292} -> (fun (V413) -> {'Idris.Prelude.Types.Left', V413} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V414) -> begin (V416 = begin (V415 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V415} end), case V416 of {'Idris.Prelude.Types.Left', E294} -> (fun (V417) -> {'Idris.Prelude.Types.Left', V417} end(E294)); {'Idris.Prelude.Types.Right', E295} -> (fun (V418) -> begin (V430 = ('Idris.Idris2.Data.List':'un--elemBy'('erased', fun (V419) -> fun (V420) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V419)), ('Idris.Idris2.Core.Name':'un--dropNS'(V420)))) end end, V409, case V418 of {'Idris.Idris.Syntax.MkSyntax', E296, E297, E298, E299, E300, E301, E302, E303, E304} -> (fun (V421, V422, V423, V424, V425, V426, V427, V428, V429) -> V427 end(E296, E297, E298, E299, E300, E301, E302, E303, E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V457 = ('un--lookupDefTyName'(V409, case V414 of {'Idris.Core.Context.MkDefs', E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330} -> (fun (V431, V432, V433, V434, V435, V436, V437, V438, V439, V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, V456) -> V431 end(E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V410))), case V457 of {'Idris.Prelude.Types.Left', E331} -> (fun (V458) -> {'Idris.Prelude.Types.Left', V458} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V459) -> case V459 of [E333 | E334] -> (fun (V460, V461) -> case V460 of {'Idris.Builtin.MkPair', E335, E336} -> (fun (V462, V463) -> case V463 of {'Idris.Builtin.MkPair', E337, E338} -> (fun (V464, V465) -> case V465 of {'Idris.Builtin.MkPair', E339, E340} -> (fun (V466, V467) -> case V466 of {'Idris.Core.Context.Hole', E341, E342} -> (fun (V468, V469) -> case V461 of [] -> begin (V470 = ('Idris.Idris2.TTImp.Interactive.MakeLemma':'un--makeLemma'(V3, V0, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V409, V468, V467, V410))), case V470 of {'Idris.Prelude.Types.Left', E343} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E343)); {'Idris.Prelude.Types.Right', E344} -> (fun (V472) -> begin (V473 = [{'Idris.Builtin.MkPair', V462, {'Idris.Builtin.MkPair', V464, {'Idris.Builtin.MkPair', {'Idris.Core.Context.Hole', V468, V469}, V467}}} | []]), case V472 of {'Idris.Builtin.MkPair', E345, E346} -> (fun (V474, V475) -> begin (V476 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, V474, V410))), case V476 of {'Idris.Prelude.Types.Left', E347} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E347)); {'Idris.Prelude.Types.Right', E348} -> (fun (V478) -> begin (V479 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, V475, V410))), case V479 of {'Idris.Prelude.Types.Left', E349} -> (fun (V480) -> {'Idris.Prelude.Types.Left', V480} end(E349)); {'Idris.Prelude.Types.Right', E350} -> (fun (V481) -> begin (V483 = begin (V482 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V482} end), case V483 of {'Idris.Prelude.Types.Left', E351} -> (fun (V484) -> {'Idris.Prelude.Types.Left', V484} end(E351)); {'Idris.Prelude.Types.Right', E352} -> (fun (V485) -> begin (V486 = ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(case V430 of 0 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V481)); 1 -> V481; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V487 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V4, V408, V410))), case V487 of {'Idris.Prelude.Types.Left', E353} -> (fun (V488) -> {'Idris.Prelude.Types.Left', V488} end(E353)); {'Idris.Prelude.Types.Right', E354} -> (fun (V489) -> begin (V490 = {'Idris.Builtin.MkPair', V474, V475}), case V489 of {'Idris.Prelude.Types.Just', E355} -> (fun (V491) -> begin (V492 = {'Idris.Prelude.Types.Just', V491}), (('case--case block in case block in case block in processEdit-8400'(V409, V408, V407, V4, V3, V2, V1, V0, V414, V418, V430, V469, V462, V464, V468, V467, V473, V474, V475, V490, V478, V481, V485, V486, V491, V492, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V491))))(V410)) end end(E355)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V493) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V493)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not found"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E352)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E350)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E348)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E345, E346)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V494) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V494)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end(E341, E342)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V495) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V495)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end(E339, E340)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V496) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V496)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end(E337, E338)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V497) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V497)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end(E335, E336)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V498) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V498)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end(E333, E334)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V499) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V499)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Can\x{27}t make lifted definition"/utf8>>))))))}} end end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E289, E290, E291)); {'Idris.Idris.Syntax.MakeCase', E356, E357, E358} -> (fun (V500, V501, V502) -> fun (V503) -> begin (V504 = ('Idris.Idris2.Idris.REPLOpts':'un--getLitStyle'(V4, V503))), case V504 of {'Idris.Prelude.Types.Left', E359} -> (fun (V505) -> {'Idris.Prelude.Types.Left', V505} end(E359)); {'Idris.Prelude.Types.Right', E360} -> (fun (V506) -> begin (V508 = begin (V507 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V507} end), case V508 of {'Idris.Prelude.Types.Left', E361} -> (fun (V509) -> {'Idris.Prelude.Types.Left', V509} end(E361)); {'Idris.Prelude.Types.Right', E362} -> (fun (V510) -> begin (V522 = ('Idris.Idris2.Data.List':'un--elemBy'('erased', fun (V511) -> fun (V512) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V511)), ('Idris.Idris2.Core.Name':'un--dropNS'(V512)))) end end, V502, case V510 of {'Idris.Idris.Syntax.MkSyntax', E363, E364, E365, E366, E367, E368, E369, E370, E371} -> (fun (V513, V514, V515, V516, V517, V518, V519, V520, V521) -> V519 end(E363, E364, E365, E366, E367, E368, E369, E370, E371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V523 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V4, V501, V503))), case V523 of {'Idris.Prelude.Types.Left', E372} -> (fun (V524) -> {'Idris.Prelude.Types.Left', V524} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V525) -> case V525 of {'Idris.Prelude.Types.Just', E374} -> (fun (V526) -> begin (V527 = {'Idris.Prelude.Types.Just', V526}), (('case--case block in processEdit-8740'(V502, V501, V500, V4, V3, V2, V1, V0, V506, V510, V522, V526, V527, ('Idris.Idris2.Parser.Unlit':'un--unlit'(V506, V526))))(V503)) end end(E374)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V528) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V528)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not available"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E356, E357, E358)); {'Idris.Idris.Syntax.MakeWith', E375, E376, E377} -> (fun (V529, V530, V531) -> fun (V532) -> begin (V533 = ('Idris.Idris2.Idris.REPLOpts':'un--getLitStyle'(V4, V532))), case V533 of {'Idris.Prelude.Types.Left', E378} -> (fun (V534) -> {'Idris.Prelude.Types.Left', V534} end(E378)); {'Idris.Prelude.Types.Right', E379} -> (fun (V535) -> begin (V536 = ('Idris.Idris2.Idris.REPLOpts':'un--getSourceLine'(V4, V530, V532))), case V536 of {'Idris.Prelude.Types.Left', E380} -> (fun (V537) -> {'Idris.Prelude.Types.Left', V537} end(E380)); {'Idris.Prelude.Types.Right', E381} -> (fun (V538) -> case V538 of {'Idris.Prelude.Types.Just', E382} -> (fun (V539) -> begin (V540 = {'Idris.Prelude.Types.Just', V539}), (('case--case block in processEdit-9001'(V531, V530, V529, V4, V3, V2, V1, V0, V535, V539, V540, ('Idris.Idris2.Parser.Unlit':'un--unlit'(V535, V539))))(V532)) end end(E382)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.EditError', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V541) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'('erased', V541)) end, ('Idris.Idris2.Data.Strings':'un--lines'(<<"Source line not available"/utf8>>))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E381)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E375, E376, E377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--processCatch'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Core.Context':'un--branch'(V0, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V19 = begin (V18 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V18} end), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V22) -> begin (V23 = (('un--process'(V0, V1, V2, V3, V4, V5))(V22))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Context':'un--commit'(V0, V22))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Right', V25} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V29) -> fun (V30) -> begin (V32 = begin (V31 = ('erlang':'put'(V0, V9))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E12} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V34) -> begin (V36 = begin (V35 = ('erlang':'put'(V1, V13))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E14} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V38) -> begin (V40 = begin (V39 = ('erlang':'put'(V2, V17))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E16} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V42) -> begin (V44 = begin (V43 = ('erlang':'put'(V4, V21))), {'Idris.Prelude.Types.Right', V43} end), case V44 of {'Idris.Prelude.Types.Left', E18} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Idris.Error':'un--display'(V0, V2, V4, V29, V30))), case V47 of {'Idris.Prelude.Types.Left', E20} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.REPLError', V49}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V6)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--process'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.NewDefn', E0} -> (fun (V6) -> fun (V7) -> ('un--execDecls'(V0, V1, V2, V3, V6, V7)) end end(E0)); {'Idris.Idris.Syntax.Eval', E1} -> (fun (V8) -> fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> (('case--process-9717'(V8, V4, V3, V2, V1, V0, V13, case V13 of {'Idris.Idris.REPLOpts.MkREPLOpts', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> V15 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); {'Idris.Idris.Syntax.Check', E18} -> (fun (V28) -> case V28 of {'Idris.Idris.Syntax.PRef', E39, E40} -> (fun (V29, V30) -> fun (V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E41} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V35) -> begin (V62 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V30, case V35 of {'Idris.Core.Context.MkDefs', E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68} -> (fun (V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V36 end(E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V31))), case V62 of {'Idris.Prelude.Types.Left', E69} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V64) -> case V64 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V29, V30}, V31)); _ -> begin (V66 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V65) -> ('un--displayType'(V0, V2, V35, V65)) end, V64, []))(V31))), case V66 of {'Idris.Prelude.Types.Left', E71} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Printed', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', V68))}} end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E39, E40)); _ -> fun (V69) -> begin (V70 = (('Idris.Idris2.Core.Context':'un--resolveName'(V0, {'Idris.Core.Name.UN', <<"[input]"/utf8>>}))(V69))), case V70 of {'Idris.Prelude.Types.Left', E19} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V72) -> begin (V73 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, {'Idris.Idris.Desugar.AnyExpr'}, [], V28, V69))), case V73 of {'Idris.Prelude.Types.Left', E21} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V75) -> begin (V76 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V72, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V75, {'Idris.Prelude.Types.Nothing'}))(V69))), case V76 of {'Idris.Prelude.Types.Left', E23} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V78) -> case V78 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V79, V80) -> begin (V82 = begin (V81 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V81} end), case V82 of {'Idris.Prelude.Types.Left', E27} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V84) -> begin (V88 = begin (V85 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V84, {'Idris.Core.Env.Nil'}, V79, V69))), case V85 of {'Idris.Prelude.Types.Left', E29} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V87) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V87, V69)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V88 of {'Idris.Prelude.Types.Left', E31} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V90) -> begin (V91 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V80))(V69))), case V91 of {'Idris.Prelude.Types.Left', E33} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V93) -> begin (V97 = begin (V94 = (('Idris.Idris2.Core.Normalise':'un--normaliseScope'(V0, [], V84, {'Idris.Core.Env.Nil'}, V93))(V69))), case V94 of {'Idris.Prelude.Types.Left', E35} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V96) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V96, V69)) end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V97 of {'Idris.Prelude.Types.Left', E37} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.TermChecked', V90, V99}} end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E18)); {'Idris.Idris.Syntax.PrintDef', E73} -> (fun (V100) -> fun (V101) -> begin (V103 = begin (V102 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V102} end), case V103 of {'Idris.Prelude.Types.Left', E74} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V105) -> begin (V132 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V100, case V105 of {'Idris.Core.Context.MkDefs', E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101} -> (fun (V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131) -> V106 end(E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V101))), case V132 of {'Idris.Prelude.Types.Left', E102} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V134) -> case V134 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V100}, V101)); _ -> begin (V136 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V135) -> ('un--displayPats'(V0, V2, V105, V135)) end, V134, []))(V101))), case V136 of {'Idris.Prelude.Types.Left', E104} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V138) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Printed', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', V138))}} end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E73)); {'Idris.Idris.Syntax.Reload'} -> (fun () -> fun (V139) -> begin (V141 = begin (V140 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V140} end), case V141 of {'Idris.Prelude.Types.Left', E106} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V143) -> (('case--process-10297'(V4, V3, V2, V1, V0, V143, case V143 of {'Idris.Idris.REPLOpts.MkREPLOpts', E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121} -> (fun (V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157) -> V146 end(E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V139)) end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Load', E122} -> (fun (V158) -> fun (V159) -> begin (V161 = begin (V160 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V160} end), case V161 of {'Idris.Prelude.Types.Left', E123} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V163) -> begin (V179 = begin (V178 = ('erlang':'put'(V4, case V163 of {'Idris.Idris.REPLOpts.MkREPLOpts', E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138} -> (fun (V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V164, V165, {'Idris.Prelude.Types.Just', V158}, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177} end(E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V178} end), case V179 of {'Idris.Prelude.Types.Left', E139} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V181) -> ('un--loadMainFile'(V0, V1, V2, V3, V4, V158, V159)) end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E122)); {'Idris.Idris.Syntax.ImportMod', E141} -> (fun (V182) -> fun (V183) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V184) -> begin (V185 = ('Idris.Idris2.Idris.ProcessIdr':'un--addImport'(V0, V1, V2, {'Idris.Idris.Syntax.MkImport', ('Idris.Idris2.Core.FC':'un--emptyFC'()), 1, V182, ('Idris.Idris2.Core.Name.Namespace':'un--miAsNamespace'(V182))}, V184))), case V185 of {'Idris.Prelude.Types.Left', E142} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V187) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ModuleLoaded', ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show__ModuleIdent'(V182))}} end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V188) -> fun (V189) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ErrorLoadingModule', ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show__ModuleIdent'(V182)), V188}} end end, V183)) end end(E141)); {'Idris.Idris.Syntax.CD', E144} -> (fun (V190) -> fun (V191) -> begin (V192 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V0, V190, V191))), case V192 of {'Idris.Prelude.Types.Left', E145} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V194) -> begin (V195 = ('Idris.Idris2.Core.Context':'un--getWorkingDir'(V191))), case V195 of {'Idris.Prelude.Types.Left', E147} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V197) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CurrentDirectory', V197}} end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E144)); {'Idris.Idris.Syntax.CWD'} -> (fun () -> fun (V198) -> begin (V199 = ('Idris.Idris2.Core.Context':'un--getWorkingDir'(V198))), case V199 of {'Idris.Prelude.Types.Left', E149} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E149)); {'Idris.Prelude.Types.Right', E150} -> (fun (V201) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CurrentDirectory', V201}} end(E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Edit'} -> (fun () -> fun (V202) -> begin (V204 = begin (V203 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V203} end), case V204 of {'Idris.Prelude.Types.Left', E151} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V206) -> (('case--process-10451'(V4, V3, V2, V1, V0, V206, case V206 of {'Idris.Idris.REPLOpts.MkREPLOpts', E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166} -> (fun (V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220) -> V209 end(E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V202)) end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Compile', E167, E168} -> (fun (V221, V222) -> fun (V223) -> ('un--compileExp'(V0, V1, V2, V3, V4, V221, V222, V223)) end end(E167, E168)); {'Idris.Idris.Syntax.Exec', E169} -> (fun (V224) -> fun (V225) -> ('un--execExp'(V0, V1, V2, V3, V4, V224, V225)) end end(E169)); {'Idris.Idris.Syntax.Help'} -> (fun () -> fun (V226) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.RequestedHelp'}} end end()); {'Idris.Idris.Syntax.ProofSearch', E170} -> (fun (V227) -> fun (V228) -> begin (V230 = begin (V229 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V229} end), case V230 of {'Idris.Prelude.Types.Left', E171} -> (fun (V231) -> {'Idris.Prelude.Types.Left', V231} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V232) -> begin (V259 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V227, case V232 of {'Idris.Core.Context.MkDefs', E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198} -> (fun (V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258) -> V233 end(E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V228))), case V259 of {'Idris.Prelude.Types.Left', E199} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V261) -> case V261 of [E201 | E202] -> (fun (V262, V263) -> case V262 of {'Idris.Builtin.MkPair', E203, E204} -> (fun (V264, V265) -> case V265 of {'Idris.Builtin.MkPair', E205, E206} -> (fun (V266, V267) -> case V263 of [] -> begin (V268 = ('Idris.Idris2.Core.Unify':'un--search'([], V0, V1, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), 1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(1000)), V264, V267, {'Idris.Core.Env.Nil'}, V228))), case V268 of {'Idris.Prelude.Types.Left', E207} -> (fun (V269) -> {'Idris.Prelude.Types.Left', V269} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V270) -> begin (V274 = begin (V271 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V232, {'Idris.Core.Env.Nil'}, V270, V228))), case V271 of {'Idris.Prelude.Types.Left', E209} -> (fun (V272) -> {'Idris.Prelude.Types.Left', V272} end(E209)); {'Idris.Prelude.Types.Right', E210} -> (fun (V273) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V273, V228)) end(E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V274 of {'Idris.Prelude.Types.Left', E211} -> (fun (V275) -> {'Idris.Prelude.Types.Left', V275} end(E211)); {'Idris.Prelude.Types.Right', E212} -> (fun (V276) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ProofFound', V276}} end(E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V277) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V277)) end, V261))}, V228)) end end(E205, E206)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V278) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V278)) end, V261))}, V228)) end end(E203, E204)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V279) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V279)) end, V261))}, V228)) end end(E201, E202)); [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V227}, V228)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V280) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V280)) end, V261))}, V228)) end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E170)); {'Idris.Idris.Syntax.Missing', E213} -> (fun (V281) -> fun (V282) -> begin (V284 = begin (V283 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V283} end), case V284 of {'Idris.Prelude.Types.Left', E214} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E214)); {'Idris.Prelude.Types.Right', E215} -> (fun (V286) -> begin (V313 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V281, case V286 of {'Idris.Core.Context.MkDefs', E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241} -> (fun (V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312) -> V287 end(E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V282))), case V313 of {'Idris.Prelude.Types.Left', E242} -> (fun (V314) -> {'Idris.Prelude.Types.Left', V314} end(E242)); {'Idris.Prelude.Types.Right', E243} -> (fun (V315) -> case V315 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V281}, V282)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V316) -> case V316 of {'Idris.Prelude.Types.Left', E244} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E244)); {'Idris.Prelude.Types.Right', E245} -> (fun (V318) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Missed', V318}} end(E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V319) -> fun (V320) -> begin (V321 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V319, V320))), case V321 of {'Idris.Prelude.Types.Left', E246} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E246)); {'Idris.Prelude.Types.Right', E247} -> (fun (V323) -> begin (V324 = V315), (('case--case block in process-10740'(V281, V4, V3, V2, V1, V0, V286, V315, V324, V319, V323, case V323 of {'Idris.Core.TT.MkTotality', E248, E249} -> (fun (V325, V326) -> V326 end(E248, E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V320)) end end(E247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V327) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V327)) end, V315)), [])), V282)) end end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E213)); {'Idris.Idris.Syntax.Total', E250} -> (fun (V328) -> fun (V329) -> begin (V331 = begin (V330 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V330} end), case V331 of {'Idris.Prelude.Types.Left', E251} -> (fun (V332) -> {'Idris.Prelude.Types.Left', V332} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V333) -> begin (V360 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V328, case V333 of {'Idris.Core.Context.MkDefs', E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274, E275, E276, E277, E278} -> (fun (V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350, V351, V352, V353, V354, V355, V356, V357, V358, V359) -> V334 end(E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274, E275, E276, E277, E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V329))), case V360 of {'Idris.Prelude.Types.Left', E279} -> (fun (V361) -> {'Idris.Prelude.Types.Left', V361} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V362) -> case V362 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V328}, V329)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V363) -> case V363 of {'Idris.Prelude.Types.Left', E281} -> (fun (V364) -> {'Idris.Prelude.Types.Left', V364} end(E281)); {'Idris.Prelude.Types.Right', E282} -> (fun (V365) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CheckedTotal', V365}} end(E282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V366) -> fun (V367) -> begin (V368 = ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V366, V367))), case V368 of {'Idris.Prelude.Types.Left', E283} -> (fun (V369) -> {'Idris.Prelude.Types.Left', V369} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V370) -> begin (V378 = begin (V371 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V366, V367))), case V371 of {'Idris.Prelude.Types.Left', E285} -> (fun (V372) -> {'Idris.Prelude.Types.Left', V372} end(E285)); {'Idris.Prelude.Types.Right', E286} -> (fun (V373) -> ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V374) -> fun (V375) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Totality'(V374, V375)) end end, fun (V376) -> fun (V377) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__Totality'(V376, V377)) end end}, V373, V367)) end(E286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V378 of {'Idris.Prelude.Types.Left', E287} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V380) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V366, V380}} end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V381) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V381)) end, V362)), [])), V329)) end end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E250)); {'Idris.Idris.Syntax.Doc', E289} -> (fun (V382) -> fun (V383) -> begin (V384 = ('Idris.Idris2.Idris.DocString':'un--getDocsFor'(V0, V2, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V382, V383))), case V384 of {'Idris.Prelude.Types.Left', E290} -> (fun (V385) -> {'Idris.Prelude.Types.Left', V385} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V386) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Printed', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V387) -> fun (V388) -> fun (V389) -> fun (V390) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V389, V390)) end end end end, fun (V391) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V391)) end, V386))))}} end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E289)); {'Idris.Idris.Syntax.Browse', E292} -> (fun (V392) -> fun (V393) -> begin (V394 = ('Idris.Idris2.Idris.DocString':'un--getContents'(V0, V2, V392, V393))), case V394 of {'Idris.Prelude.Types.Left', E293} -> (fun (V395) -> {'Idris.Prelude.Types.Left', V395} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V396) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Printed', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V397) -> fun (V398) -> fun (V399) -> fun (V400) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V399, V400)) end end end end, fun (V401) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V401)) end, V396))))}} end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E292)); {'Idris.Idris.Syntax.DebugInfo', E295} -> (fun (V402) -> fun (V403) -> begin (V405 = begin (V404 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V404} end), case V405 of {'Idris.Prelude.Types.Left', E296} -> (fun (V406) -> {'Idris.Prelude.Types.Left', V406} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V407) -> begin (V438 = begin (V434 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V402, case V407 of {'Idris.Core.Context.MkDefs', E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323} -> (fun (V408, V409, V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, V429, V430, V431, V432, V433) -> V408 end(E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V403))), case V434 of {'Idris.Prelude.Types.Left', E324} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E324)); {'Idris.Prelude.Types.Right', E325} -> (fun (V436) -> (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V437) -> ('un--showInfo'(V0, V437)) end, V436))(V403)) end(E325)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V438 of {'Idris.Prelude.Types.Left', E326} -> (fun (V439) -> {'Idris.Prelude.Types.Left', V439} end(E326)); {'Idris.Prelude.Types.Right', E327} -> (fun (V440) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end(E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E295)); {'Idris.Idris.Syntax.SetOpt', E328} -> (fun (V441) -> fun (V442) -> begin (V443 = (('un--setOpt'(V0, V4, V441))(V442))), case V443 of {'Idris.Prelude.Types.Left', E329} -> (fun (V444) -> {'Idris.Prelude.Types.Left', V444} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V445) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E328)); {'Idris.Idris.Syntax.GetOpts'} -> (fun () -> fun (V446) -> begin (V447 = ('un--getOptions'(V0, V4, V446))), case V447 of {'Idris.Prelude.Types.Left', E331} -> (fun (V448) -> {'Idris.Prelude.Types.Left', V448} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V449) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.OptionsSet', V449}} end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.SetLog', E333} -> (fun (V450) -> fun (V451) -> begin (V452 = ('Idris.Idris2.Core.Context':'un--addLogLevel'(V0, V450, V451))), case V452 of {'Idris.Prelude.Types.Left', E334} -> (fun (V453) -> {'Idris.Prelude.Types.Left', V453} end(E334)); {'Idris.Prelude.Types.Right', E335} -> (fun (V454) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.LogLevelSet', V450}} end(E335)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E333)); {'Idris.Idris.Syntax.SetConsoleWidth', E336} -> (fun (V455) -> fun (V456) -> begin (V457 = ('Idris.Idris2.Idris.REPLOpts':'un--setConsoleWidth'(V4, V455, V456))), case V457 of {'Idris.Prelude.Types.Left', E337} -> (fun (V458) -> {'Idris.Prelude.Types.Left', V458} end(E337)); {'Idris.Prelude.Types.Right', E338} -> (fun (V459) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ConsoleWidthSet', V455}} end(E338)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E336)); {'Idris.Idris.Syntax.SetColor', E339} -> (fun (V460) -> fun (V461) -> begin (V462 = ('Idris.Idris2.Idris.REPLOpts':'un--setColor'(V4, V460, V461))), case V462 of {'Idris.Prelude.Types.Left', E340} -> (fun (V463) -> {'Idris.Prelude.Types.Left', V463} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V464) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ColorSet', V460}} end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E339)); {'Idris.Idris.Syntax.Metavars'} -> (fun () -> fun (V465) -> begin (V467 = begin (V466 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V466} end), case V467 of {'Idris.Prelude.Types.Left', E342} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E342)); {'Idris.Prelude.Types.Right', E343} -> (fun (V469) -> begin (V496 = case V469 of {'Idris.Core.Context.MkDefs', E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369} -> (fun (V470, V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, V492, V493, V494, V495) -> V470 end(E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V497 = ('Idris.Idris2.Core.Context':'un--getUserHoles'(V0, V465))), case V497 of {'Idris.Prelude.Types.Left', E370} -> (fun (V498) -> {'Idris.Prelude.Types.Left', V498} end(E370)); {'Idris.Prelude.Types.Right', E371} -> (fun (V499) -> begin (V501 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V500) -> ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V500, V496)) end, V499, []))(V465))), case V501 of {'Idris.Prelude.Types.Left', E372} -> (fun (V502) -> {'Idris.Prelude.Types.Left', V502} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V503) -> begin (V516 = (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V504) -> fun (V505) -> fun (V506) -> fun (V507) -> fun (V508) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V506, V507, V508)) end end end end end, fun (V509) -> fun (V510) -> fun (V511) -> fun (V512) -> fun (V513) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V511, V512, V513)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V514) -> fun (V515) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V514, V515)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V503))), begin (V523 = ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V517) -> case V517 of {'Idris.Builtin.MkPair', E374, E375} -> (fun (V518, V519) -> case V519 of {'Idris.Builtin.MkPair', E376, E377} -> (fun (V520, V521) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad__Maybe'('erased', 'erased', ('Idris.Idris2.Idris.IDEMode.Holes':'un--isHole'(V521)), fun (V522) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative__Maybe'('erased', {'Idris.Builtin.MkPair', V518, {'Idris.Builtin.MkPair', V521, V522}})) end)) end(E376, E377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E374, E375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V516))), begin (V525 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V524) -> ('case--process-11099'(V4, V3, V2, V1, V0, V469, V496, V499, V503, V516, V523, V524, V524)) end, V523, []))(V465))), case V525 of {'Idris.Prelude.Types.Left', E378} -> (fun (V526) -> {'Idris.Prelude.Types.Left', V526} end(E378)); {'Idris.Prelude.Types.Right', E379} -> (fun (V527) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.FoundHoles', V527}} end(E379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Editing', E380} -> (fun (V528) -> fun (V529) -> begin (V530 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V529))), case V530 of {'Idris.Prelude.Types.Left', E381} -> (fun (V531) -> {'Idris.Prelude.Types.Left', V531} end(E381)); {'Idris.Prelude.Types.Right', E382} -> (fun (V532) -> begin (V536 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V532 of {'Idris.Core.Options.MkPPOpts', E383, E384, E385} -> (fun (V533, V534, V535) -> {'Idris.Core.Options.MkPPOpts', V533, 1, V535} end(E383, E384, E385)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V529))), case V536 of {'Idris.Prelude.Types.Left', E386} -> (fun (V537) -> {'Idris.Prelude.Types.Left', V537} end(E386)); {'Idris.Prelude.Types.Right', E387} -> (fun (V538) -> begin (V539 = (('un--processEdit'(V0, V1, V2, V3, V4, V528))(V529))), case V539 of {'Idris.Prelude.Types.Left', E388} -> (fun (V540) -> {'Idris.Prelude.Types.Left', V540} end(E388)); {'Idris.Prelude.Types.Right', E389} -> (fun (V541) -> begin (V542 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, V532, V529))), case V542 of {'Idris.Prelude.Types.Left', E390} -> (fun (V543) -> {'Idris.Prelude.Types.Left', V543} end(E390)); {'Idris.Prelude.Types.Right', E391} -> (fun (V544) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Edited', V541}} end(E391)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E389)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E380)); {'Idris.Idris.Syntax.CGDirective', E392} -> (fun (V545) -> fun (V546) -> begin (V564 = begin (V547 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V546))), case V547 of {'Idris.Prelude.Types.Left', E393} -> (fun (V548) -> {'Idris.Prelude.Types.Left', V548} end(E393)); {'Idris.Prelude.Types.Right', E394} -> (fun (V549) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V549 of {'Idris.Core.Options.MkSessionOpts', E395, E396, E397, E398, E399, E400, E401, E402, E403, E404, E405, E406, E407, E408} -> (fun (V550, V551, V552, V553, V554, V555, V556, V557, V558, V559, V560, V561, V562, V563) -> {'Idris.Core.Options.MkSessionOpts', V550, V551, V552, V553, [V545 | V554], V555, V556, V557, V558, V559, V560, V561, V562, V563} end(E395, E396, E397, E398, E399, E400, E401, E402, E403, E404, E405, E406, E407, E408)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V546)) end(E394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V564 of {'Idris.Prelude.Types.Left', E409} -> (fun (V565) -> {'Idris.Prelude.Types.Left', V565} end(E409)); {'Idris.Prelude.Types.Right', E410} -> (fun (V566) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end(E410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E392)); {'Idris.Idris.Syntax.Quit'} -> (fun () -> fun (V567) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Exited'}} end end()); {'Idris.Idris.Syntax.NOP'} -> (fun () -> fun (V568) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end end()); {'Idris.Idris.Syntax.ShowVersion'} -> (fun () -> fun (V569) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.VersionIs', ('Idris.Idris2.Idris.Version':'un--version'())}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--printClause'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V5, V6, V7) -> fun (V8) -> begin (V9 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V6, V8))), case V9 of {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V7, V8))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Prelude.Types':'un--pack'(('Idris.Idris2.Data.List':'un--replicate'('erased', V3, $ )))), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V11)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" = "/utf8>>, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V14))))))))))} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E7, E8, E9, E10, E11} -> (fun (V15, V16, V17, V18, V19) -> fun (V20) -> begin (V21 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V16, V20))), case V21 of {'Idris.Prelude.Types.Left', E12} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V17, V20))), case V24 of {'Idris.Prelude.Types.Left', E14} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V26) -> begin (V28 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V27) -> ('un--printClause'(V0, V1, V2, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num__Nat'(V3, (1 + (1 + 0)))), V27)) end, V19, []))(V20))), case V28 of {'Idris.Prelude.Types.Left', E16} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V30) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Prelude.Types':'un--pack'(('Idris.Idris2.Data.List':'un--replicate'('erased', V3, $ )))), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V23)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" with ("/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V26)), <<")\x{a}"/utf8>>)))))))))), ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, V30))))} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7, E8, E9, E10, E11)); {'Idris.TTImp.TTImp.ImpossibleClause', E18, E19} -> (fun (V31, V32) -> fun (V33) -> begin (V34 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V32, V33))), case V34 of {'Idris.Prelude.Types.Left', E20} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V36) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Prelude.Types':'un--pack'(('Idris.Idris2.Data.List':'un--replicate'('erased', V3, $ )))), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V36)), <<" impossible"/utf8>>))))))} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--parseRepl'(V0) -> ('case--parseRepl-11543'(V0, ('nested--33768-11456--in--un--fnameCmd'(V0, [{'Idris.Builtin.MkPair', <<":load "/utf8>>, fun (V1) -> {'Idris.Idris.Syntax.Load', V1} end} | [{'Idris.Builtin.MkPair', <<":l "/utf8>>, fun (V2) -> {'Idris.Idris.Syntax.Load', V2} end} | [{'Idris.Builtin.MkPair', <<":cd "/utf8>>, fun (V3) -> {'Idris.Idris.Syntax.CD', V3} end} | []]]], V0)))).
'un--parseEmptyCmd'() -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, ('Idris.Idris2.Text.Parser.Core':'dn--un--map_Functor__((Grammar $tok) $c)'('erased', 'erased', 'erased', 1, fun (V0) -> fun (V1) -> V1 end end, ('Idris.Idris2.Parser.Rule.Source':'un--eoi'()))), fun (V2) -> ('Idris.Idris2.Text.Parser.Core':'dn--un--map_Functor__((Grammar $tok) $c)'('erased', 'erased', 'erased', 1, V2, {'Idris.Text.Parser.Core.Empty', {'Idris.Prelude.Types.Nothing'}})) end}.
'un--parseCmd'() -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, ('Idris.Idris2.Idris.Parser':'un--command'()), fun (V0) -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, ('Idris.Idris2.Parser.Rule.Source':'un--eoi'()), fun (V1) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Prelude.Types.Just', V0}} end} end}.
'un--nextProofSearch'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> (('case--nextProofSearch-4775'(V2, V1, V0, V7, case V7 of {'Idris.Idris.REPLOpts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> V17 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--nextGenDef'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> (('case--nextGenDef-4967'(V3, V2, V1, V0, V8, case V8 of {'Idris.Idris.REPLOpts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> V19 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--lookupDefTyName'(V0, V1, V2) -> ('Idris.Idris2.Core.Context':'un--lookupNameBy'('erased', fun (V3) -> {'Idris.Builtin.MkPair', case V3 of {'Idris.Core.Context.MkGlobalDef', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V21 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V3 of {'Idris.Core.Context.MkGlobalDef', E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45) -> V27 end(E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end, V0, V1, V2)).
'un--loadMainFile'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Idris.REPLCommon':'un--resetContext'(V0, V1, V2, V3, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V38 = begin (V37 = (('Idris.Idris2.Erlang.System.File':'un--readFile'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> V16 end end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), begin (V24 = (V21(V22))), (V23(V24)) end end end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), ((V28(V30))(V29)) end end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V32(V33))), (V34(V33)) end end end end}, fun (V35) -> fun (V36) -> V36 end end}, V5))(V6))), {'Idris.Prelude.Types.Right', V37} end), case V38 of {'Idris.Prelude.Types.Left', E2} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V40) -> case V40 of {'Idris.Prelude.Types.Right', E4} -> (fun (V41) -> begin (V43 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V0, fun () -> <<"+ Build deps"/utf8>> end, fun (V42) -> ('Idris.Idris2.Idris.ModTree':'un--buildDeps'(V0, V2, V3, V1, V4, V5, V42)) end, V6))), case V43 of {'Idris.Prelude.Types.Left', E5} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V45) -> begin (V46 = (('Idris.Idris2.Idris.REPLCommon':'un--updateErrorLine'(V4, V45))(V6))), case V46 of {'Idris.Prelude.Types.Left', E7} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V48) -> begin (V49 = ('Idris.Idris2.Idris.REPLOpts':'un--setSource'(V4, V41, V6))), case V49 of {'Idris.Prelude.Types.Left', E9} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V51) -> begin (V52 = ('Idris.Idris2.Idris.REPLOpts':'un--resetProofState'(V4, V6))), case V52 of {'Idris.Prelude.Types.Left', E11} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V54) -> case V45 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.FileLoaded', V5}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ErrorsBuildingFile', V5, V45}} end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); {'Idris.Prelude.Types.Left', E13} -> (fun (V55) -> begin (V56 = ('Idris.Idris2.Idris.REPLOpts':'un--setSource'(V4, <<""/utf8>>, V6))), case V56 of {'Idris.Prelude.Types.Left', E14} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V58) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.ErrorLoadingFile', V5, V55}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--interpret'(V0, V1, V2, V3, V4, V5) -> ('case--interpret-11576'(V5, V4, V3, V2, V1, V0, ('un--parseRepl'(V5)))).
'un--handleResult'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.REPL.Exited'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Bye for now!"/utf8>>)), V6)) end end()); _ -> fun (V7) -> begin (V8 = (('un--displayResult'(V0, V1, V2, V3, V4, V5))(V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> ('un--repl'(V0, V1, V2, V3, V4, V7)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--handleMissing\x{27}'(V0) -> case V0 of {'Idris.Idris.REPL.CasesMissing', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V1)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<":\x{a}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, V2)))))) end(E0, E1)); {'Idris.Idris.REPL.CallsNonCovering', E2, E3} -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V3)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<": Calls non covering function"/utf8>>, case V4 of [E4 | E5] -> (fun (V5, V6) -> case V6 of [] -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V5)))); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V7)) end, V4)))))) end end(E4, E5)); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V8)) end, V4)))))) end)))) end(E2, E3)); {'Idris.Idris.REPL.AllCasesCovered', E6} -> (fun (V9) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V9)), <<": All cases covered"/utf8>>)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--handleMissing'(V0) -> case V0 of {'Idris.Idris.REPL.CasesMissing', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V1)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V5, V6)) end end end end, fun (V7) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V7)))) end, V2)))))) end(E0, E1)); {'Idris.Idris.REPL.CallsNonCovering', E2, E3} -> (fun (V8, V9) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V8)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Calls non covering"/utf8>>)), case V9 of [E4 | E5] -> (fun (V10, V11) -> case V11 of [] -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"function"/utf8>>)), ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V10)))))); _ -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"functions:"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'('erased', fun (V12) -> fun (V13) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'('erased')), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'('erased')))), V12, V13)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V16, V17)) end end end end, fun (V18) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V18)))) end, V9)))))) end end(E4, E5)); _ -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString__(Doc $ann)'('erased', <<"functions:"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'('erased', fun (V19) -> fun (V20) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'('erased')), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'('erased')))), V19, V20)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V23, V24)) end end end end, fun (V25) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V25)))) end, V9)))))) end)))) end(E2, E3)); {'Idris.Idris.REPL.AllCasesCovered', E6} -> (fun (V26) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V26)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"All cases covered"/utf8>>)))) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getOptions'(V0, V1, V2) -> begin (V3 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', [{'Idris.Idris.Syntax.ShowImplicits', case V5 of {'Idris.Core.Options.MkPPOpts', E4, E5, E6} -> (fun (V10, V11, V12) -> V10 end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.ShowNamespace', case V5 of {'Idris.Core.Options.MkPPOpts', E7, E8, E9} -> (fun (V13, V14, V15) -> V15 end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.ShowTypes', case V9 of {'Idris.Idris.REPLOpts.MkREPLOpts', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V16 end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.EvalMode', case V9 of {'Idris.Idris.REPLOpts.MkREPLOpts', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V31 end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.Editor', case V9 of {'Idris.Idris.REPLOpts.MkREPLOpts', E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57) -> V49 end(E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | []]]]]]} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--findCG'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> (('case--findCG-4089'(V1, V0, V6, case case case V6 of {'Idris.Core.Context.MkDefs', E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V11 end(E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V35 end(E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkSessionOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55) -> V45 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--execExp'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, {'Idris.Idris.Desugar.AnyExpr'}, [], {'Idris.Idris.Syntax.PApp', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), {'Idris.Idris.Syntax.PRef', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), {'Idris.Core.Name.UN', <<"unsafePerformIO"/utf8>>}}, V5}, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = (('Idris.Idris2.Core.Context':'un--resolveName'(V0, {'Idris.Core.Name.UN', <<"[input]"/utf8>>}))(V6))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V13 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V12, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V9, {'Idris.Prelude.Types.Nothing'}))(V6))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> case V15 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V16, V17) -> begin (V22 = ('Idris.Idris2.Core.LinearCheck':'un--linearCheck'([], V0, V1, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Algebra.Semiring':'un--linear'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V18) -> fun (V19) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V18, V19)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V20) -> fun (V21) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V20, V21)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())})), 0, {'Idris.Core.Env.Nil'}, V16, V6))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> begin (V28 = begin (V25 = ('un--findCG'(V4, V0, V6))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> ('Idris.Idris2.Compiler.Common':'un--cgExecuteExpr'(V0, V27, V24, V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Executed', V5}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--execDecls'(V0, V1, V2, V3, V4, V5) -> begin (V8 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V6) -> fun (V7) -> ('nested--31495-9327--in--un--execDecl'(V4, V3, V2, V1, V0, V6, V7)) end end, V4))(V5))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.DefDeclared'}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--dropLamsTm'(V0, V1, V2, V3) -> case V1 of 0 -> {'Idris.Builtin.DPair.MkDPair', V0, {'Idris.Builtin.MkPair', V2, V3}}; _ -> begin (V4 = (V1 - 1)), case V3 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> ('un--dropLamsTm'([V6 | V0], V4, {'Idris.Core.Env.::', V7, V2}, V8)) end(E0, E1, E2, E3)); _ -> {'Idris.Builtin.DPair.MkDPair', V0, {'Idris.Builtin.MkPair', V2, V3}} end end end.
'un--dropLams'(V0, V1) -> case V0 of 0 -> V1; _ -> begin (V2 = (V0 - 1)), case V1 of {'Idris.TTImp.TTImp.ILam', E0, E1, E2, E3, E4, E5} -> (fun (V3, V4, V5, V6, V7, V8) -> ('un--dropLams'(V2, V8)) end(E0, E1, E2, E3, E4, E5)); _ -> V1 end end end.
'un--displayType'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V8) -> begin (V33 = begin (V30 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, case V7 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V11 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V8))), case V30 of {'Idris.Prelude.Types.Left', E25} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V32) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Idris.Core.Env.Nil'}, V32, V8)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V33 of {'Idris.Prelude.Types.Left', E27} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V35) -> begin (V57 = ('Idris.Idris2.Core.Context':'un--aliasName'(V0, case V7 of {'Idris.Core.Context.MkGlobalDef', E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49} -> (fun (V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56) -> V37 end(E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V8))), case V57 of {'Idris.Prelude.Types.Left', E50} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V59) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V59)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')), ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V35))))))} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, fun () -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Idris.IDEMode.Holes':'un--prettyHole'([], V0, V1, V2, {'Idris.Core.Env.Nil'}, V4, V60, case V7 of {'Idris.Core.Context.MkGlobalDef', E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72} -> (fun (V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82) -> V64 end(E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V61)) end end end, ('Idris.Idris2.Idris.IDEMode.Holes':'un--isHole'(V7)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--displayTerm'(V0, V1, V2, V3, V4) -> begin (V8 = begin (V5 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Idris.Core.Env.Nil'}, V7, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V10))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--displayResult'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.REPL.REPLError', E0} -> (fun (V6) -> fun (V7) -> ('Idris.Idris2.Idris.REPLCommon':'un--printError'(V4, V6, V7)) end end(E0)); {'Idris.Idris.REPL.Evaluated', E1, E2} -> (fun (V8, V9) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V10) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V8)), V10)) end end()); {'Idris.Prelude.Types.Just', E3} -> (fun (V11) -> fun (V12) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V8)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')), ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V11)))))))), V12)) end end(E3)); _ -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end end(E1, E2)); {'Idris.Idris.REPL.Printed', E4} -> (fun (V14) -> fun (V15) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, V14, V15)) end end(E4)); {'Idris.Idris.REPL.TermChecked', E5, E6} -> (fun (V16, V17) -> fun (V18) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V16)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')), ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V17)))))))), V18)) end end(E5, E6)); {'Idris.Idris.REPL.FileLoaded', E7} -> (fun (V19) -> fun (V20) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Loaded file"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V19)))), V20)) end end(E7)); {'Idris.Idris.REPL.ModuleLoaded', E8} -> (fun (V21) -> fun (V22) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Imported module"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V21)))), V22)) end end(E8)); {'Idris.Idris.REPL.ErrorLoadingModule', E9, E10} -> (fun (V23, V24) -> fun (V25) -> begin (V26 = (('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V24))(V25))), case V26 of {'Idris.Prelude.Types.Left', E11} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V28) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Error loading module"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V23)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), V28)))), V25)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10)); {'Idris.Idris.REPL.ErrorLoadingFile', E13, E14} -> (fun (V29, V30) -> fun (V31) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Error loading file"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V29)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Erlang.System.File':'dn--un--show_Show__FileError'(V30)))))))), V31)) end end(E13, E14)); {'Idris.Idris.REPL.ErrorsBuildingFile', E15, E16} -> (fun (V32, V33) -> fun (V34) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Error(s) building file"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V32)))), V34)) end end(E15, E16)); {'Idris.Idris.REPL.NoFileLoaded'} -> (fun () -> fun (V35) -> ('Idris.Idris2.Idris.REPLCommon':'un--printError'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"No file can be reloaded"/utf8>>)), V35)) end end()); {'Idris.Idris.REPL.CurrentDirectory', E17} -> (fun (V36) -> fun (V37) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Current working directory is"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--squotes'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V36)))))), V37)) end end(E17)); {'Idris.Idris.REPL.CompilationFailed'} -> (fun () -> fun (V38) -> ('Idris.Idris2.Idris.REPLCommon':'un--printError'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Compilation failed"/utf8>>)), V38)) end end()); {'Idris.Idris.REPL.Compiled', E18} -> (fun (V39) -> fun (V40) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<"File"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V39)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<"written"/utf8>>)))))), V40)) end end(E18)); {'Idris.Idris.REPL.CompiledLibrary', E19} -> (fun (V41) -> case V41 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V42, V43) -> fun (V44) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<"Compiled"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V42)))), V44)) end end(E20, E21)); _ -> fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end end(E19)); {'Idris.Idris.REPL.ProofFound', E22} -> (fun (V46) -> fun (V47) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V46)), V47)) end end(E22)); {'Idris.Idris.REPL.Missed', E23} -> (fun (V48) -> fun (V49) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V52, V53)) end end end end, fun (V54) -> ('un--handleMissing'(V54)) end, V48)))), V49)) end end(E23)); {'Idris.Idris.REPL.CheckedTotal', E24} -> (fun (V55) -> fun (V56) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V57) -> case V57 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V58, V59) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', V58)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<"is"/utf8>>)), ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty__Totality'('erased', V59)))))) end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V55)))), V56)) end end(E24)); {'Idris.Idris.REPL.FoundHoles', E27} -> (fun (V60) -> case V60 of [] -> fun (V61) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"No holes"/utf8>>)), V61)) end; [E31 | E32] -> (fun (V62, V63) -> case V63 of [] -> fun (V64) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"1 hole"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', case V62 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E36, E37, E38} -> (fun (V65, V66, V67) -> V65 end(E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), V64)) end; _ -> begin (V78 = ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'('erased', fun (V68) -> fun (V69) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<", "/utf8>>)), V68, V69)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V72, V73)) end end end end, fun (V74) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', case V74 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E33, E34, E35} -> (fun (V75, V76, V77) -> V75 end(E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, V60))))), fun (V79) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__Nat'('erased', ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V60)))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<"holes"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), V78)))), V79)) end end end end(E31, E32)); _ -> begin (V90 = ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'('erased', fun (V80) -> fun (V81) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<", "/utf8>>)), V80, V81)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V84, V85)) end end end end, fun (V86) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty__Name'('erased', case V86 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E28, E29, E30} -> (fun (V87, V88, V89) -> V87 end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, V60))))), fun (V91) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__Nat'('erased', ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V60)))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', <<"holes"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), V90)))), V91)) end end end end(E27)); {'Idris.Idris.REPL.LogLevelSet', E39} -> (fun (V92) -> fun (V93) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Set loglevel to"/utf8>>)), ('Idris.Idris2.Core.Options.Log':'dn--un--pretty_Pretty__LogLevel'('erased', V92)))), V93)) end end(E39)); {'Idris.Idris.REPL.ConsoleWidthSet', E40} -> (fun (V94) -> case V94 of {'Idris.Prelude.Types.Just', E41} -> (fun (V95) -> fun (V96) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Set consolewidth to"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__Nat'('erased', V95)))), V96)) end end(E41)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V97) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"Set consolewidth to auto"/utf8>>)), V97)) end end()); _ -> fun (V98) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end end(E40)); {'Idris.Idris.REPL.ColorSet', E42} -> (fun (V99) -> fun (V100) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', case V99 of 0 -> <<"Set color on"/utf8>>; 1 -> <<"Set color off"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V100)) end end(E42)); {'Idris.Idris.REPL.VersionIs', E43} -> (fun (V101) -> fun (V102) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Idris.Version':'un--showVersion'(0, V101)))), V102)) end end(E43)); {'Idris.Idris.REPL.RequestedHelp'} -> (fun () -> fun (V103) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('un--displayHelp'()))), V103)) end end()); {'Idris.Idris.REPL.Edited', E44} -> (fun (V104) -> case V104 of {'Idris.Idris.REPL.DisplayEdit', E45} -> (fun (V105) -> case V105 of {'Idris.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> fun (V106) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> fun (V107) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, V105, V107)) end end end(E45)); {'Idris.Idris.REPL.EditError', E46} -> (fun (V108) -> fun (V109) -> ('Idris.Idris2.Idris.REPLCommon':'un--printError'(V4, V108, V109)) end end(E46)); {'Idris.Idris.REPL.MadeLemma', E47, E48, E49, E50} -> (fun (V110, V111, V112, V113) -> fun (V114) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Parser.Unlit':'un--relit'(V110, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V111)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V112)), <<"\x{a}"/utf8>>)))))))), V113)))), V114)) end end(E47, E48, E49, E50)); {'Idris.Idris.REPL.MadeWith', E51, E52} -> (fun (V115, V116) -> fun (V117) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V118) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V115, V118)) end, V116)))))), V117)) end end(E51, E52)); {'Idris.Idris.REPL.MadeCase', E53, E54} -> (fun (V119, V120) -> fun (V121) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V122) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V119, V122)) end, V120)))))), V121)) end end(E53, E54)); _ -> fun (V123) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end end(E44)); {'Idris.Idris.REPL.OptionsSet', E55} -> (fun (V124) -> fun (V125) -> ('Idris.Idris2.Idris.REPLCommon':'un--printResult'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V128, V129)) end end end end, fun (V130) -> ('Idris.Idris2.Idris.Syntax':'dn--un--pretty_Pretty__REPLOpt'('erased', V130)) end, V124)))), V125)) end end(E55)); _ -> fun (V131) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end.
'un--displayPats'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> ('case--displayPats-3759'(V4, V6, V7, V2, V1, V0, case V7 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> V25 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--displayPatTerm'(V0, V1, V2, V3, V4) -> begin (V8 = begin (V5 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('Idris.Idris2.Idris.Resugar':'un--resugarNoPatvars'([], V0, V1, {'Idris.Core.Env.Nil'}, V7, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show__PTerm'(V10))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--displayHelp'() -> ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V0) -> ('nested--33999-12439--in--un--cmdInfo'(V0)) end, ('Idris.Idris2.Idris.Parser':'un--help'()))))).
'un--displayErrors'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.REPL.ErrorLoadingFile', E0, E1} -> (fun (V6, V7) -> fun (V8) -> ('Idris.Idris2.Idris.REPLCommon':'un--printError'(V4, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"File error in"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup__(Doc $ann)'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', V6)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'('erased')))), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Erlang.System.File':'dn--un--show_Show__FileError'(V7)))))))), V8)) end end(E0, E1)); _ -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end.
'un--displayClause'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V8, V9) -> fun (V10) -> begin (V14 = begin (V11 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, V4, V2, V6, V8, V10))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'(V4, V0, V1, V6, V13, V10)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V14 of {'Idris.Prelude.Types.Left', E8} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V16) -> begin (V20 = begin (V17 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, V4, V2, V6, V9, V10))), case V17 of {'Idris.Prelude.Types.Left', E10} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V19) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'(V4, V0, V1, V6, V19, V10)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V20 of {'Idris.Prelude.Types.Left', E12} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V22) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V16)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Symbols':'un--equals'('erased')), ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V22))))))} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--compileLib'(V0, V1, V2, V3, V4) -> begin (V8 = begin (V5 = ('un--findCG'(V1, V0, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('Idris.Idris2.Compiler.Common':'un--cgCompileLibrary'(V0, V7, V2, V3, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CompilationFailed'}} end end, fun () -> fun (V12) -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CompiledLibrary', V12}} end end end, V10))(V4)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileExp'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = (('Idris.Idris2.Core.Context':'un--resolveName'(V0, {'Idris.Core.Name.UN', <<"[input]"/utf8>>}))(V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, {'Idris.Idris.Desugar.AnyExpr'}, [], {'Idris.Idris.Syntax.PApp', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), {'Idris.Idris.Syntax.PRef', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), {'Idris.Core.Name.UN', <<"unsafePerformIO"/utf8>>}}, V5}, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V10, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V13, {'Idris.Prelude.Types.Nothing'}))(V7))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V17, V18) -> begin (V23 = ('Idris.Idris2.Core.LinearCheck':'un--linearCheck'([], V0, V1, ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), ('Idris.Idris2.Algebra.Semiring':'un--linear'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V19) -> fun (V20) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V19, V20)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V21) -> fun (V22) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V21, V22)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())})), 0, {'Idris.Core.Env.Nil'}, V17, V7))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> begin (V29 = begin (V26 = ('un--findCG'(V4, V0, V7))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> ('Idris.Idris2.Compiler.Common':'un--cgCompileExpr'(V0, V28, V25, V6, V7)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V29 of {'Idris.Prelude.Types.Left', E12} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V31) -> (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.CompilationFailed'}} end end, fun () -> fun (V33) -> fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Compiled', V33}} end end end, V31))(V7)) end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--caseSplit'(V0, V1, V2) -> case V1 of 0 -> case V2 of [E2 | E3] -> (fun (V3, V4) -> [('un--rtrim'(V0)) | V4] end(E2, E3)); _ -> case V2 of [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V5 = (V1 - 1)), case V2 of [E0 | E1] -> (fun (V6, V7) -> [V6 | ('un--caseSplit'(V0, V5, V7))] end(E0, E1)); _ -> case V2 of [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--anyAt'(V0, V1, V2, V3) -> (V1(V2)).
'un--addMadeLemma'(V0, V1, V2, V3, V4, V5) -> ('nested--25970-4605--in--un--addApp'(V5, V4, V3, V2, V1, V0, V0, V4, [], ('un--proofSearch'(V1, V3, V4, V5)))).
'un--addMadeCase'(V0, V1, V2, V3) -> ('nested--26101-4721--in--un--addW'(V3, V2, V1, V0, V2, [], V3)).
'un--addClause'(V0, V1, V2) -> case V1 of 0 -> case V2 of [] -> [('un--rtrim'(V0)) | []]; [E2 | E3] -> (fun (V3, V4) -> ('case--addClause-4466'(V3, V4, V0, (('Idris.Idris2.Prelude.Interfaces':'un--all'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V7, V8, V9)) end end end end end, fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V12, V13, V14)) end end end end end}, fun (V15) -> ('Idris.Idris2.Prelude.Types':'un--isSpace'(V15)) end))(('Idris.Idris2.Prelude.Types':'un--unpack'(V3)))))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> begin (V16 = (V1 - 1)), case V2 of [E0 | E1] -> (fun (V17, V18) -> [V17 | ('un--addClause'(V0, V16, V18))] end(E0, E1)); [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
