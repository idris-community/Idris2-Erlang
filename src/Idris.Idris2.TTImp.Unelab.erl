-module('Idris.Idris2.TTImp.Unelab').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--unelabBinder-6056'/13,
  'case--case block in unelabBinder-5989'/17,
  'case--unelabBinder-5948'/14,
  'case--unelabBinder-5889'/14,
  'case--case block in case block in unelabBinder-5788'/18,
  'case--case block in unelabBinder-5705'/18,
  'case--unelabBinder-5660'/14,
  'case--case block in unelabBinder-5573'/17,
  'case--unelabBinder-5532'/14,
  'case--unelabBinder-5465'/14,
  'case--unelabPi-5429'/6,
  'case--unelabTy\x{27}-5308'/8,
  'case--unelabTy\x{27}-5257'/9,
  'case--unelabTy\x{27}-5206'/8,
  'case--case block in case block in case block in unelabTy\x{27}-5081'/16,
  'case--case block in case block in unelabTy\x{27}-5050'/14,
  'case--case block in unelabTy\x{27}-5021'/12,
  'case--unelabTy\x{27}-4988'/9,
  'case--case block in case block in unelabTy\x{27}-4832'/15,
  'case--case block in unelabTy\x{27}-4789'/11,
  'case--unelabTy\x{27}-4760'/8,
  'case--case block in unelabTy\x{27}-4671'/11,
  'case--unelabTy\x{27}-4648'/9,
  'case--unelabTy\x{27},uniqueLocal-4590'/11,
  'case--case block in unelabTy\x{27}-4501'/11,
  'case--unelabTy\x{27}-4446'/11,
  'case--case block in unelabTy\x{27}-4375'/9,
  'case--case block in unelabTy\x{27}-4308'/10,
  'case--unelabTy\x{27}-4272'/9,
  'case--case block in unelabSugar-4169'/7,
  'case--unelabSugar-4151'/6,
  'case--case block in case block in case block in unelabCase-3992'/14,
  'case--case block in case block in unelabCase-3956'/13,
  'case--case block in unelabCase-3932'/8,
  'case--unelabCase-3917'/6,
  'case--unelabCase,getNth-3783'/8,
  'nested--7700-3562--in--un--usedBinder'/7,
  'nested--7871-4563--in--un--uniqueLocal'/10,
  'nested--10755-6157--in--un--toName'/8,
  'nested--10755-6159--in--un--showScope'/8,
  'nested--10755-6158--in--un--showNScope'/8,
  'nested--7863-3726--in--un--nthArg'/8,
  'nested--7871-4562--in--un--next'/9,
  'nested--7863-3727--in--un--mkClause'/7,
  'nested--7863-3728--in--un--mkCase'/8,
  'nested--7877-5630--in--un--isNoSugar'/14,
  'nested--7877-5631--in--un--isDefImp'/15,
  'nested--7863-3724--in--un--idxOrDefault'/8,
  'nested--7863-3725--in--un--getNth'/7,
  'nested--7865-4131--in--un--getFnArgs'/7,
  'nested--7863-3723--in--un--findArgPos'/6,
  'un--used'/3,
  'un--unelabUniqueBinders'/5,
  'un--unelabTy\x{27}'/5,
  'un--unelabTy'/6,
  'un--unelabSugar'/4,
  'un--unelabPi'/5,
  'un--unelabNoSugar'/5,
  'un--unelabNoPatvars'/5,
  'un--unelabCase'/5,
  'un--unelabBinder'/10,
  'un--unelab'/4
]).
'case--unelabBinder-6056'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V9))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-5989'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V17, V18) -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, V3, V5, V17, V13, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PLet', V4, V3, V1, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-5948'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = ('un--unelabTy'(V0, V12, V11, V9, V2, V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, V3, V5, V20, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PLet', V4, V3, V1, V2}, V6}))}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-5889'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V7, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PVTy', V4, V3, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabBinder-5788'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> {'Idris.Prelude.Types.Just', {'Idris.Core.Name.UN', <<"_"/utf8>>}}; 1 -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-5705'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> {'Idris.Prelude.Types.Just', V5}; 1 -> ('case--case block in case block in unelabBinder-5788'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, ('Idris.Idris2.Prelude.Basics':'un--||'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq__ZeroOneOmega'(V4, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()))), fun () -> ('nested--7877-5631--in--un--isDefImp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V3)) end)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-5660'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('un--unelabPi'(V0, V12, V11, V9, V3))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V21 = begin (V20 = {'Idris.Builtin.MkPair', V14, V15}), ('case--case block in unelabBinder-5705'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V15, V14, V20, V19, ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', 0, V8)), fun () -> ('nested--7877-5630--in--un--isNoSugar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V11)) end)))) end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPi', V10, V4, V19, V21, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V10))}} end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-5573'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V17, V18) -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, V3, V5, V17, V13, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Let', V4, V3, V1, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-5532'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = ('un--unelabTy'(V0, V12, V11, V9, V2, V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, V3, V5, V20, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Let', V4, V3, V1, V2}, V6}))}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-5465'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('un--unelabPi'(V0, V12, V11, V9, V2))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILam', V10, V3, V19, {'Idris.Prelude.Types.Just', V5}, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Pi', V4, V3, V2, V1}, V6}))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabPi-5429'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.DefImplicit', V6}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5308'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IForce', V3, V8}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5257'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> begin (V13 = begin (V12 = ('erlang':'get'(V7))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelay', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5206'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelayed', V3, V2, V8}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in unelabTy\x{27}-5081'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E0} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, V3, V14, V11}, V12}} end end(E0)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end.
'case--case block in case block in unelabTy\x{27}-5050'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V9 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, V3, V15, V11}, V12}} end end(E2)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end end(E0, E1)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end.
'case--case block in unelabTy\x{27}-5021'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V12, V13) -> case V9 of {'Idris.TTImp.TTImp.IVar', E2, E3} -> (fun (V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E4} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, V3, V15, V12}, V13}} end end(E4)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V12, V13}} end end end(E2, E3)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V12, V13}} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-4988'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> begin (V12 = (('un--unelabTy\x{27}'(V0, V7, V6, V5, V1))(V11))), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V15, V16) -> case V9 of {'Idris.TTImp.TTImp.IVar', E6, E7} -> (fun (V17, V18) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, V3, V18, V15}, V16}} end(E8)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V15, V16}} end end(E6, E7)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V15, V16}} end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabTy\x{27}-4832'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V13 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V15, V16, V17, V18) -> case V17 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V23) -> begin (V24 = (((V18(V14))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V23))), case V24 of {'Idris.Prelude.Types.Left', E10} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V14, V4, V26))}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> fun (V27) -> begin (V28 = (((V18(V14))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V27))), case V28 of {'Idris.Prelude.Types.Left', E8} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.INamedApp', V3, V7, V16, V10}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V14, V4, V30))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5, E6, E7)); _ -> fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end end(E0, E1, E2, E3)); _ -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end.
'case--case block in unelabTy\x{27}-4789'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V6, V8))(V13))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> case V16 of {'Idris.Core.Value.NBind', E6, E7, E8, E9} -> (fun (V21, V22, V23, V24) -> case V23 of {'Idris.Core.TT.Pi', E10, E11, E12, E13} -> (fun (V25, V26, V27, V28) -> case V27 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V29 = (((V24(V20))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V13))), case V29 of {'Idris.Prelude.Types.Left', E16} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V20, V4, V31))}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V32 = (((V24(V20))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V13))), case V32 of {'Idris.Prelude.Types.Left', E14} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.INamedApp', V3, V7, V22, V11}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V20, V4, V34))}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E6, E7, E8, E9)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-4760'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V11 = ('un--unelabTy'(V0, V6, V5, V4, V1, V10))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V14, V15) -> begin (V16 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V6, V9))(V10))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> case V18 of {'Idris.Core.Value.NBind', E10, E11, E12, E13} -> (fun (V23, V24, V25, V26) -> case V25 of {'Idris.Core.TT.Pi', E14, E15, E16, E17} -> (fun (V27, V28, V29, V30) -> case V29 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V31 = (((V26(V22))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V10))), case V31 of {'Idris.Prelude.Types.Left', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V22, V4, V33))}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V34 = (((V26(V22))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V10))), case V34 of {'Idris.Prelude.Types.Left', E18} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.INamedApp', V3, V8, V24, V14}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V22, V4, V36))}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14, E15, E16, E17)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E10, E11, E12, E13)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-4671'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V11) -> case V11 of 0 -> begin (V12 = ('nested--7871-4563--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V0, V1))), fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V13))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V12, V3, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V2)), V8, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V16))))(V13)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V17))), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V8, V20))(V17)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2)); _ -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V21))), case V22 of {'Idris.Prelude.Types.Left', E0} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V24) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V8, V24))(V21)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--unelabTy\x{27}-4648'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E4} -> (fun (V11) -> case V11 of 0 -> begin (V12 = ('nested--7871-4563--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V0, V1))), fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V13))), case V14 of {'Idris.Prelude.Types.Left', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V16) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V12, V3, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V2)), V9, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V16))))(V13)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V17))), case V18 of {'Idris.Prelude.Types.Left', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V20) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V9, V20))(V17)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4)); _ -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V21))), case V22 of {'Idris.Prelude.Types.Left', E2} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V24) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V9, V24))(V21)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27},uniqueLocal-4590'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of 0 -> ('nested--7871-4563--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V9, ('nested--7871-4562--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V8)))); 1 -> V8; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-4501'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V6 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V4, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end()); _ -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end.
'case--unelabTy\x{27}-4446'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V5, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V11))))}} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V6 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V4, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end()); _ -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-4375'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V5 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V3, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end()); _ -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end.
'case--case block in unelabTy\x{27}-4308'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V5 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1)) end(E2)); _ -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V11))), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V6, V14, V11)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--unelabTy\x{27}-4272'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> fun (V10) -> begin (V15 = case V5 of {'Idris.TTImp.Unelab.NoSugar', E3} -> (fun (V11) -> (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V10)) end(E3)); _ -> begin (V12 = (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V10))), case V12 of {'Idris.Prelude.Types.Left', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V14) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V6, V14, V10)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V17}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V9))))}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V5 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V3, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end()); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabSugar-4169'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V9, V10) -> case V10 of {'Idris.Core.Name.CaseBlock', E4, E5} -> (fun (V11, V12) -> fun (V13) -> begin (V14 = ('un--unelabCase'(V4, {'Idris.Core.Name.NS', V9, {'Idris.Core.Name.CaseBlock', V11, V12}}, V6, V2, V13))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V16, V3}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E2, E3)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E0, E1)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end.
'case--unelabSugar-4151'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V6 of {'Idris.TTImp.TTImp.IVar', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Core.Name.NS', E4, E5} -> (fun (V10, V11) -> case V11 of {'Idris.Core.Name.CaseBlock', E6, E7} -> (fun (V12, V13) -> fun (V14) -> begin (V15 = ('un--unelabCase'(V4, {'Idris.Core.Name.NS', V10, {'Idris.Core.Name.CaseBlock', V12, V13}}, V7, V2, V14))), case V15 of {'Idris.Prelude.Types.Left', E8} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V17, V3}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E4, E5)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E2, E3)); _ -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in unelabCase-3992'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> ('nested--7863-3728--in--un--mkCase'(V0, V1, V2, V3, V10, V12, 0, V1)); 1 -> fun (V14) -> {'Idris.Prelude.Types.Right', V0} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabCase-3956'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Just', E0} -> (fun (V13) -> ('case--case block in case block in case block in unelabCase-3992'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V13, ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq__Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V1)), ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V8)))))) end(E0)); _ -> fun (V14) -> {'Idris.Prelude.Types.Right', V0} end end.
'case--case block in unelabCase-3932'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.Context.PMDef', E0, E1, E2, E3, E4} -> (fun (V8, V9, V10, V11, V12) -> ('case--case block in case block in unelabCase-3956'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V11, V12, V10, ('nested--7863-3723--in--un--findArgPos'(V0, V1, V2, V3, 'erased', V10)))) end(E0, E1, E2, E3, E4)); _ -> fun (V13) -> {'Idris.Prelude.Types.Right', V0} end end.
'case--unelabCase-3917'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> begin (V7 = {'Idris.Prelude.Types.Just', V6}), ('case--case block in unelabCase-3932'(V0, V1, V2, V3, V4, V6, V7, case V6 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> V25 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V29) -> {'Idris.Prelude.Types.Right', V0} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabCase,getNth-3783'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> ('nested--7863-3724--in--un--idxOrDefault'(V0, V1, V2, V3, 'erased', V6, V8, V9)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7700-3562--in--un--usedBinder'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Core.TT.Let', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', V5, V9)), fun () -> ('un--used'('erased', V5, V10)) end)) end(E0, E1, E2, E3)); _ -> ('un--used'('erased', V5, ('Idris.Idris2.Core.TT':'un--binderType'('erased', V6)))) end.
'nested--7871-4563--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> ('case--unelabTy\x{27},uniqueLocal-4590'(V0, V1, V2, V3, V4, V5, V6, V7, V9, V8, ('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq__Name'(V12, V13)) end end}, V9, V8)))).
'nested--10755-6157--in--un--toName'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V8, V9, V10) -> {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.TT':'un--nameAt'('erased', V0, V10, 'erased'))} end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--10755-6159--in--un--showScope'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('nested--10755-6158--in--un--showNScope'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V8) -> ('nested--10755-6157--in--un--toName'(V0, V1, V2, V3, V4, V5, V6, V8)) end, V7)))))).
'nested--10755-6158--in--un--showNScope'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> <<"[no locals in scope]"/utf8>>; _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"[locals in scope: "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V8)) end, ('Idris.Idris2.Data.List':'un--nub'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq__Name'(V11, V12)) end end}, V7)))))), <<"]"/utf8>>)))) end.
'nested--7863-3726--in--un--nthArg'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.TT.App', E0, E1, E2} -> (fun (V8, V9, V10) -> ('nested--7863-3725--in--un--getNth'(V0, V1, V2, V3, 'erased', V6, {'Idris.Core.TT.App', V8, V9, V10})) end(E0, E1, E2)); _ -> {'Idris.Core.TT.Erased', V5, 1} end.
'nested--7871-4562--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.Name.MN', E0, E1} -> (fun (V9, V10) -> {'Idris.Core.Name.MN', V9, ((V10 + 1) rem 9223372036854775808)} end(E0, E1)); {'Idris.Core.Name.UN', E2} -> (fun (V11) -> {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V11)), 0} end(E2)); {'Idris.Core.Name.NS', E3, E4} -> (fun (V12, V13) -> {'Idris.Core.Name.NS', V12, ('nested--7871-4562--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V13))} end(E3, E4)); _ -> {'Idris.Core.Name.MN', ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V8)), 0} end.
'nested--7863-3727--in--un--mkClause'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V11, V12) -> begin (V13 = ('nested--7863-3726--in--un--nthArg'(V0, V1, V2, V3, 'erased', V4, V5, V11))), fun (V14) -> begin (V15 = ('un--unelabTy'(V7, V3, {'Idris.TTImp.Unelab.Full'}, V9, V13, V14))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = ('un--unelabTy'(V7, V3, {'Idris.TTImp.Unelab.Full'}, V9, V12, V14))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V4, ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V17)), ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V20))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7863-3728--in--un--mkCase'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V5 of 0 -> case V7 of [E2 | E3] -> (fun (V8, V9) -> case V8 of {'Idris.TTImp.Unelab.Exp', E4, E5} -> (fun (V10, V11) -> fun (V12) -> begin (V14 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V13) -> ('nested--7863-3727--in--un--mkClause'(V0, V1, V2, V3, V10, V6, V13)) end, V4, []))(V12))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V10, V11, {'Idris.TTImp.TTImp.Implicit', V10, 1}, V16}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> fun (V17) -> {'Idris.Prelude.Types.Right', V0} end end end(E2, E3)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', V0} end end; _ -> begin (V19 = (V5 - 1)), case V7 of [E0 | E1] -> (fun (V20, V21) -> ('nested--7863-3728--in--un--mkCase'(V0, V1, V2, V3, V4, V19, (1 + V6), V21)) end(E0, E1)); _ -> fun (V22) -> {'Idris.Prelude.Types.Right', V0} end end end end.
'nested--7877-5630--in--un--isNoSugar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.TTImp.Unelab.NoSugar', E0} -> (fun (V14) -> 0 end(E0)); _ -> 1 end.
'nested--7877-5631--in--un--isDefImp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Core.TT.DefImplicit', E0} -> (fun (V15) -> 0 end(E0)); _ -> 1 end.
'nested--7863-3724--in--un--idxOrDefault'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V5 of 0 -> case V7 of [E2 | E3] -> (fun (V8, V9) -> V8 end(E2, E3)); _ -> case V7 of [] -> V6; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V10 = (V5 - 1)), case V7 of [E0 | E1] -> (fun (V11, V12) -> ('nested--7863-3724--in--un--idxOrDefault'(V0, V1, V2, V3, 'erased', V10, V6, V12)) end(E0, E1)); _ -> case V7 of [] -> V6; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'nested--7863-3725--in--un--getNth'(V0, V1, V2, V3, V4, V5, V6) -> ('case--unelabCase,getNth-3783'(V0, V1, V2, V3, 'erased', V6, V5, ('Idris.Idris2.Core.TT':'un--getFnArgs'('erased', V6)))).
'nested--7865-4131--in--un--getFnArgs'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V7, V8, V9) -> ('nested--7865-4131--in--un--getFnArgs'('erased', V1, V2, V3, V4, V8, [{'Idris.TTImp.Unelab.Exp', V7, V9} | V6])) end(E0, E1, E2)); {'Idris.TTImp.TTImp.INamedApp', E3, E4, E5, E6} -> (fun (V10, V11, V12, V13) -> ('nested--7865-4131--in--un--getFnArgs'('erased', V1, V2, V3, V4, V11, [{'Idris.TTImp.Unelab.Named', V10, V12, V13} | V6])) end(E3, E4, E5, E6)); _ -> {'Idris.Builtin.MkPair', V5, V6} end.
'nested--7863-3723--in--un--findArgPos'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> {'Idris.Prelude.Types.Just', V7} end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--used'(V0, V1, V2) -> case V2 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V3, V4, V5) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq__Nat'(V1, V5)) end(E0, E1, E2)); {'Idris.Core.TT.Bind', E3, E4, E5, E6} -> (fun (V6, V7, V8, V9) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('nested--7700-3562--in--un--usedBinder'(V6, V7, 'erased', V9, V8, V1, V8)), fun () -> ('un--used'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--+_Num__Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(1)), V1)), V9)) end)) end(E3, E4, E5, E6)); {'Idris.Core.TT.Meta', E7, E8, E9, E10} -> (fun (V10, V11, V12, V13) -> (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V16, V17, V18)) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V21, V22, V23)) end end end end end}, fun (V24) -> ('un--used'('erased', V1, V24)) end))(V13)) end(E7, E8, E9, E10)); {'Idris.Core.TT.App', E11, E12, E13} -> (fun (V25, V26, V27) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', V1, V26)), fun () -> ('un--used'('erased', V1, V27)) end)) end(E11, E12, E13)); {'Idris.Core.TT.As', E14, E15, E16, E17} -> (fun (V28, V29, V30, V31) -> ('un--used'('erased', V1, V31)) end(E14, E15, E16, E17)); {'Idris.Core.TT.TDelayed', E18, E19, E20} -> (fun (V32, V33, V34) -> ('un--used'('erased', V1, V34)) end(E18, E19, E20)); {'Idris.Core.TT.TDelay', E21, E22, E23, E24} -> (fun (V35, V36, V37, V38) -> ('un--used'('erased', V1, V38)) end(E21, E22, E23, E24)); {'Idris.Core.TT.TForce', E25, E26, E27} -> (fun (V39, V40, V41) -> ('un--used'('erased', V1, V41)) end(E25, E26, E27)); _ -> 1 end.
'un--unelabUniqueBinders'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.NoSugar', 0}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabTy\x{27}'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V5, V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V5, ('Idris.Idris2.Core.TT':'un--nameAt'('erased', V0, V7, 'erased'))}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--binderType'('erased', ('Idris.Idris2.Core.Env':'un--getBinder'('erased', 'erased', {'Idris.Core.TT.dn--un--__mkWeaken', fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken__Term'('erased', 'erased', V11)) end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.TT':'dn--un--weakenNs_Weaken__Term'('erased', 'erased', V14, V15)) end end end end}, V0, V7, 'erased', V3))))))}} end end(E0, E1, E2)); {'Idris.Core.TT.Ref', E3, E4, E5} -> (fun (V16, V17, V18) -> fun (V19) -> begin (V21 = begin (V20 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V20} end), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> begin (V50 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V18, case V23 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49) -> V24 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V19))), case V50 of {'Idris.Prelude.Types.Left', E34} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V52) -> case V52 of {'Idris.Prelude.Types.Just', E36} -> (fun (V53) -> begin (V58 = case V2 of {'Idris.TTImp.Unelab.NoSugar', E39} -> (fun (V54) -> (('Idris.Idris2.Core.Context':'un--getFullName'(V1, V18))(V19)) end(E39)); _ -> begin (V55 = (('Idris.Idris2.Core.Context':'un--getFullName'(V1, V18))(V19))), case V55 of {'Idris.Prelude.Types.Left', E37} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V57) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V1, V57, V19)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V58 of {'Idris.Prelude.Types.Left', E40} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V16, V60}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V53))))}} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V2 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V16, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V16))}} end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V16, V18}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V16))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4, E5)); {'Idris.Core.TT.Meta', E42, E43, E44, E45} -> (fun (V61, V62, V63, V64) -> fun (V65) -> begin (V67 = begin (V66 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V66} end), case V67 of {'Idris.Prelude.Types.Left', E46} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V69) -> begin (V70 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V62))), begin (V97 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'({'Idris.Core.Name.Resolved', V63}, case V69 of {'Idris.Core.Context.MkDefs', E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73} -> (fun (V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96) -> V71 end(E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V65))), case V97 of {'Idris.Prelude.Types.Left', E74} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V99) -> case V99 of {'Idris.Prelude.Types.Just', E76} -> (fun (V100) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V61, V70}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V100))))}} end(E76)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V2 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V61, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V61))}} end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V61, V70}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V61))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44, E45)); {'Idris.Core.TT.Bind', E77, E78, E79, E80} -> (fun (V101, V102, V103, V104) -> fun (V105) -> begin (V106 = ('un--unelabTy'([V102 | V0], V1, V2, {'Idris.Core.Env.::', V103, V3}, V104, V105))), case V106 of {'Idris.Prelude.Types.Left', E81} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V108) -> case V108 of {'Idris.Builtin.MkPair', E83, E84} -> (fun (V109, V110) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E87} -> (fun (V111) -> case V111 of 0 -> begin (V112 = ('nested--7871-4563--in--un--uniqueLocal'(V0, V102, V104, V103, V101, V3, V2, V1, V0, V102))), begin (V113 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V110))(V105))), case V113 of {'Idris.Prelude.Types.Left', E90} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V115) -> (('un--unelabBinder'(V0, V1, V2, V101, V3, V112, V103, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V104)), V109, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V115))))(V105)) end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> begin (V116 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V110))(V105))), case V116 of {'Idris.Prelude.Types.Left', E88} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V118) -> (('un--unelabBinder'(V0, V1, V2, V101, V3, V102, V103, V104, V109, V118))(V105)) end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E87)); _ -> begin (V119 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V110))(V105))), case V119 of {'Idris.Prelude.Types.Left', E85} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V121) -> (('un--unelabBinder'(V0, V1, V2, V101, V3, V102, V103, V104, V109, V121))(V105)) end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E83, E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E77, E78, E79, E80)); {'Idris.Core.TT.App', E92, E93, E94} -> (fun (V122, V123, V124) -> fun (V125) -> begin (V126 = ('un--unelabTy'(V0, V1, V2, V3, V123, V125))), case V126 of {'Idris.Prelude.Types.Left', E95} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V128) -> case V128 of {'Idris.Builtin.MkPair', E97, E98} -> (fun (V129, V130) -> begin (V131 = ('un--unelabTy'(V0, V1, V2, V3, V124, V125))), case V131 of {'Idris.Prelude.Types.Left', E99} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V133) -> case V133 of {'Idris.Builtin.MkPair', E101, E102} -> (fun (V134, V135) -> begin (V136 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V1, V130))(V125))), case V136 of {'Idris.Prelude.Types.Left', E103} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V138) -> begin (V140 = begin (V139 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V139} end), case V140 of {'Idris.Prelude.Types.Left', E105} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V142) -> case V138 of {'Idris.Core.Value.NBind', E107, E108, E109, E110} -> (fun (V143, V144, V145, V146) -> case V145 of {'Idris.Core.TT.Pi', E111, E112, E113, E114} -> (fun (V147, V148, V149, V150) -> case V149 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V151 = (((V146(V142))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, V124))))(V125))), case V151 of {'Idris.Prelude.Types.Left', E117} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V153) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V122, V129, V134}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V1, V0, V142, V3, V153))}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V154 = (((V146(V142))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, V124))))(V125))), case V154 of {'Idris.Prelude.Types.Left', E115} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V156) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.INamedApp', V122, V129, V144, V134}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V1, V0, V142, V3, V156))}} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E111, E112, E113, E114)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V122, V129, V134}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V122))}} end end(E107, E108, E109, E110)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V122, V129, V134}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V122))}} end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101, E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97, E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E92, E93, E94)); {'Idris.Core.TT.As', E119, E120, E121, E122} -> (fun (V157, V158, V159, V160) -> fun (V161) -> begin (V162 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V159))(V161))), case V162 of {'Idris.Prelude.Types.Left', E123} -> (fun (V163) -> {'Idris.Prelude.Types.Left', V163} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V164) -> case V164 of {'Idris.Builtin.MkPair', E125, E126} -> (fun (V165, V166) -> begin (V167 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V160))(V161))), case V167 of {'Idris.Prelude.Types.Left', E127} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V169) -> case V169 of {'Idris.Builtin.MkPair', E129, E130} -> (fun (V170, V171) -> case V165 of {'Idris.TTImp.TTImp.IVar', E131, E132} -> (fun (V172, V173) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E133} -> (fun (V174) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V157, V158, V173, V170}, V171}} end(E133)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V170, V171}} end end(E131, E132)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V170, V171}} end end(E129, E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125, E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E119, E120, E121, E122)); {'Idris.Core.TT.TDelayed', E134, E135, E136} -> (fun (V175, V176, V177) -> fun (V178) -> begin (V179 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V177))(V178))), case V179 of {'Idris.Prelude.Types.Left', E137} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V181) -> case V181 of {'Idris.Builtin.MkPair', E139, E140} -> (fun (V182, V183) -> begin (V185 = begin (V184 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V184} end), case V185 of {'Idris.Prelude.Types.Left', E141} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V187) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelayed', V175, V176, V182}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V175))}} end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139, E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E134, E135, E136)); {'Idris.Core.TT.TDelay', E143, E144, E145, E146} -> (fun (V188, V189, V190, V191) -> fun (V192) -> begin (V193 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V191))(V192))), case V193 of {'Idris.Prelude.Types.Left', E147} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V195) -> case V195 of {'Idris.Builtin.MkPair', E149, E150} -> (fun (V196, V197) -> begin (V199 = begin (V198 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V198} end), case V199 of {'Idris.Prelude.Types.Left', E151} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V201) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelay', V188, V196}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V188))}} end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149, E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E143, E144, E145, E146)); {'Idris.Core.TT.TForce', E153, E154, E155} -> (fun (V202, V203, V204) -> fun (V205) -> begin (V206 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V204))(V205))), case V206 of {'Idris.Prelude.Types.Left', E156} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V208) -> case V208 of {'Idris.Builtin.MkPair', E158, E159} -> (fun (V209, V210) -> begin (V212 = begin (V211 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V211} end), case V212 of {'Idris.Prelude.Types.Left', E160} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V214) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IForce', V202, V209}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V202))}} end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E158, E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E153, E154, E155)); {'Idris.Core.TT.PrimVal', E162, E163} -> (fun (V215, V216) -> fun (V217) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPrimVal', V215, V216}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V215))}} end end(E162, E163)); {'Idris.Core.TT.Erased', E164, E165} -> (fun (V218, V219) -> fun (V220) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V218, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V218))}} end end(E164, E165)); {'Idris.Core.TT.TType', E166} -> (fun (V221) -> fun (V222) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IType', V221}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V221))}} end end(E166)); _ -> begin (V223 = ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V4))), fun (V224) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V223, 1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V223))}} end end end.
'un--unelabTy'(V0, V1, V2, V3, V4, V5) -> begin (V6 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V4))(V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> (('un--unelabSugar'('erased', V1, V2, V8))(V5)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabSugar'(V0, V1, V2, V3) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', V3} end end(E2)); {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', V3} end end()); _ -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> ('case--unelabSugar-4151'('erased', V2, V7, V8, V1, ('nested--7865-4131--in--un--getFnArgs'('erased', V2, V7, V8, V1, V7, [])))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabPi'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V5) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Explicit'}} end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Implicit'}} end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.AutoImplicit'}} end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V8) -> fun (V9) -> begin (V10 = ('un--unelabTy'(V0, V1, V2, V3, V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V13, V14) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.DefImplicit', V13}} end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unelabNoSugar'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.NoSugar', 1}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabNoPatvars'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.ImplicitHoles'}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabCase'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V35 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V8 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> V9 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V35 of {'Idris.Prelude.Types.Left', E28} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V37) -> case V37 of {'Idris.Prelude.Types.Just', E30} -> (fun (V38) -> begin (V39 = {'Idris.Prelude.Types.Just', V38}), (('case--case block in unelabCase-3932'(V3, V2, V1, V0, V8, V38, V39, case V38 of {'Idris.Core.Context.MkGlobalDef', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> V57 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4)) end end(E30)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', V3} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabBinder'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V6 of {'Idris.Core.TT.Lam', E0, E1, E2, E3} -> (fun (V10, V11, V12, V13) -> fun (V14) -> begin (V15 = ('un--unelabTy'(V0, V1, V2, V4, V13, V14))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V18, V19) -> begin (V20 = (('un--unelabPi'(V0, V1, V2, V4, V12))(V14))), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILam', V3, V11, V22, {'Idris.Prelude.Types.Just', V5}, V18, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.Pi', V10, V11, V12, V13}, V9}))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); {'Idris.Core.TT.Let', E10, E11, E12, E13} -> (fun (V23, V24, V25, V26) -> fun (V27) -> begin (V28 = ('un--unelabTy'(V0, V1, V2, V4, V25, V27))), case V28 of {'Idris.Prelude.Types.Left', E14} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V30) -> case V30 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V31, V32) -> begin (V33 = ('un--unelabTy'(V0, V1, V2, V4, V26, V27))), case V33 of {'Idris.Prelude.Types.Left', E18} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V35) -> case V35 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V36, V37) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V3, V24, V5, V36, V31, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.Let', V23, V24, V25, V26}, V9}))}} end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13)); {'Idris.Core.TT.Pi', E22, E23, E24, E25} -> (fun (V38, V39, V40, V41) -> fun (V42) -> begin (V43 = ('un--unelabTy'(V0, V1, V2, V4, V41, V42))), case V43 of {'Idris.Prelude.Types.Left', E26} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V45) -> case V45 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V46, V47) -> begin (V48 = (('un--unelabPi'(V0, V1, V2, V4, V40))(V42))), case V48 of {'Idris.Prelude.Types.Left', E30} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V50) -> begin (V52 = begin (V51 = {'Idris.Builtin.MkPair', V46, V47}), ('case--case block in unelabBinder-5705'(V0, V38, V41, V40, V39, V5, V9, V8, V7, V4, V3, V2, V1, V47, V46, V51, V50, ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', 0, V7)), fun () -> ('nested--7877-5630--in--un--isNoSugar'(V0, V38, V41, V40, V39, V5, V9, V8, V7, V4, V3, V2, V1, V2)) end)))) end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPi', V3, V39, V50, V52, V46, V8}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V3))}} end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E22, E23, E24, E25)); {'Idris.Core.TT.PVar', E32, E33, E34, E35} -> (fun (V53, V54, V55, V56) -> fun (V57) -> begin (V58 = ('un--unelabTy'(V0, V1, V2, V4, V56, V57))), case V58 of {'Idris.Prelude.Types.Left', E36} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V60) -> case V60 of {'Idris.Builtin.MkPair', E38, E39} -> (fun (V61, V62) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V8, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.PVTy', V53, V54, V56}, V9}))}} end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33, E34, E35)); {'Idris.Core.TT.PLet', E40, E41, E42, E43} -> (fun (V63, V64, V65, V66) -> fun (V67) -> begin (V68 = ('un--unelabTy'(V0, V1, V2, V4, V65, V67))), case V68 of {'Idris.Prelude.Types.Left', E44} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V70) -> case V70 of {'Idris.Builtin.MkPair', E46, E47} -> (fun (V71, V72) -> begin (V73 = ('un--unelabTy'(V0, V1, V2, V4, V66, V67))), case V73 of {'Idris.Prelude.Types.Left', E48} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V75) -> case V75 of {'Idris.Builtin.MkPair', E50, E51} -> (fun (V76, V77) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V3, V64, V5, V76, V71, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.PLet', V63, V64, V65, V66}, V9}))}} end(E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E40, E41, E42, E43)); {'Idris.Core.TT.PVTy', E52, E53, E54} -> (fun (V78, V79, V80) -> fun (V81) -> begin (V82 = ('un--unelabTy'(V0, V1, V2, V4, V80, V81))), case V82 of {'Idris.Prelude.Types.Left', E55} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V84) -> case V84 of {'Idris.Builtin.MkPair', E57, E58} -> (fun (V85, V86) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V8, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V3))}} end(E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unelab'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.TT.Meta', E2, E3, E4, E5} -> (fun (V4, V5, V6, V7) -> begin (V8 = ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'un--nameRoot'(V5)), ('nested--10755-6159--in--un--showScope'(V0, V7, V6, V5, V4, V2, V1, V7))))), fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V4, V8}} end end end(E2, E3, E4, E5)); _ -> fun (V10) -> begin (V11 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.Full'}, V2, V3, V10))), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V13))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
