-module('Idris.Idris2.TTImp.WithClause').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in getNewLHS-4539'/22,
  'case--case block in case block in getNewLHS-4488'/18,
  'case--case block in getNewLHS-4444'/15,
  'case--getNewLHS-4401'/10,
  'case--getNewLHS,dropWithArgs-4344'/14,
  'case--getArgMatch-4280'/7,
  'case--getArgMatch-4227'/5,
  'case--mergeMatches-4164'/6,
  'case--getMatch-4071'/6,
  'case--getMatch-3870'/10,
  'case--getMatch-3748'/14,
  'case--getMatch-3676'/6,
  'case--getMatch-3635'/7,
  'case--getMatch-3589'/8,
  'nested--7281-4735--in--un--wrhsC'/8,
  'nested--7281-4734--in--un--wrhs'/8,
  'nested--7281-4732--in--un--withApply'/10,
  'nested--7281-4733--in--un--updateWith'/10,
  'nested--5948-3707--in--un--samePiInfo'/15,
  'nested--6791-4321--in--un--dropWithArgs'/11,
  'un--withRHS'/7,
  'un--mergeMatches'/2,
  'un--matchFail'/3,
  'un--matchAny'/3,
  'un--matchAll'/2,
  'un--getNewLHS'/10,
  'un--getMatch'/3,
  'un--getArgMatch'/5
]).
'case--case block in case block in case block in getNewLHS-4539'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of [E0 | E1] -> (fun (V22, V23) -> fun (V24) -> begin (V28 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V15)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V18)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" dropping "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V25) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V25)) end, fun (V26) -> fun (V27) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V26, V27)) end end}, [V22 | V23])))))))))) end))(V24))), case V28 of {'Idris.Prelude.Types.Left', E2} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V30) -> begin (V31 = (('un--getMatch'(0, V15, V18))(V24))), case V31 of {'Idris.Prelude.Types.Left', E4} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V33) -> begin (V49 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Matches: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V36, V37)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V38) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V39, V40)) end end}}, V34)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V44, V45)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V46) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V47, V48)) end end}}, V41, V42)) end end}, V33)))) end))(V24))), case V49 of {'Idris.Prelude.Types.Left', E6} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V51) -> begin (V53 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V7, V4}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V52) -> ('un--getArgMatch'(V7, 1, V22, V33, V52)) end, V3)), V23))))), begin (V54 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"New LHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V53)))) end))(V24))), case V54 of {'Idris.Prelude.Types.Left', E8} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V56) -> {'Idris.Prelude.Types.Right', V53} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> fun (V57) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V57)) end end.
'case--case block in case block in getNewLHS-4488'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V18, V19) -> fun (V20) -> begin (V21 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V12, V20))), case V21 of {'Idris.Prelude.Types.Left', E2} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V23) -> begin (V24 = {'Idris.Builtin.MkPair', V18, V19}), (('case--case block in case block in case block in getNewLHS-4539'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V18, V19, V24, V23, ('Idris.Idris2.Data.List':'un--reverse'('erased', V10))))(V20)) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in getNewLHS-4444'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> fun (V17) -> begin (V18 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V9, V17))), case V18 of {'Idris.Prelude.Types.Left', E2} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V20) -> begin (V21 = {'Idris.Builtin.MkPair', V15, V16}), case V20 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V22, V23) -> begin (V24 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V12, V17))), case V24 of {'Idris.Prelude.Types.Left', E6} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V26) -> begin (V27 = {'Idris.Builtin.MkPair', V22, V23}), (('case--case block in case block in case block in getNewLHS-4539'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V15, V16, V21, V22, V23, V27, V26, ('Idris.Idris2.Data.List':'un--reverse'('erased', V10))))(V17)) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getNewLHS-4401'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V8, V12))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V16 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, 0, V12))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V2, V12))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = {'Idris.Builtin.MkPair', V10, V11}), case V21 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V23, V24) -> begin (V25 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V10, V12))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> begin (V28 = {'Idris.Builtin.MkPair', V23, V24}), case V27 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V29, V30) -> begin (V31 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V15, V12))), case V31 of {'Idris.Prelude.Types.Left', E14} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V33) -> begin (V34 = {'Idris.Builtin.MkPair', V29, V30}), (('case--case block in case block in case block in getNewLHS-4539'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V10, V11, V22, V15, V18, V23, V24, V28, V29, V30, V34, V33, ('Idris.Idris2.Data.List':'un--reverse'('erased', V11))))(V12)) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getNewLHS,dropWithArgs-4344'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V14, [V11 | V15]}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getArgMatch-4280'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.TTImp.TTImp.Implicit', V5, 0} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> V7 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getArgMatch-4227'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.TTImp.TTImp.ISearch', V3, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(500))} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> V5 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeMatches-4164'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V0, V1} | V4]} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> fun (V8) -> begin (V9 = (('un--getMatch'(V3, V1, V7))(V8))), case V9 of {'Idris.Prelude.Types.Left', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V11) -> (('un--mergeMatches'(V3, V2))(V8)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-4071'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> fun (V6) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V7) -> ('un--matchFail'('erased', V1, V7)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-3870'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> ('un--matchAll'(V8, [{'Idris.Builtin.MkPair', V3, V6} | [{'Idris.Builtin.MkPair', V1, V4} | []]])); 1 -> fun (V10) -> ('un--matchFail'('erased', V7, V10)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-3748'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> ('un--matchAll'(V12, [{'Idris.Builtin.MkPair', V2, V7} | [{'Idris.Builtin.MkPair', V1, V6} | []]])); 1 -> fun (V14) -> ('un--matchFail'('erased', V11, V14)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-3676'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> fun (V6) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V7) -> ('un--matchFail'('erased', V3, V7)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-3635'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> fun (V7) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V8) -> ('un--matchFail'('erased', V4, V8)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-3589'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> fun (V8) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V9) -> ('un--matchFail'('erased', V5, V9)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7281-4735--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V8, V9, V10) -> fun (V11) -> begin (V12 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V10))(V11))), case V12 of {'Idris.Prelude.Types.Left', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V8, V9, V14}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> fun (V15) -> {'Idris.Prelude.Types.Right', V7} end end.
'nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V8, V9, V10, V11, V12, V13) -> fun (V14) -> begin (V15 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V12))(V14))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V13))(V14))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V8, V9, V10, V11, V17, V20}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E10, E11, E12, E13, E14, E15} -> (fun (V21, V22, V23, V24, V25, V26) -> fun (V27) -> begin (V28 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V25))(V27))), case V28 of {'Idris.Prelude.Types.Left', E16} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V30) -> begin (V31 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V26))(V27))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V21, V22, V23, V24, V30, V33}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13, E14, E15)); {'Idris.TTImp.TTImp.ILet', E20, E21, E22, E23, E24, E25} -> (fun (V34, V35, V36, V37, V38, V39) -> fun (V40) -> begin (V41 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V37))(V40))), case V41 of {'Idris.Prelude.Types.Left', E26} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V43) -> begin (V44 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V38))(V40))), case V44 of {'Idris.Prelude.Types.Left', E28} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V46) -> begin (V47 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V39))(V40))), case V47 of {'Idris.Prelude.Types.Left', E30} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V34, V35, V36, V43, V46, V49}} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20, E21, E22, E23, E24, E25)); {'Idris.TTImp.TTImp.ICase', E32, E33, E34, E35} -> (fun (V50, V51, V52, V53) -> fun (V54) -> begin (V55 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V51))(V54))), case V55 of {'Idris.Prelude.Types.Left', E36} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V57) -> begin (V58 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V52))(V54))), case V58 of {'Idris.Prelude.Types.Left', E38} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V60) -> begin (V62 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V61) -> ('nested--7281-4735--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V61)) end, V53, []))(V54))), case V62 of {'Idris.Prelude.Types.Left', E40} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V50, V57, V60, V64}} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33, E34, E35)); {'Idris.TTImp.TTImp.ILocal', E42, E43, E44} -> (fun (V65, V66, V67) -> fun (V68) -> begin (V69 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V67))(V68))), case V69 of {'Idris.Prelude.Types.Left', E45} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V71) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V65, V66, V71}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44)); {'Idris.TTImp.TTImp.IUpdate', E47, E48, E49} -> (fun (V72, V73, V74) -> fun (V75) -> begin (V76 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V74))(V75))), case V76 of {'Idris.Prelude.Types.Left', E50} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V78) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V72, V73, V78}} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E47, E48, E49)); {'Idris.TTImp.TTImp.IApp', E52, E53, E54} -> (fun (V79, V80, V81) -> fun (V82) -> begin (V83 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V80))(V82))), case V83 of {'Idris.Prelude.Types.Left', E55} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V85) -> begin (V86 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V81))(V82))), case V86 of {'Idris.Prelude.Types.Left', E57} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V88) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V79, V85, V88}} end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52, E53, E54)); {'Idris.TTImp.TTImp.IAutoApp', E59, E60, E61} -> (fun (V89, V90, V91) -> fun (V92) -> begin (V93 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V90))(V92))), case V93 of {'Idris.Prelude.Types.Left', E62} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V95) -> begin (V96 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V91))(V92))), case V96 of {'Idris.Prelude.Types.Left', E64} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V98) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V89, V95, V98}} end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E59, E60, E61)); {'Idris.TTImp.TTImp.INamedApp', E66, E67, E68, E69} -> (fun (V99, V100, V101, V102) -> fun (V103) -> begin (V104 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V100))(V103))), case V104 of {'Idris.Prelude.Types.Left', E70} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V106) -> begin (V107 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V102))(V103))), case V107 of {'Idris.Prelude.Types.Left', E72} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V109) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V99, V106, V101, V109}} end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E66, E67, E68, E69)); {'Idris.TTImp.TTImp.IWithApp', E74, E75, E76} -> (fun (V110, V111, V112) -> ('nested--7281-4733--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V110, V111, [V112 | []])) end(E74, E75, E76)); {'Idris.TTImp.TTImp.IRewrite', E77, E78, E79} -> (fun (V113, V114, V115) -> fun (V116) -> begin (V117 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V114))(V116))), case V117 of {'Idris.Prelude.Types.Left', E80} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V119) -> begin (V120 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V115))(V116))), case V120 of {'Idris.Prelude.Types.Left', E82} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V122) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V113, V119, V122}} end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E77, E78, E79)); {'Idris.TTImp.TTImp.IDelayed', E84, E85, E86} -> (fun (V123, V124, V125) -> fun (V126) -> begin (V127 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V125))(V126))), case V127 of {'Idris.Prelude.Types.Left', E87} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V129) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V123, V124, V129}} end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E84, E85, E86)); {'Idris.TTImp.TTImp.IDelay', E89, E90} -> (fun (V130, V131) -> fun (V132) -> begin (V133 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V131))(V132))), case V133 of {'Idris.Prelude.Types.Left', E91} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V135) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V130, V135}} end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E89, E90)); {'Idris.TTImp.TTImp.IForce', E93, E94} -> (fun (V136, V137) -> fun (V138) -> begin (V139 = (('nested--7281-4734--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V137))(V138))), case V139 of {'Idris.Prelude.Types.Left', E95} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V141) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V136, V141}} end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E93, E94)); _ -> fun (V142) -> {'Idris.Prelude.Types.Right', V7} end end.
'nested--7281-4732--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [] -> V8; [E0 | E1] -> (fun (V10, V11) -> ('nested--7281-4732--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, {'Idris.TTImp.TTImp.IWithApp', V7, V8, V10}, V11)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7281-4733--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of {'Idris.TTImp.TTImp.IWithApp', E12, E13, E14} -> (fun (V10, V11, V12) -> ('nested--7281-4733--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V11, [V12 | V9])) end(E12, E13, E14)); _ -> case V9 of [] -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} application"/utf8>>}, V13)) end; [E0 | E1] -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"With-app: Matching "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V0)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V8)))))))) end))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = (('un--getMatch'(1, V0, V8))(V16))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> begin (V38 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Result: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V23) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V24) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V24)) end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V25, V26)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V27) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V28, V29)) end end}}, V23)) end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V32)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V33, V34)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V36, V37)) end end}}, V30, V31)) end end}, V22)))) end))(V16))), case V38 of {'Idris.Prelude.Types.Left', E6} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V40) -> begin (V42 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V7, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V41) -> ('un--getArgMatch'(V7, 0, V14, V22, V41)) end, V2))))), begin (V100 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"With args for RHS: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V44) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V46) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V47, V48)) end end}, V45)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V51) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V52, V53)) end end}, V49, V50)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V54) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V55, V56)) end end}}, V44)) end, fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V59) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V60) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V60)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V61, V62)) end end}, V59)) end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V65) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V65)) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V66, V67)) end end}, V63, V64)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V68) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V69, V70)) end end}}, V57, V58)) end end}, V43)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V73) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V74) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V75) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V75)) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V76, V77)) end end}, V74)) end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V80) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V80)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V81, V82)) end end}, V78, V79)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V84, V85)) end end}}, V73)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V88) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V89) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V89)) end, fun (V90) -> fun (V91) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V90, V91)) end end}, V88)) end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V94) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V94)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V95, V96)) end end}, V92, V93)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V97) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V97)) end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V98, V99)) end end}}, V86, V87)) end end}, V71, V72)) end end}, V2)))) end))(V16))), case V100 of {'Idris.Prelude.Types.Left', E8} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V102) -> begin (V103 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"New RHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V42)))) end))(V16))), case V103 of {'Idris.Prelude.Types.Left', E10} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V105) -> {'Idris.Prelude.Types.Right', ('nested--7281-4732--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V42, V15))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--5948-3707--in--un--samePiInfo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V13 of {'Idris.Core.TT.Explicit'} -> (fun () -> case V14 of {'Idris.Core.TT.Explicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> case V14 of {'Idris.Core.TT.Implicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case V14 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V15) -> case V14 of {'Idris.Core.TT.DefImplicit', E1} -> (fun (V16) -> 0 end(E1)); _ -> 1 end end(E0)); _ -> 1 end.
'nested--6791-4321--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of 0 -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V10, []}} end; _ -> begin (V12 = (V9 - 1)), case V10 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V13, V14, V15) -> fun (V16) -> begin (V17 = (('nested--6791-4321--in--un--dropWithArgs'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V12, V14))(V16))), case V17 of {'Idris.Prelude.Types.Left', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, [V15 | V21]}} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> fun (V22) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V22)) end end end end.
'un--withRHS'(V0, V1, V2, V3, V4, V5, V6) -> ('nested--7281-4734--in--un--wrhs'(V6, V5, V4, V3, V2, V1, V0, V5)).
'un--mergeMatches'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> fun (V7) -> begin (V8 = (('un--mergeMatches'(V0, V4))(V7))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> (('case--mergeMatches-4164'(V5, V6, V4, V0, V10, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V13, V14)) end end}, V5, V10))))(V7)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchFail'(V0, V1, V2) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"With clause does not match parent"/utf8>>}, V2)).
'un--matchAny'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> ('un--matchFail'('erased', V0, V3)) end; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> fun (V8) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', ('un--getMatch'(V1, V6, V7)), fun (V9) -> ('un--matchAny'(V0, V1, V5)) end, V8)) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchAll'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> fun (V7) -> begin (V8 = (('un--matchAll'(V0, V4))(V7))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> begin (V11 = (('un--getMatch'(V0, V5, V6))(V7))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> (('un--mergeMatches'(V0, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V13, V10))))(V7)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNewLHS'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V10 = (('nested--6791-4321--in--un--dropWithArgs'('erased', V8, V7, V6, V5, V4, V3, V2, V1, V3, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V13, V14) -> begin (V15 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V9))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, 0, V9))), case V18 of {'Idris.Prelude.Types.Left', E6} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V7, V9))), case V21 of {'Idris.Prelude.Types.Left', E8} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V23) -> begin (V24 = {'Idris.Builtin.MkPair', V13, V14}), case V23 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V25, V26) -> begin (V27 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V13, V9))), case V27 of {'Idris.Prelude.Types.Left', E12} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V29) -> begin (V30 = {'Idris.Builtin.MkPair', V25, V26}), case V29 of {'Idris.Builtin.MkPair', E14, E15} -> (fun (V31, V32) -> begin (V33 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V17, V9))), case V33 of {'Idris.Prelude.Types.Left', E16} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V35) -> begin (V36 = {'Idris.Builtin.MkPair', V31, V32}), (('case--case block in case block in case block in getNewLHS-4539'('erased', V8, V7, V6, V5, V4, V3, V2, V1, V13, V14, V24, V17, V20, V25, V26, V30, V31, V32, V36, V35, ('Idris.Idris2.Data.List':'un--reverse'('erased', V14))))(V9)) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getMatch'(V0, V1, V2) -> case V1 of {'Idris.TTImp.TTImp.IBindVar', E161, E162} -> (fun (V3, V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V4, V2} | []]} end end(E161, E162)); {'Idris.TTImp.TTImp.Implicit', E163, E164} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', []} end end(E163, E164)); {'Idris.TTImp.TTImp.IVar', E165, E166} -> (fun (V9, V10) -> case V10 of {'Idris.Core.Name.NS', E330, E331} -> (fun (V11, V12) -> case V2 of {'Idris.TTImp.TTImp.IVar', E495, E496} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.NS', E497, E498} -> (fun (V15, V16) -> ('case--getMatch-3589'(V9, V12, V11, V16, V15, V13, V0, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V12, V16)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'un--isParentOf'(V15, V11)) end)))) end(E497, E498)); _ -> ('case--getMatch-3635'(V9, V12, V11, V14, V13, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V12, V14)))) end end(E495, E496)); _ -> case V2 of {'Idris.TTImp.TTImp.IVar', E493, E494} -> (fun (V17, V18) -> ('case--getMatch-3676'(V9, V10, V18, V17, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V10, V18)))) end(E493, E494)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E430, E431, E432, E433} -> (fun (V19, V20, V21, V22) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V20, V2} | [{'Idris.Builtin.MkPair', V22, V22} | []]])) end(E430, E431, E432, E433)); {'Idris.TTImp.TTImp.IAutoApp', E434, E435, E436} -> (fun (V23, V24, V25) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V24, V2} | [{'Idris.Builtin.MkPair', V25, V25} | []]])) end(E434, E435, E436)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E423, E424, E425, E426} -> (fun (V26, V27, V28, V29) -> fun (V30) -> ('un--matchFail'('erased', V26, V30)) end end(E423, E424, E425, E426)); {'Idris.TTImp.TTImp.IAutoApp', E427, E428, E429} -> (fun (V31, V32, V33) -> fun (V34) -> ('un--matchFail'('erased', V31, V34)) end end(E427, E428, E429)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E391, E392, E393} -> (fun (V35, V36, V37) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E404, E405, E406} -> (fun (V38, V39, V40) -> ('un--matchAny'(V35, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V37, V40)))) end(E404, E405, E406)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E400, E401, E402, E403} -> (fun (V41, V42, V43, V44) -> ('un--getMatch'(V0, V1, V44)) end(E400, E401, E402, E403)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E394} -> (fun (V45) -> case V2 of {'Idris.TTImp.TTImp.IType', E395} -> (fun (V46) -> fun (V47) -> {'Idris.Prelude.Types.Right', []} end end(E395)); _ -> fun (V48) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V48)) end end end(E394)); {'Idris.TTImp.TTImp.IPrimVal', E396, E397} -> (fun (V49, V50) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E398, E399} -> (fun (V51, V52) -> ('case--getMatch-4071'(V50, V49, V52, V51, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V50, V52)))) end(E398, E399)); _ -> fun (V53) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V53)) end end end(E396, E397)); _ -> fun (V54) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V54)) end end end end end(E391, E392, E393)); {'Idris.TTImp.TTImp.IAs', E407, E408, E409, E410} -> (fun (V55, V56, V57, V58) -> case V57 of {'Idris.Core.Name.UN', E411} -> (fun (V59) -> case V2 of {'Idris.TTImp.TTImp.IAs', E414, E415, E416, E417} -> (fun (V60, V61, V62, V63) -> case V62 of {'Idris.Core.Name.UN', E420} -> (fun (V64) -> fun (V65) -> begin (V66 = (('un--getMatch'(V0, V58, V63))(V65))), case V66 of {'Idris.Prelude.Types.Left', E421} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E421)); {'Idris.Prelude.Types.Right', E422} -> (fun (V68) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V59, {'Idris.TTImp.TTImp.IBindVar', V60, V64}} | V68]))(V65)) end(E422)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E420)); _ -> fun (V69) -> begin (V70 = (('un--getMatch'(V0, V58, V2))(V69))), case V70 of {'Idris.Prelude.Types.Left', E418} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E418)); {'Idris.Prelude.Types.Right', E419} -> (fun (V72) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V59, V2} | V72]))(V69)) end(E419)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E414, E415, E416, E417)); _ -> fun (V73) -> begin (V74 = (('un--getMatch'(V0, V58, V2))(V73))), case V74 of {'Idris.Prelude.Types.Left', E412} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E412)); {'Idris.Prelude.Types.Right', E413} -> (fun (V76) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V59, V2} | V76]))(V73)) end(E413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E411)); _ -> ('un--getMatch'(V0, V58, V2)) end end(E407, E408, E409, E410)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E387, E388, E389, E390} -> (fun (V77, V78, V79, V80) -> ('un--getMatch'(V0, V1, V80)) end(E387, E388, E389, E390)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E381} -> (fun (V81) -> case V2 of {'Idris.TTImp.TTImp.IType', E382} -> (fun (V82) -> fun (V83) -> {'Idris.Prelude.Types.Right', []} end end(E382)); _ -> fun (V84) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V84)) end end end(E381)); {'Idris.TTImp.TTImp.IPrimVal', E383, E384} -> (fun (V85, V86) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E385, E386} -> (fun (V87, V88) -> ('case--getMatch-4071'(V86, V85, V88, V87, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V86, V88)))) end(E385, E386)); _ -> fun (V89) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V89)) end end end(E383, E384)); _ -> fun (V90) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V90)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E486, E487, E488, E489} -> (fun (V91, V92, V93, V94) -> ('un--getMatch'(1, V92, V92)) end(E486, E487, E488, E489)); {'Idris.TTImp.TTImp.IAutoApp', E490, E491, E492} -> (fun (V95, V96, V97) -> ('un--getMatch'(1, V96, V96)) end(E490, E491, E492)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E479, E480, E481, E482} -> (fun (V98, V99, V100, V101) -> fun (V102) -> ('un--matchFail'('erased', V98, V102)) end end(E479, E480, E481, E482)); {'Idris.TTImp.TTImp.IAutoApp', E483, E484, E485} -> (fun (V103, V104, V105) -> fun (V106) -> ('un--matchFail'('erased', V103, V106)) end end(E483, E484, E485)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E447, E448, E449} -> (fun (V107, V108, V109) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E460, E461, E462} -> (fun (V110, V111, V112) -> ('un--matchAny'(V107, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V109, V112)))) end(E460, E461, E462)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E456, E457, E458, E459} -> (fun (V113, V114, V115, V116) -> ('un--getMatch'(V0, V1, V116)) end(E456, E457, E458, E459)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E450} -> (fun (V117) -> case V2 of {'Idris.TTImp.TTImp.IType', E451} -> (fun (V118) -> fun (V119) -> {'Idris.Prelude.Types.Right', []} end end(E451)); _ -> fun (V120) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V120)) end end end(E450)); {'Idris.TTImp.TTImp.IPrimVal', E452, E453} -> (fun (V121, V122) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E454, E455} -> (fun (V123, V124) -> ('case--getMatch-4071'(V122, V121, V124, V123, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V122, V124)))) end(E454, E455)); _ -> fun (V125) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V125)) end end end(E452, E453)); _ -> fun (V126) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V126)) end end end end end(E447, E448, E449)); {'Idris.TTImp.TTImp.IAs', E463, E464, E465, E466} -> (fun (V127, V128, V129, V130) -> case V129 of {'Idris.Core.Name.UN', E467} -> (fun (V131) -> case V2 of {'Idris.TTImp.TTImp.IAs', E470, E471, E472, E473} -> (fun (V132, V133, V134, V135) -> case V134 of {'Idris.Core.Name.UN', E476} -> (fun (V136) -> fun (V137) -> begin (V138 = (('un--getMatch'(V0, V130, V135))(V137))), case V138 of {'Idris.Prelude.Types.Left', E477} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E477)); {'Idris.Prelude.Types.Right', E478} -> (fun (V140) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V131, {'Idris.TTImp.TTImp.IBindVar', V132, V136}} | V140]))(V137)) end(E478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E476)); _ -> fun (V141) -> begin (V142 = (('un--getMatch'(V0, V130, V2))(V141))), case V142 of {'Idris.Prelude.Types.Left', E474} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E474)); {'Idris.Prelude.Types.Right', E475} -> (fun (V144) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V131, V2} | V144]))(V141)) end(E475)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E470, E471, E472, E473)); _ -> fun (V145) -> begin (V146 = (('un--getMatch'(V0, V130, V2))(V145))), case V146 of {'Idris.Prelude.Types.Left', E468} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E468)); {'Idris.Prelude.Types.Right', E469} -> (fun (V148) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V131, V2} | V148]))(V145)) end(E469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E467)); _ -> ('un--getMatch'(V0, V130, V2)) end end(E463, E464, E465, E466)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E443, E444, E445, E446} -> (fun (V149, V150, V151, V152) -> ('un--getMatch'(V0, V1, V152)) end(E443, E444, E445, E446)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E437} -> (fun (V153) -> case V2 of {'Idris.TTImp.TTImp.IType', E438} -> (fun (V154) -> fun (V155) -> {'Idris.Prelude.Types.Right', []} end end(E438)); _ -> fun (V156) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V156)) end end end(E437)); {'Idris.TTImp.TTImp.IPrimVal', E439, E440} -> (fun (V157, V158) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E441, E442} -> (fun (V159, V160) -> ('case--getMatch-4071'(V158, V157, V160, V159, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V158, V160)))) end(E441, E442)); _ -> fun (V161) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V161)) end end end(E439, E440)); _ -> fun (V162) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V162)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E374, E375, E376, E377} -> (fun (V163, V164, V165, V166) -> fun (V167) -> ('un--matchFail'('erased', V163, V167)) end end(E374, E375, E376, E377)); {'Idris.TTImp.TTImp.IAutoApp', E378, E379, E380} -> (fun (V168, V169, V170) -> fun (V171) -> ('un--matchFail'('erased', V168, V171)) end end(E378, E379, E380)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E342, E343, E344} -> (fun (V172, V173, V174) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E355, E356, E357} -> (fun (V175, V176, V177) -> ('un--matchAny'(V172, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V174, V177)))) end(E355, E356, E357)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E351, E352, E353, E354} -> (fun (V178, V179, V180, V181) -> ('un--getMatch'(V0, V1, V181)) end(E351, E352, E353, E354)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E345} -> (fun (V182) -> case V2 of {'Idris.TTImp.TTImp.IType', E346} -> (fun (V183) -> fun (V184) -> {'Idris.Prelude.Types.Right', []} end end(E346)); _ -> fun (V185) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V185)) end end end(E345)); {'Idris.TTImp.TTImp.IPrimVal', E347, E348} -> (fun (V186, V187) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E349, E350} -> (fun (V188, V189) -> ('case--getMatch-4071'(V187, V186, V189, V188, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V187, V189)))) end(E349, E350)); _ -> fun (V190) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V190)) end end end(E347, E348)); _ -> fun (V191) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V191)) end end end end end(E342, E343, E344)); {'Idris.TTImp.TTImp.IAs', E358, E359, E360, E361} -> (fun (V192, V193, V194, V195) -> case V194 of {'Idris.Core.Name.UN', E362} -> (fun (V196) -> case V2 of {'Idris.TTImp.TTImp.IAs', E365, E366, E367, E368} -> (fun (V197, V198, V199, V200) -> case V199 of {'Idris.Core.Name.UN', E371} -> (fun (V201) -> fun (V202) -> begin (V203 = (('un--getMatch'(V0, V195, V200))(V202))), case V203 of {'Idris.Prelude.Types.Left', E372} -> (fun (V204) -> {'Idris.Prelude.Types.Left', V204} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V205) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V196, {'Idris.TTImp.TTImp.IBindVar', V197, V201}} | V205]))(V202)) end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E371)); _ -> fun (V206) -> begin (V207 = (('un--getMatch'(V0, V195, V2))(V206))), case V207 of {'Idris.Prelude.Types.Left', E369} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E369)); {'Idris.Prelude.Types.Right', E370} -> (fun (V209) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V196, V2} | V209]))(V206)) end(E370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E365, E366, E367, E368)); _ -> fun (V210) -> begin (V211 = (('un--getMatch'(V0, V195, V2))(V210))), case V211 of {'Idris.Prelude.Types.Left', E363} -> (fun (V212) -> {'Idris.Prelude.Types.Left', V212} end(E363)); {'Idris.Prelude.Types.Right', E364} -> (fun (V213) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V196, V2} | V213]))(V210)) end(E364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E362)); _ -> ('un--getMatch'(V0, V195, V2)) end end(E358, E359, E360, E361)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E338, E339, E340, E341} -> (fun (V214, V215, V216, V217) -> ('un--getMatch'(V0, V1, V217)) end(E338, E339, E340, E341)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E332} -> (fun (V218) -> case V2 of {'Idris.TTImp.TTImp.IType', E333} -> (fun (V219) -> fun (V220) -> {'Idris.Prelude.Types.Right', []} end end(E333)); _ -> fun (V221) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V221)) end end end(E332)); {'Idris.TTImp.TTImp.IPrimVal', E334, E335} -> (fun (V222, V223) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E336, E337} -> (fun (V224, V225) -> ('case--getMatch-4071'(V223, V222, V225, V224, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V223, V225)))) end(E336, E337)); _ -> fun (V226) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V226)) end end end(E334, E335)); _ -> fun (V227) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V227)) end end end end end end end end end(E330, E331)); _ -> case V2 of {'Idris.TTImp.TTImp.IVar', E328, E329} -> (fun (V228, V229) -> ('case--getMatch-3676'(V9, V10, V229, V228, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V10, V229)))) end(E328, E329)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E265, E266, E267, E268} -> (fun (V230, V231, V232, V233) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V231, V2} | [{'Idris.Builtin.MkPair', V233, V233} | []]])) end(E265, E266, E267, E268)); {'Idris.TTImp.TTImp.IAutoApp', E269, E270, E271} -> (fun (V234, V235, V236) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V235, V2} | [{'Idris.Builtin.MkPair', V236, V236} | []]])) end(E269, E270, E271)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E258, E259, E260, E261} -> (fun (V237, V238, V239, V240) -> fun (V241) -> ('un--matchFail'('erased', V237, V241)) end end(E258, E259, E260, E261)); {'Idris.TTImp.TTImp.IAutoApp', E262, E263, E264} -> (fun (V242, V243, V244) -> fun (V245) -> ('un--matchFail'('erased', V242, V245)) end end(E262, E263, E264)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E226, E227, E228} -> (fun (V246, V247, V248) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E239, E240, E241} -> (fun (V249, V250, V251) -> ('un--matchAny'(V246, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V248, V251)))) end(E239, E240, E241)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E235, E236, E237, E238} -> (fun (V252, V253, V254, V255) -> ('un--getMatch'(V0, V1, V255)) end(E235, E236, E237, E238)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E229} -> (fun (V256) -> case V2 of {'Idris.TTImp.TTImp.IType', E230} -> (fun (V257) -> fun (V258) -> {'Idris.Prelude.Types.Right', []} end end(E230)); _ -> fun (V259) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V259)) end end end(E229)); {'Idris.TTImp.TTImp.IPrimVal', E231, E232} -> (fun (V260, V261) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E233, E234} -> (fun (V262, V263) -> ('case--getMatch-4071'(V261, V260, V263, V262, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V261, V263)))) end(E233, E234)); _ -> fun (V264) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V264)) end end end(E231, E232)); _ -> fun (V265) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V265)) end end end end end(E226, E227, E228)); {'Idris.TTImp.TTImp.IAs', E242, E243, E244, E245} -> (fun (V266, V267, V268, V269) -> case V268 of {'Idris.Core.Name.UN', E246} -> (fun (V270) -> case V2 of {'Idris.TTImp.TTImp.IAs', E249, E250, E251, E252} -> (fun (V271, V272, V273, V274) -> case V273 of {'Idris.Core.Name.UN', E255} -> (fun (V275) -> fun (V276) -> begin (V277 = (('un--getMatch'(V0, V269, V274))(V276))), case V277 of {'Idris.Prelude.Types.Left', E256} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V279) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V270, {'Idris.TTImp.TTImp.IBindVar', V271, V275}} | V279]))(V276)) end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E255)); _ -> fun (V280) -> begin (V281 = (('un--getMatch'(V0, V269, V2))(V280))), case V281 of {'Idris.Prelude.Types.Left', E253} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E253)); {'Idris.Prelude.Types.Right', E254} -> (fun (V283) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V270, V2} | V283]))(V280)) end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E249, E250, E251, E252)); _ -> fun (V284) -> begin (V285 = (('un--getMatch'(V0, V269, V2))(V284))), case V285 of {'Idris.Prelude.Types.Left', E247} -> (fun (V286) -> {'Idris.Prelude.Types.Left', V286} end(E247)); {'Idris.Prelude.Types.Right', E248} -> (fun (V287) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V270, V2} | V287]))(V284)) end(E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E246)); _ -> ('un--getMatch'(V0, V269, V2)) end end(E242, E243, E244, E245)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E222, E223, E224, E225} -> (fun (V288, V289, V290, V291) -> ('un--getMatch'(V0, V1, V291)) end(E222, E223, E224, E225)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E216} -> (fun (V292) -> case V2 of {'Idris.TTImp.TTImp.IType', E217} -> (fun (V293) -> fun (V294) -> {'Idris.Prelude.Types.Right', []} end end(E217)); _ -> fun (V295) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V295)) end end end(E216)); {'Idris.TTImp.TTImp.IPrimVal', E218, E219} -> (fun (V296, V297) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E220, E221} -> (fun (V298, V299) -> ('case--getMatch-4071'(V297, V296, V299, V298, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V297, V299)))) end(E220, E221)); _ -> fun (V300) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V300)) end end end(E218, E219)); _ -> fun (V301) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V301)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E321, E322, E323, E324} -> (fun (V302, V303, V304, V305) -> ('un--getMatch'(1, V303, V303)) end(E321, E322, E323, E324)); {'Idris.TTImp.TTImp.IAutoApp', E325, E326, E327} -> (fun (V306, V307, V308) -> ('un--getMatch'(1, V307, V307)) end(E325, E326, E327)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E314, E315, E316, E317} -> (fun (V309, V310, V311, V312) -> fun (V313) -> ('un--matchFail'('erased', V309, V313)) end end(E314, E315, E316, E317)); {'Idris.TTImp.TTImp.IAutoApp', E318, E319, E320} -> (fun (V314, V315, V316) -> fun (V317) -> ('un--matchFail'('erased', V314, V317)) end end(E318, E319, E320)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E282, E283, E284} -> (fun (V318, V319, V320) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E295, E296, E297} -> (fun (V321, V322, V323) -> ('un--matchAny'(V318, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V320, V323)))) end(E295, E296, E297)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E291, E292, E293, E294} -> (fun (V324, V325, V326, V327) -> ('un--getMatch'(V0, V1, V327)) end(E291, E292, E293, E294)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E285} -> (fun (V328) -> case V2 of {'Idris.TTImp.TTImp.IType', E286} -> (fun (V329) -> fun (V330) -> {'Idris.Prelude.Types.Right', []} end end(E286)); _ -> fun (V331) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V331)) end end end(E285)); {'Idris.TTImp.TTImp.IPrimVal', E287, E288} -> (fun (V332, V333) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E289, E290} -> (fun (V334, V335) -> ('case--getMatch-4071'(V333, V332, V335, V334, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V333, V335)))) end(E289, E290)); _ -> fun (V336) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V336)) end end end(E287, E288)); _ -> fun (V337) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V337)) end end end end end(E282, E283, E284)); {'Idris.TTImp.TTImp.IAs', E298, E299, E300, E301} -> (fun (V338, V339, V340, V341) -> case V340 of {'Idris.Core.Name.UN', E302} -> (fun (V342) -> case V2 of {'Idris.TTImp.TTImp.IAs', E305, E306, E307, E308} -> (fun (V343, V344, V345, V346) -> case V345 of {'Idris.Core.Name.UN', E311} -> (fun (V347) -> fun (V348) -> begin (V349 = (('un--getMatch'(V0, V341, V346))(V348))), case V349 of {'Idris.Prelude.Types.Left', E312} -> (fun (V350) -> {'Idris.Prelude.Types.Left', V350} end(E312)); {'Idris.Prelude.Types.Right', E313} -> (fun (V351) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V342, {'Idris.TTImp.TTImp.IBindVar', V343, V347}} | V351]))(V348)) end(E313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E311)); _ -> fun (V352) -> begin (V353 = (('un--getMatch'(V0, V341, V2))(V352))), case V353 of {'Idris.Prelude.Types.Left', E309} -> (fun (V354) -> {'Idris.Prelude.Types.Left', V354} end(E309)); {'Idris.Prelude.Types.Right', E310} -> (fun (V355) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V342, V2} | V355]))(V352)) end(E310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E305, E306, E307, E308)); _ -> fun (V356) -> begin (V357 = (('un--getMatch'(V0, V341, V2))(V356))), case V357 of {'Idris.Prelude.Types.Left', E303} -> (fun (V358) -> {'Idris.Prelude.Types.Left', V358} end(E303)); {'Idris.Prelude.Types.Right', E304} -> (fun (V359) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V342, V2} | V359]))(V356)) end(E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E302)); _ -> ('un--getMatch'(V0, V341, V2)) end end(E298, E299, E300, E301)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E278, E279, E280, E281} -> (fun (V360, V361, V362, V363) -> ('un--getMatch'(V0, V1, V363)) end(E278, E279, E280, E281)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E272} -> (fun (V364) -> case V2 of {'Idris.TTImp.TTImp.IType', E273} -> (fun (V365) -> fun (V366) -> {'Idris.Prelude.Types.Right', []} end end(E273)); _ -> fun (V367) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V367)) end end end(E272)); {'Idris.TTImp.TTImp.IPrimVal', E274, E275} -> (fun (V368, V369) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E276, E277} -> (fun (V370, V371) -> ('case--getMatch-4071'(V369, V368, V371, V370, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V369, V371)))) end(E276, E277)); _ -> fun (V372) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V372)) end end end(E274, E275)); _ -> fun (V373) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V373)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E209, E210, E211, E212} -> (fun (V374, V375, V376, V377) -> fun (V378) -> ('un--matchFail'('erased', V374, V378)) end end(E209, E210, E211, E212)); {'Idris.TTImp.TTImp.IAutoApp', E213, E214, E215} -> (fun (V379, V380, V381) -> fun (V382) -> ('un--matchFail'('erased', V379, V382)) end end(E213, E214, E215)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E177, E178, E179} -> (fun (V383, V384, V385) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E190, E191, E192} -> (fun (V386, V387, V388) -> ('un--matchAny'(V383, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V385, V388)))) end(E190, E191, E192)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E186, E187, E188, E189} -> (fun (V389, V390, V391, V392) -> ('un--getMatch'(V0, V1, V392)) end(E186, E187, E188, E189)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E180} -> (fun (V393) -> case V2 of {'Idris.TTImp.TTImp.IType', E181} -> (fun (V394) -> fun (V395) -> {'Idris.Prelude.Types.Right', []} end end(E181)); _ -> fun (V396) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V396)) end end end(E180)); {'Idris.TTImp.TTImp.IPrimVal', E182, E183} -> (fun (V397, V398) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E184, E185} -> (fun (V399, V400) -> ('case--getMatch-4071'(V398, V397, V400, V399, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V398, V400)))) end(E184, E185)); _ -> fun (V401) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V401)) end end end(E182, E183)); _ -> fun (V402) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V402)) end end end end end(E177, E178, E179)); {'Idris.TTImp.TTImp.IAs', E193, E194, E195, E196} -> (fun (V403, V404, V405, V406) -> case V405 of {'Idris.Core.Name.UN', E197} -> (fun (V407) -> case V2 of {'Idris.TTImp.TTImp.IAs', E200, E201, E202, E203} -> (fun (V408, V409, V410, V411) -> case V410 of {'Idris.Core.Name.UN', E206} -> (fun (V412) -> fun (V413) -> begin (V414 = (('un--getMatch'(V0, V406, V411))(V413))), case V414 of {'Idris.Prelude.Types.Left', E207} -> (fun (V415) -> {'Idris.Prelude.Types.Left', V415} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V416) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V407, {'Idris.TTImp.TTImp.IBindVar', V408, V412}} | V416]))(V413)) end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E206)); _ -> fun (V417) -> begin (V418 = (('un--getMatch'(V0, V406, V2))(V417))), case V418 of {'Idris.Prelude.Types.Left', E204} -> (fun (V419) -> {'Idris.Prelude.Types.Left', V419} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V420) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V407, V2} | V420]))(V417)) end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E200, E201, E202, E203)); _ -> fun (V421) -> begin (V422 = (('un--getMatch'(V0, V406, V2))(V421))), case V422 of {'Idris.Prelude.Types.Left', E198} -> (fun (V423) -> {'Idris.Prelude.Types.Left', V423} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V424) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V407, V2} | V424]))(V421)) end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E197)); _ -> ('un--getMatch'(V0, V406, V2)) end end(E193, E194, E195, E196)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E173, E174, E175, E176} -> (fun (V425, V426, V427, V428) -> ('un--getMatch'(V0, V1, V428)) end(E173, E174, E175, E176)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E167} -> (fun (V429) -> case V2 of {'Idris.TTImp.TTImp.IType', E168} -> (fun (V430) -> fun (V431) -> {'Idris.Prelude.Types.Right', []} end end(E168)); _ -> fun (V432) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V432)) end end end(E167)); {'Idris.TTImp.TTImp.IPrimVal', E169, E170} -> (fun (V433, V434) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E171, E172} -> (fun (V435, V436) -> ('case--getMatch-4071'(V434, V433, V436, V435, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V434, V436)))) end(E171, E172)); _ -> fun (V437) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V437)) end end end(E169, E170)); _ -> fun (V438) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V438)) end end end end end end end end end(E165, E166)); {'Idris.TTImp.TTImp.IPi', E499, E500, E501, E502, E503, E504} -> (fun (V439, V440, V441, V442, V443, V444) -> case V2 of {'Idris.TTImp.TTImp.IPi', E666, E667, E668, E669, E670, E671} -> (fun (V445, V446, V447, V448, V449, V450) -> ('case--getMatch-3748'(V439, V444, V443, V442, V441, V440, V450, V449, V448, V447, V446, V445, V0, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq__ZeroOneOmega'(V440, V446)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--&&'(('nested--5948-3707--in--un--samePiInfo'(V439, V444, V443, V442, V441, V440, V450, V449, V448, V447, V446, V445, V0, V441, V447)), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq__(Maybe $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V451) -> fun (V452) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V451, V452)) end end, fun (V453) -> fun (V454) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq__Name'(V453, V454)) end end}, V442, V448)) end)) end)))) end(E666, E667, E668, E669, E670, E671)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E603, E604, E605, E606} -> (fun (V455, V456, V457, V458) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V456, V2} | [{'Idris.Builtin.MkPair', V458, V458} | []]])) end(E603, E604, E605, E606)); {'Idris.TTImp.TTImp.IAutoApp', E607, E608, E609} -> (fun (V459, V460, V461) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V460, V2} | [{'Idris.Builtin.MkPair', V461, V461} | []]])) end(E607, E608, E609)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E596, E597, E598, E599} -> (fun (V462, V463, V464, V465) -> fun (V466) -> ('un--matchFail'('erased', V462, V466)) end end(E596, E597, E598, E599)); {'Idris.TTImp.TTImp.IAutoApp', E600, E601, E602} -> (fun (V467, V468, V469) -> fun (V470) -> ('un--matchFail'('erased', V467, V470)) end end(E600, E601, E602)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E564, E565, E566} -> (fun (V471, V472, V473) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E577, E578, E579} -> (fun (V474, V475, V476) -> ('un--matchAny'(V471, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V473, V476)))) end(E577, E578, E579)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E573, E574, E575, E576} -> (fun (V477, V478, V479, V480) -> ('un--getMatch'(V0, V1, V480)) end(E573, E574, E575, E576)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E567} -> (fun (V481) -> case V2 of {'Idris.TTImp.TTImp.IType', E568} -> (fun (V482) -> fun (V483) -> {'Idris.Prelude.Types.Right', []} end end(E568)); _ -> fun (V484) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V484)) end end end(E567)); {'Idris.TTImp.TTImp.IPrimVal', E569, E570} -> (fun (V485, V486) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E571, E572} -> (fun (V487, V488) -> ('case--getMatch-4071'(V486, V485, V488, V487, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V486, V488)))) end(E571, E572)); _ -> fun (V489) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V489)) end end end(E569, E570)); _ -> fun (V490) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V490)) end end end end end(E564, E565, E566)); {'Idris.TTImp.TTImp.IAs', E580, E581, E582, E583} -> (fun (V491, V492, V493, V494) -> case V493 of {'Idris.Core.Name.UN', E584} -> (fun (V495) -> case V2 of {'Idris.TTImp.TTImp.IAs', E587, E588, E589, E590} -> (fun (V496, V497, V498, V499) -> case V498 of {'Idris.Core.Name.UN', E593} -> (fun (V500) -> fun (V501) -> begin (V502 = (('un--getMatch'(V0, V494, V499))(V501))), case V502 of {'Idris.Prelude.Types.Left', E594} -> (fun (V503) -> {'Idris.Prelude.Types.Left', V503} end(E594)); {'Idris.Prelude.Types.Right', E595} -> (fun (V504) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V495, {'Idris.TTImp.TTImp.IBindVar', V496, V500}} | V504]))(V501)) end(E595)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E593)); _ -> fun (V505) -> begin (V506 = (('un--getMatch'(V0, V494, V2))(V505))), case V506 of {'Idris.Prelude.Types.Left', E591} -> (fun (V507) -> {'Idris.Prelude.Types.Left', V507} end(E591)); {'Idris.Prelude.Types.Right', E592} -> (fun (V508) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V495, V2} | V508]))(V505)) end(E592)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E587, E588, E589, E590)); _ -> fun (V509) -> begin (V510 = (('un--getMatch'(V0, V494, V2))(V509))), case V510 of {'Idris.Prelude.Types.Left', E585} -> (fun (V511) -> {'Idris.Prelude.Types.Left', V511} end(E585)); {'Idris.Prelude.Types.Right', E586} -> (fun (V512) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V495, V2} | V512]))(V509)) end(E586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E584)); _ -> ('un--getMatch'(V0, V494, V2)) end end(E580, E581, E582, E583)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E560, E561, E562, E563} -> (fun (V513, V514, V515, V516) -> ('un--getMatch'(V0, V1, V516)) end(E560, E561, E562, E563)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E554} -> (fun (V517) -> case V2 of {'Idris.TTImp.TTImp.IType', E555} -> (fun (V518) -> fun (V519) -> {'Idris.Prelude.Types.Right', []} end end(E555)); _ -> fun (V520) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V520)) end end end(E554)); {'Idris.TTImp.TTImp.IPrimVal', E556, E557} -> (fun (V521, V522) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E558, E559} -> (fun (V523, V524) -> ('case--getMatch-4071'(V522, V521, V524, V523, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V522, V524)))) end(E558, E559)); _ -> fun (V525) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V525)) end end end(E556, E557)); _ -> fun (V526) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V526)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E659, E660, E661, E662} -> (fun (V527, V528, V529, V530) -> ('un--getMatch'(1, V528, V528)) end(E659, E660, E661, E662)); {'Idris.TTImp.TTImp.IAutoApp', E663, E664, E665} -> (fun (V531, V532, V533) -> ('un--getMatch'(1, V532, V532)) end(E663, E664, E665)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E652, E653, E654, E655} -> (fun (V534, V535, V536, V537) -> fun (V538) -> ('un--matchFail'('erased', V534, V538)) end end(E652, E653, E654, E655)); {'Idris.TTImp.TTImp.IAutoApp', E656, E657, E658} -> (fun (V539, V540, V541) -> fun (V542) -> ('un--matchFail'('erased', V539, V542)) end end(E656, E657, E658)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E620, E621, E622} -> (fun (V543, V544, V545) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E633, E634, E635} -> (fun (V546, V547, V548) -> ('un--matchAny'(V543, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V545, V548)))) end(E633, E634, E635)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E629, E630, E631, E632} -> (fun (V549, V550, V551, V552) -> ('un--getMatch'(V0, V1, V552)) end(E629, E630, E631, E632)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E623} -> (fun (V553) -> case V2 of {'Idris.TTImp.TTImp.IType', E624} -> (fun (V554) -> fun (V555) -> {'Idris.Prelude.Types.Right', []} end end(E624)); _ -> fun (V556) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V556)) end end end(E623)); {'Idris.TTImp.TTImp.IPrimVal', E625, E626} -> (fun (V557, V558) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E627, E628} -> (fun (V559, V560) -> ('case--getMatch-4071'(V558, V557, V560, V559, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V558, V560)))) end(E627, E628)); _ -> fun (V561) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V561)) end end end(E625, E626)); _ -> fun (V562) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V562)) end end end end end(E620, E621, E622)); {'Idris.TTImp.TTImp.IAs', E636, E637, E638, E639} -> (fun (V563, V564, V565, V566) -> case V565 of {'Idris.Core.Name.UN', E640} -> (fun (V567) -> case V2 of {'Idris.TTImp.TTImp.IAs', E643, E644, E645, E646} -> (fun (V568, V569, V570, V571) -> case V570 of {'Idris.Core.Name.UN', E649} -> (fun (V572) -> fun (V573) -> begin (V574 = (('un--getMatch'(V0, V566, V571))(V573))), case V574 of {'Idris.Prelude.Types.Left', E650} -> (fun (V575) -> {'Idris.Prelude.Types.Left', V575} end(E650)); {'Idris.Prelude.Types.Right', E651} -> (fun (V576) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V567, {'Idris.TTImp.TTImp.IBindVar', V568, V572}} | V576]))(V573)) end(E651)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E649)); _ -> fun (V577) -> begin (V578 = (('un--getMatch'(V0, V566, V2))(V577))), case V578 of {'Idris.Prelude.Types.Left', E647} -> (fun (V579) -> {'Idris.Prelude.Types.Left', V579} end(E647)); {'Idris.Prelude.Types.Right', E648} -> (fun (V580) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V567, V2} | V580]))(V577)) end(E648)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E643, E644, E645, E646)); _ -> fun (V581) -> begin (V582 = (('un--getMatch'(V0, V566, V2))(V581))), case V582 of {'Idris.Prelude.Types.Left', E641} -> (fun (V583) -> {'Idris.Prelude.Types.Left', V583} end(E641)); {'Idris.Prelude.Types.Right', E642} -> (fun (V584) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V567, V2} | V584]))(V581)) end(E642)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E640)); _ -> ('un--getMatch'(V0, V566, V2)) end end(E636, E637, E638, E639)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E616, E617, E618, E619} -> (fun (V585, V586, V587, V588) -> ('un--getMatch'(V0, V1, V588)) end(E616, E617, E618, E619)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E610} -> (fun (V589) -> case V2 of {'Idris.TTImp.TTImp.IType', E611} -> (fun (V590) -> fun (V591) -> {'Idris.Prelude.Types.Right', []} end end(E611)); _ -> fun (V592) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V592)) end end end(E610)); {'Idris.TTImp.TTImp.IPrimVal', E612, E613} -> (fun (V593, V594) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E614, E615} -> (fun (V595, V596) -> ('case--getMatch-4071'(V594, V593, V596, V595, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V594, V596)))) end(E614, E615)); _ -> fun (V597) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V597)) end end end(E612, E613)); _ -> fun (V598) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V598)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E547, E548, E549, E550} -> (fun (V599, V600, V601, V602) -> fun (V603) -> ('un--matchFail'('erased', V599, V603)) end end(E547, E548, E549, E550)); {'Idris.TTImp.TTImp.IAutoApp', E551, E552, E553} -> (fun (V604, V605, V606) -> fun (V607) -> ('un--matchFail'('erased', V604, V607)) end end(E551, E552, E553)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E515, E516, E517} -> (fun (V608, V609, V610) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E528, E529, E530} -> (fun (V611, V612, V613) -> ('un--matchAny'(V608, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V610, V613)))) end(E528, E529, E530)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E524, E525, E526, E527} -> (fun (V614, V615, V616, V617) -> ('un--getMatch'(V0, V1, V617)) end(E524, E525, E526, E527)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E518} -> (fun (V618) -> case V2 of {'Idris.TTImp.TTImp.IType', E519} -> (fun (V619) -> fun (V620) -> {'Idris.Prelude.Types.Right', []} end end(E519)); _ -> fun (V621) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V621)) end end end(E518)); {'Idris.TTImp.TTImp.IPrimVal', E520, E521} -> (fun (V622, V623) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E522, E523} -> (fun (V624, V625) -> ('case--getMatch-4071'(V623, V622, V625, V624, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V623, V625)))) end(E522, E523)); _ -> fun (V626) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V626)) end end end(E520, E521)); _ -> fun (V627) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V627)) end end end end end(E515, E516, E517)); {'Idris.TTImp.TTImp.IAs', E531, E532, E533, E534} -> (fun (V628, V629, V630, V631) -> case V630 of {'Idris.Core.Name.UN', E535} -> (fun (V632) -> case V2 of {'Idris.TTImp.TTImp.IAs', E538, E539, E540, E541} -> (fun (V633, V634, V635, V636) -> case V635 of {'Idris.Core.Name.UN', E544} -> (fun (V637) -> fun (V638) -> begin (V639 = (('un--getMatch'(V0, V631, V636))(V638))), case V639 of {'Idris.Prelude.Types.Left', E545} -> (fun (V640) -> {'Idris.Prelude.Types.Left', V640} end(E545)); {'Idris.Prelude.Types.Right', E546} -> (fun (V641) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V632, {'Idris.TTImp.TTImp.IBindVar', V633, V637}} | V641]))(V638)) end(E546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E544)); _ -> fun (V642) -> begin (V643 = (('un--getMatch'(V0, V631, V2))(V642))), case V643 of {'Idris.Prelude.Types.Left', E542} -> (fun (V644) -> {'Idris.Prelude.Types.Left', V644} end(E542)); {'Idris.Prelude.Types.Right', E543} -> (fun (V645) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V632, V2} | V645]))(V642)) end(E543)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E538, E539, E540, E541)); _ -> fun (V646) -> begin (V647 = (('un--getMatch'(V0, V631, V2))(V646))), case V647 of {'Idris.Prelude.Types.Left', E536} -> (fun (V648) -> {'Idris.Prelude.Types.Left', V648} end(E536)); {'Idris.Prelude.Types.Right', E537} -> (fun (V649) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V632, V2} | V649]))(V646)) end(E537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E535)); _ -> ('un--getMatch'(V0, V631, V2)) end end(E531, E532, E533, E534)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E511, E512, E513, E514} -> (fun (V650, V651, V652, V653) -> ('un--getMatch'(V0, V1, V653)) end(E511, E512, E513, E514)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E505} -> (fun (V654) -> case V2 of {'Idris.TTImp.TTImp.IType', E506} -> (fun (V655) -> fun (V656) -> {'Idris.Prelude.Types.Right', []} end end(E506)); _ -> fun (V657) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V657)) end end end(E505)); {'Idris.TTImp.TTImp.IPrimVal', E507, E508} -> (fun (V658, V659) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E509, E510} -> (fun (V660, V661) -> ('case--getMatch-4071'(V659, V658, V661, V660, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V659, V661)))) end(E509, E510)); _ -> fun (V662) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V662)) end end end(E507, E508)); _ -> fun (V663) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V663)) end end end end end end end end(E499, E500, E501, E502, E503, E504)); {'Idris.TTImp.TTImp.IApp', E672, E673, E674} -> (fun (V664, V665, V666) -> case V2 of {'Idris.TTImp.TTImp.IApp', E836, E837, E838} -> (fun (V667, V668, V669) -> ('un--matchAll'(V0, [{'Idris.Builtin.MkPair', V665, V668} | [{'Idris.Builtin.MkPair', V666, V669} | []]])) end(E836, E837, E838)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E773, E774, E775, E776} -> (fun (V670, V671, V672, V673) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V671, V2} | [{'Idris.Builtin.MkPair', V673, V673} | []]])) end(E773, E774, E775, E776)); {'Idris.TTImp.TTImp.IAutoApp', E777, E778, E779} -> (fun (V674, V675, V676) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V675, V2} | [{'Idris.Builtin.MkPair', V676, V676} | []]])) end(E777, E778, E779)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E766, E767, E768, E769} -> (fun (V677, V678, V679, V680) -> fun (V681) -> ('un--matchFail'('erased', V677, V681)) end end(E766, E767, E768, E769)); {'Idris.TTImp.TTImp.IAutoApp', E770, E771, E772} -> (fun (V682, V683, V684) -> fun (V685) -> ('un--matchFail'('erased', V682, V685)) end end(E770, E771, E772)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E734, E735, E736} -> (fun (V686, V687, V688) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E747, E748, E749} -> (fun (V689, V690, V691) -> ('un--matchAny'(V686, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V688, V691)))) end(E747, E748, E749)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E743, E744, E745, E746} -> (fun (V692, V693, V694, V695) -> ('un--getMatch'(V0, V1, V695)) end(E743, E744, E745, E746)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E737} -> (fun (V696) -> case V2 of {'Idris.TTImp.TTImp.IType', E738} -> (fun (V697) -> fun (V698) -> {'Idris.Prelude.Types.Right', []} end end(E738)); _ -> fun (V699) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V699)) end end end(E737)); {'Idris.TTImp.TTImp.IPrimVal', E739, E740} -> (fun (V700, V701) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E741, E742} -> (fun (V702, V703) -> ('case--getMatch-4071'(V701, V700, V703, V702, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V701, V703)))) end(E741, E742)); _ -> fun (V704) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V704)) end end end(E739, E740)); _ -> fun (V705) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V705)) end end end end end(E734, E735, E736)); {'Idris.TTImp.TTImp.IAs', E750, E751, E752, E753} -> (fun (V706, V707, V708, V709) -> case V708 of {'Idris.Core.Name.UN', E754} -> (fun (V710) -> case V2 of {'Idris.TTImp.TTImp.IAs', E757, E758, E759, E760} -> (fun (V711, V712, V713, V714) -> case V713 of {'Idris.Core.Name.UN', E763} -> (fun (V715) -> fun (V716) -> begin (V717 = (('un--getMatch'(V0, V709, V714))(V716))), case V717 of {'Idris.Prelude.Types.Left', E764} -> (fun (V718) -> {'Idris.Prelude.Types.Left', V718} end(E764)); {'Idris.Prelude.Types.Right', E765} -> (fun (V719) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V710, {'Idris.TTImp.TTImp.IBindVar', V711, V715}} | V719]))(V716)) end(E765)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E763)); _ -> fun (V720) -> begin (V721 = (('un--getMatch'(V0, V709, V2))(V720))), case V721 of {'Idris.Prelude.Types.Left', E761} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E761)); {'Idris.Prelude.Types.Right', E762} -> (fun (V723) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V710, V2} | V723]))(V720)) end(E762)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E757, E758, E759, E760)); _ -> fun (V724) -> begin (V725 = (('un--getMatch'(V0, V709, V2))(V724))), case V725 of {'Idris.Prelude.Types.Left', E755} -> (fun (V726) -> {'Idris.Prelude.Types.Left', V726} end(E755)); {'Idris.Prelude.Types.Right', E756} -> (fun (V727) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V710, V2} | V727]))(V724)) end(E756)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E754)); _ -> ('un--getMatch'(V0, V709, V2)) end end(E750, E751, E752, E753)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E730, E731, E732, E733} -> (fun (V728, V729, V730, V731) -> ('un--getMatch'(V0, V1, V731)) end(E730, E731, E732, E733)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E724} -> (fun (V732) -> case V2 of {'Idris.TTImp.TTImp.IType', E725} -> (fun (V733) -> fun (V734) -> {'Idris.Prelude.Types.Right', []} end end(E725)); _ -> fun (V735) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V735)) end end end(E724)); {'Idris.TTImp.TTImp.IPrimVal', E726, E727} -> (fun (V736, V737) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E728, E729} -> (fun (V738, V739) -> ('case--getMatch-4071'(V737, V736, V739, V738, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V737, V739)))) end(E728, E729)); _ -> fun (V740) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V740)) end end end(E726, E727)); _ -> fun (V741) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V741)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E829, E830, E831, E832} -> (fun (V742, V743, V744, V745) -> ('un--getMatch'(1, V743, V743)) end(E829, E830, E831, E832)); {'Idris.TTImp.TTImp.IAutoApp', E833, E834, E835} -> (fun (V746, V747, V748) -> ('un--getMatch'(1, V747, V747)) end(E833, E834, E835)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E822, E823, E824, E825} -> (fun (V749, V750, V751, V752) -> fun (V753) -> ('un--matchFail'('erased', V749, V753)) end end(E822, E823, E824, E825)); {'Idris.TTImp.TTImp.IAutoApp', E826, E827, E828} -> (fun (V754, V755, V756) -> fun (V757) -> ('un--matchFail'('erased', V754, V757)) end end(E826, E827, E828)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E790, E791, E792} -> (fun (V758, V759, V760) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E803, E804, E805} -> (fun (V761, V762, V763) -> ('un--matchAny'(V758, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V760, V763)))) end(E803, E804, E805)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E799, E800, E801, E802} -> (fun (V764, V765, V766, V767) -> ('un--getMatch'(V0, V1, V767)) end(E799, E800, E801, E802)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E793} -> (fun (V768) -> case V2 of {'Idris.TTImp.TTImp.IType', E794} -> (fun (V769) -> fun (V770) -> {'Idris.Prelude.Types.Right', []} end end(E794)); _ -> fun (V771) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V771)) end end end(E793)); {'Idris.TTImp.TTImp.IPrimVal', E795, E796} -> (fun (V772, V773) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E797, E798} -> (fun (V774, V775) -> ('case--getMatch-4071'(V773, V772, V775, V774, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V773, V775)))) end(E797, E798)); _ -> fun (V776) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V776)) end end end(E795, E796)); _ -> fun (V777) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V777)) end end end end end(E790, E791, E792)); {'Idris.TTImp.TTImp.IAs', E806, E807, E808, E809} -> (fun (V778, V779, V780, V781) -> case V780 of {'Idris.Core.Name.UN', E810} -> (fun (V782) -> case V2 of {'Idris.TTImp.TTImp.IAs', E813, E814, E815, E816} -> (fun (V783, V784, V785, V786) -> case V785 of {'Idris.Core.Name.UN', E819} -> (fun (V787) -> fun (V788) -> begin (V789 = (('un--getMatch'(V0, V781, V786))(V788))), case V789 of {'Idris.Prelude.Types.Left', E820} -> (fun (V790) -> {'Idris.Prelude.Types.Left', V790} end(E820)); {'Idris.Prelude.Types.Right', E821} -> (fun (V791) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V782, {'Idris.TTImp.TTImp.IBindVar', V783, V787}} | V791]))(V788)) end(E821)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E819)); _ -> fun (V792) -> begin (V793 = (('un--getMatch'(V0, V781, V2))(V792))), case V793 of {'Idris.Prelude.Types.Left', E817} -> (fun (V794) -> {'Idris.Prelude.Types.Left', V794} end(E817)); {'Idris.Prelude.Types.Right', E818} -> (fun (V795) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V782, V2} | V795]))(V792)) end(E818)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E813, E814, E815, E816)); _ -> fun (V796) -> begin (V797 = (('un--getMatch'(V0, V781, V2))(V796))), case V797 of {'Idris.Prelude.Types.Left', E811} -> (fun (V798) -> {'Idris.Prelude.Types.Left', V798} end(E811)); {'Idris.Prelude.Types.Right', E812} -> (fun (V799) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V782, V2} | V799]))(V796)) end(E812)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E810)); _ -> ('un--getMatch'(V0, V781, V2)) end end(E806, E807, E808, E809)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E786, E787, E788, E789} -> (fun (V800, V801, V802, V803) -> ('un--getMatch'(V0, V1, V803)) end(E786, E787, E788, E789)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E780} -> (fun (V804) -> case V2 of {'Idris.TTImp.TTImp.IType', E781} -> (fun (V805) -> fun (V806) -> {'Idris.Prelude.Types.Right', []} end end(E781)); _ -> fun (V807) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V807)) end end end(E780)); {'Idris.TTImp.TTImp.IPrimVal', E782, E783} -> (fun (V808, V809) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E784, E785} -> (fun (V810, V811) -> ('case--getMatch-4071'(V809, V808, V811, V810, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V809, V811)))) end(E784, E785)); _ -> fun (V812) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V812)) end end end(E782, E783)); _ -> fun (V813) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V813)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E717, E718, E719, E720} -> (fun (V814, V815, V816, V817) -> fun (V818) -> ('un--matchFail'('erased', V814, V818)) end end(E717, E718, E719, E720)); {'Idris.TTImp.TTImp.IAutoApp', E721, E722, E723} -> (fun (V819, V820, V821) -> fun (V822) -> ('un--matchFail'('erased', V819, V822)) end end(E721, E722, E723)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E685, E686, E687} -> (fun (V823, V824, V825) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E698, E699, E700} -> (fun (V826, V827, V828) -> ('un--matchAny'(V823, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V825, V828)))) end(E698, E699, E700)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E694, E695, E696, E697} -> (fun (V829, V830, V831, V832) -> ('un--getMatch'(V0, V1, V832)) end(E694, E695, E696, E697)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E688} -> (fun (V833) -> case V2 of {'Idris.TTImp.TTImp.IType', E689} -> (fun (V834) -> fun (V835) -> {'Idris.Prelude.Types.Right', []} end end(E689)); _ -> fun (V836) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V836)) end end end(E688)); {'Idris.TTImp.TTImp.IPrimVal', E690, E691} -> (fun (V837, V838) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E692, E693} -> (fun (V839, V840) -> ('case--getMatch-4071'(V838, V837, V840, V839, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V838, V840)))) end(E692, E693)); _ -> fun (V841) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V841)) end end end(E690, E691)); _ -> fun (V842) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V842)) end end end end end(E685, E686, E687)); {'Idris.TTImp.TTImp.IAs', E701, E702, E703, E704} -> (fun (V843, V844, V845, V846) -> case V845 of {'Idris.Core.Name.UN', E705} -> (fun (V847) -> case V2 of {'Idris.TTImp.TTImp.IAs', E708, E709, E710, E711} -> (fun (V848, V849, V850, V851) -> case V850 of {'Idris.Core.Name.UN', E714} -> (fun (V852) -> fun (V853) -> begin (V854 = (('un--getMatch'(V0, V846, V851))(V853))), case V854 of {'Idris.Prelude.Types.Left', E715} -> (fun (V855) -> {'Idris.Prelude.Types.Left', V855} end(E715)); {'Idris.Prelude.Types.Right', E716} -> (fun (V856) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V847, {'Idris.TTImp.TTImp.IBindVar', V848, V852}} | V856]))(V853)) end(E716)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E714)); _ -> fun (V857) -> begin (V858 = (('un--getMatch'(V0, V846, V2))(V857))), case V858 of {'Idris.Prelude.Types.Left', E712} -> (fun (V859) -> {'Idris.Prelude.Types.Left', V859} end(E712)); {'Idris.Prelude.Types.Right', E713} -> (fun (V860) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V847, V2} | V860]))(V857)) end(E713)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E708, E709, E710, E711)); _ -> fun (V861) -> begin (V862 = (('un--getMatch'(V0, V846, V2))(V861))), case V862 of {'Idris.Prelude.Types.Left', E706} -> (fun (V863) -> {'Idris.Prelude.Types.Left', V863} end(E706)); {'Idris.Prelude.Types.Right', E707} -> (fun (V864) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V847, V2} | V864]))(V861)) end(E707)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E705)); _ -> ('un--getMatch'(V0, V846, V2)) end end(E701, E702, E703, E704)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E681, E682, E683, E684} -> (fun (V865, V866, V867, V868) -> ('un--getMatch'(V0, V1, V868)) end(E681, E682, E683, E684)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E675} -> (fun (V869) -> case V2 of {'Idris.TTImp.TTImp.IType', E676} -> (fun (V870) -> fun (V871) -> {'Idris.Prelude.Types.Right', []} end end(E676)); _ -> fun (V872) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V872)) end end end(E675)); {'Idris.TTImp.TTImp.IPrimVal', E677, E678} -> (fun (V873, V874) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E679, E680} -> (fun (V875, V876) -> ('case--getMatch-4071'(V874, V873, V876, V875, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V874, V876)))) end(E679, E680)); _ -> fun (V877) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V877)) end end end(E677, E678)); _ -> fun (V878) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V878)) end end end end end end end end(E672, E673, E674)); {'Idris.TTImp.TTImp.IAutoApp', E839, E840, E841} -> (fun (V879, V880, V881) -> case V2 of {'Idris.TTImp.TTImp.IAutoApp', E1003, E1004, E1005} -> (fun (V882, V883, V884) -> ('un--matchAll'(V0, [{'Idris.Builtin.MkPair', V880, V883} | [{'Idris.Builtin.MkPair', V881, V884} | []]])) end(E1003, E1004, E1005)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E940, E941, E942, E943} -> (fun (V885, V886, V887, V888) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V886, V2} | [{'Idris.Builtin.MkPair', V888, V888} | []]])) end(E940, E941, E942, E943)); {'Idris.TTImp.TTImp.IAutoApp', E944, E945, E946} -> (fun (V889, V890, V891) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V890, V2} | [{'Idris.Builtin.MkPair', V891, V891} | []]])) end(E944, E945, E946)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E933, E934, E935, E936} -> (fun (V892, V893, V894, V895) -> fun (V896) -> ('un--matchFail'('erased', V892, V896)) end end(E933, E934, E935, E936)); {'Idris.TTImp.TTImp.IAutoApp', E937, E938, E939} -> (fun (V897, V898, V899) -> fun (V900) -> ('un--matchFail'('erased', V897, V900)) end end(E937, E938, E939)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E901, E902, E903} -> (fun (V901, V902, V903) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E914, E915, E916} -> (fun (V904, V905, V906) -> ('un--matchAny'(V901, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V903, V906)))) end(E914, E915, E916)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E910, E911, E912, E913} -> (fun (V907, V908, V909, V910) -> ('un--getMatch'(V0, V1, V910)) end(E910, E911, E912, E913)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E904} -> (fun (V911) -> case V2 of {'Idris.TTImp.TTImp.IType', E905} -> (fun (V912) -> fun (V913) -> {'Idris.Prelude.Types.Right', []} end end(E905)); _ -> fun (V914) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V914)) end end end(E904)); {'Idris.TTImp.TTImp.IPrimVal', E906, E907} -> (fun (V915, V916) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E908, E909} -> (fun (V917, V918) -> ('case--getMatch-4071'(V916, V915, V918, V917, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V916, V918)))) end(E908, E909)); _ -> fun (V919) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V919)) end end end(E906, E907)); _ -> fun (V920) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V920)) end end end end end(E901, E902, E903)); {'Idris.TTImp.TTImp.IAs', E917, E918, E919, E920} -> (fun (V921, V922, V923, V924) -> case V923 of {'Idris.Core.Name.UN', E921} -> (fun (V925) -> case V2 of {'Idris.TTImp.TTImp.IAs', E924, E925, E926, E927} -> (fun (V926, V927, V928, V929) -> case V928 of {'Idris.Core.Name.UN', E930} -> (fun (V930) -> fun (V931) -> begin (V932 = (('un--getMatch'(V0, V924, V929))(V931))), case V932 of {'Idris.Prelude.Types.Left', E931} -> (fun (V933) -> {'Idris.Prelude.Types.Left', V933} end(E931)); {'Idris.Prelude.Types.Right', E932} -> (fun (V934) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V925, {'Idris.TTImp.TTImp.IBindVar', V926, V930}} | V934]))(V931)) end(E932)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E930)); _ -> fun (V935) -> begin (V936 = (('un--getMatch'(V0, V924, V2))(V935))), case V936 of {'Idris.Prelude.Types.Left', E928} -> (fun (V937) -> {'Idris.Prelude.Types.Left', V937} end(E928)); {'Idris.Prelude.Types.Right', E929} -> (fun (V938) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V925, V2} | V938]))(V935)) end(E929)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E924, E925, E926, E927)); _ -> fun (V939) -> begin (V940 = (('un--getMatch'(V0, V924, V2))(V939))), case V940 of {'Idris.Prelude.Types.Left', E922} -> (fun (V941) -> {'Idris.Prelude.Types.Left', V941} end(E922)); {'Idris.Prelude.Types.Right', E923} -> (fun (V942) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V925, V2} | V942]))(V939)) end(E923)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E921)); _ -> ('un--getMatch'(V0, V924, V2)) end end(E917, E918, E919, E920)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E897, E898, E899, E900} -> (fun (V943, V944, V945, V946) -> ('un--getMatch'(V0, V1, V946)) end(E897, E898, E899, E900)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E891} -> (fun (V947) -> case V2 of {'Idris.TTImp.TTImp.IType', E892} -> (fun (V948) -> fun (V949) -> {'Idris.Prelude.Types.Right', []} end end(E892)); _ -> fun (V950) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V950)) end end end(E891)); {'Idris.TTImp.TTImp.IPrimVal', E893, E894} -> (fun (V951, V952) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E895, E896} -> (fun (V953, V954) -> ('case--getMatch-4071'(V952, V951, V954, V953, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V952, V954)))) end(E895, E896)); _ -> fun (V955) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V955)) end end end(E893, E894)); _ -> fun (V956) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V956)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E996, E997, E998, E999} -> (fun (V957, V958, V959, V960) -> ('un--getMatch'(1, V958, V958)) end(E996, E997, E998, E999)); {'Idris.TTImp.TTImp.IAutoApp', E1000, E1001, E1002} -> (fun (V961, V962, V963) -> ('un--getMatch'(1, V962, V962)) end(E1000, E1001, E1002)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E989, E990, E991, E992} -> (fun (V964, V965, V966, V967) -> fun (V968) -> ('un--matchFail'('erased', V964, V968)) end end(E989, E990, E991, E992)); {'Idris.TTImp.TTImp.IAutoApp', E993, E994, E995} -> (fun (V969, V970, V971) -> fun (V972) -> ('un--matchFail'('erased', V969, V972)) end end(E993, E994, E995)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E957, E958, E959} -> (fun (V973, V974, V975) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E970, E971, E972} -> (fun (V976, V977, V978) -> ('un--matchAny'(V973, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V975, V978)))) end(E970, E971, E972)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E966, E967, E968, E969} -> (fun (V979, V980, V981, V982) -> ('un--getMatch'(V0, V1, V982)) end(E966, E967, E968, E969)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E960} -> (fun (V983) -> case V2 of {'Idris.TTImp.TTImp.IType', E961} -> (fun (V984) -> fun (V985) -> {'Idris.Prelude.Types.Right', []} end end(E961)); _ -> fun (V986) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V986)) end end end(E960)); {'Idris.TTImp.TTImp.IPrimVal', E962, E963} -> (fun (V987, V988) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E964, E965} -> (fun (V989, V990) -> ('case--getMatch-4071'(V988, V987, V990, V989, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V988, V990)))) end(E964, E965)); _ -> fun (V991) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V991)) end end end(E962, E963)); _ -> fun (V992) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V992)) end end end end end(E957, E958, E959)); {'Idris.TTImp.TTImp.IAs', E973, E974, E975, E976} -> (fun (V993, V994, V995, V996) -> case V995 of {'Idris.Core.Name.UN', E977} -> (fun (V997) -> case V2 of {'Idris.TTImp.TTImp.IAs', E980, E981, E982, E983} -> (fun (V998, V999, V1000, V1001) -> case V1000 of {'Idris.Core.Name.UN', E986} -> (fun (V1002) -> fun (V1003) -> begin (V1004 = (('un--getMatch'(V0, V996, V1001))(V1003))), case V1004 of {'Idris.Prelude.Types.Left', E987} -> (fun (V1005) -> {'Idris.Prelude.Types.Left', V1005} end(E987)); {'Idris.Prelude.Types.Right', E988} -> (fun (V1006) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V997, {'Idris.TTImp.TTImp.IBindVar', V998, V1002}} | V1006]))(V1003)) end(E988)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E986)); _ -> fun (V1007) -> begin (V1008 = (('un--getMatch'(V0, V996, V2))(V1007))), case V1008 of {'Idris.Prelude.Types.Left', E984} -> (fun (V1009) -> {'Idris.Prelude.Types.Left', V1009} end(E984)); {'Idris.Prelude.Types.Right', E985} -> (fun (V1010) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V997, V2} | V1010]))(V1007)) end(E985)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E980, E981, E982, E983)); _ -> fun (V1011) -> begin (V1012 = (('un--getMatch'(V0, V996, V2))(V1011))), case V1012 of {'Idris.Prelude.Types.Left', E978} -> (fun (V1013) -> {'Idris.Prelude.Types.Left', V1013} end(E978)); {'Idris.Prelude.Types.Right', E979} -> (fun (V1014) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V997, V2} | V1014]))(V1011)) end(E979)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E977)); _ -> ('un--getMatch'(V0, V996, V2)) end end(E973, E974, E975, E976)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E953, E954, E955, E956} -> (fun (V1015, V1016, V1017, V1018) -> ('un--getMatch'(V0, V1, V1018)) end(E953, E954, E955, E956)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E947} -> (fun (V1019) -> case V2 of {'Idris.TTImp.TTImp.IType', E948} -> (fun (V1020) -> fun (V1021) -> {'Idris.Prelude.Types.Right', []} end end(E948)); _ -> fun (V1022) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1022)) end end end(E947)); {'Idris.TTImp.TTImp.IPrimVal', E949, E950} -> (fun (V1023, V1024) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E951, E952} -> (fun (V1025, V1026) -> ('case--getMatch-4071'(V1024, V1023, V1026, V1025, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1024, V1026)))) end(E951, E952)); _ -> fun (V1027) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1027)) end end end(E949, E950)); _ -> fun (V1028) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1028)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E884, E885, E886, E887} -> (fun (V1029, V1030, V1031, V1032) -> fun (V1033) -> ('un--matchFail'('erased', V1029, V1033)) end end(E884, E885, E886, E887)); {'Idris.TTImp.TTImp.IAutoApp', E888, E889, E890} -> (fun (V1034, V1035, V1036) -> fun (V1037) -> ('un--matchFail'('erased', V1034, V1037)) end end(E888, E889, E890)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E852, E853, E854} -> (fun (V1038, V1039, V1040) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E865, E866, E867} -> (fun (V1041, V1042, V1043) -> ('un--matchAny'(V1038, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1040, V1043)))) end(E865, E866, E867)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E861, E862, E863, E864} -> (fun (V1044, V1045, V1046, V1047) -> ('un--getMatch'(V0, V1, V1047)) end(E861, E862, E863, E864)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E855} -> (fun (V1048) -> case V2 of {'Idris.TTImp.TTImp.IType', E856} -> (fun (V1049) -> fun (V1050) -> {'Idris.Prelude.Types.Right', []} end end(E856)); _ -> fun (V1051) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1051)) end end end(E855)); {'Idris.TTImp.TTImp.IPrimVal', E857, E858} -> (fun (V1052, V1053) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E859, E860} -> (fun (V1054, V1055) -> ('case--getMatch-4071'(V1053, V1052, V1055, V1054, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1053, V1055)))) end(E859, E860)); _ -> fun (V1056) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1056)) end end end(E857, E858)); _ -> fun (V1057) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1057)) end end end end end(E852, E853, E854)); {'Idris.TTImp.TTImp.IAs', E868, E869, E870, E871} -> (fun (V1058, V1059, V1060, V1061) -> case V1060 of {'Idris.Core.Name.UN', E872} -> (fun (V1062) -> case V2 of {'Idris.TTImp.TTImp.IAs', E875, E876, E877, E878} -> (fun (V1063, V1064, V1065, V1066) -> case V1065 of {'Idris.Core.Name.UN', E881} -> (fun (V1067) -> fun (V1068) -> begin (V1069 = (('un--getMatch'(V0, V1061, V1066))(V1068))), case V1069 of {'Idris.Prelude.Types.Left', E882} -> (fun (V1070) -> {'Idris.Prelude.Types.Left', V1070} end(E882)); {'Idris.Prelude.Types.Right', E883} -> (fun (V1071) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1062, {'Idris.TTImp.TTImp.IBindVar', V1063, V1067}} | V1071]))(V1068)) end(E883)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E881)); _ -> fun (V1072) -> begin (V1073 = (('un--getMatch'(V0, V1061, V2))(V1072))), case V1073 of {'Idris.Prelude.Types.Left', E879} -> (fun (V1074) -> {'Idris.Prelude.Types.Left', V1074} end(E879)); {'Idris.Prelude.Types.Right', E880} -> (fun (V1075) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1062, V2} | V1075]))(V1072)) end(E880)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E875, E876, E877, E878)); _ -> fun (V1076) -> begin (V1077 = (('un--getMatch'(V0, V1061, V2))(V1076))), case V1077 of {'Idris.Prelude.Types.Left', E873} -> (fun (V1078) -> {'Idris.Prelude.Types.Left', V1078} end(E873)); {'Idris.Prelude.Types.Right', E874} -> (fun (V1079) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1062, V2} | V1079]))(V1076)) end(E874)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E872)); _ -> ('un--getMatch'(V0, V1061, V2)) end end(E868, E869, E870, E871)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E848, E849, E850, E851} -> (fun (V1080, V1081, V1082, V1083) -> ('un--getMatch'(V0, V1, V1083)) end(E848, E849, E850, E851)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E842} -> (fun (V1084) -> case V2 of {'Idris.TTImp.TTImp.IType', E843} -> (fun (V1085) -> fun (V1086) -> {'Idris.Prelude.Types.Right', []} end end(E843)); _ -> fun (V1087) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1087)) end end end(E842)); {'Idris.TTImp.TTImp.IPrimVal', E844, E845} -> (fun (V1088, V1089) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E846, E847} -> (fun (V1090, V1091) -> ('case--getMatch-4071'(V1089, V1088, V1091, V1090, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1089, V1091)))) end(E846, E847)); _ -> fun (V1092) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1092)) end end end(E844, E845)); _ -> fun (V1093) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1093)) end end end end end end end end(E839, E840, E841)); {'Idris.TTImp.TTImp.INamedApp', E1006, E1007, E1008, E1009} -> (fun (V1094, V1095, V1096, V1097) -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1171, E1172, E1173, E1174} -> (fun (V1098, V1099, V1100, V1101) -> ('case--getMatch-3870'(V1094, V1097, V1096, V1095, V1101, V1100, V1099, V1098, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V1096, V1100)))) end(E1171, E1172, E1173, E1174)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1108, E1109, E1110, E1111} -> (fun (V1102, V1103, V1104, V1105) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1103, V2} | [{'Idris.Builtin.MkPair', V1105, V1105} | []]])) end(E1108, E1109, E1110, E1111)); {'Idris.TTImp.TTImp.IAutoApp', E1112, E1113, E1114} -> (fun (V1106, V1107, V1108) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1107, V2} | [{'Idris.Builtin.MkPair', V1108, V1108} | []]])) end(E1112, E1113, E1114)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1101, E1102, E1103, E1104} -> (fun (V1109, V1110, V1111, V1112) -> fun (V1113) -> ('un--matchFail'('erased', V1109, V1113)) end end(E1101, E1102, E1103, E1104)); {'Idris.TTImp.TTImp.IAutoApp', E1105, E1106, E1107} -> (fun (V1114, V1115, V1116) -> fun (V1117) -> ('un--matchFail'('erased', V1114, V1117)) end end(E1105, E1106, E1107)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1069, E1070, E1071} -> (fun (V1118, V1119, V1120) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1082, E1083, E1084} -> (fun (V1121, V1122, V1123) -> ('un--matchAny'(V1118, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1120, V1123)))) end(E1082, E1083, E1084)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1078, E1079, E1080, E1081} -> (fun (V1124, V1125, V1126, V1127) -> ('un--getMatch'(V0, V1, V1127)) end(E1078, E1079, E1080, E1081)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1072} -> (fun (V1128) -> case V2 of {'Idris.TTImp.TTImp.IType', E1073} -> (fun (V1129) -> fun (V1130) -> {'Idris.Prelude.Types.Right', []} end end(E1073)); _ -> fun (V1131) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1131)) end end end(E1072)); {'Idris.TTImp.TTImp.IPrimVal', E1074, E1075} -> (fun (V1132, V1133) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1076, E1077} -> (fun (V1134, V1135) -> ('case--getMatch-4071'(V1133, V1132, V1135, V1134, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1133, V1135)))) end(E1076, E1077)); _ -> fun (V1136) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1136)) end end end(E1074, E1075)); _ -> fun (V1137) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1137)) end end end end end(E1069, E1070, E1071)); {'Idris.TTImp.TTImp.IAs', E1085, E1086, E1087, E1088} -> (fun (V1138, V1139, V1140, V1141) -> case V1140 of {'Idris.Core.Name.UN', E1089} -> (fun (V1142) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1092, E1093, E1094, E1095} -> (fun (V1143, V1144, V1145, V1146) -> case V1145 of {'Idris.Core.Name.UN', E1098} -> (fun (V1147) -> fun (V1148) -> begin (V1149 = (('un--getMatch'(V0, V1141, V1146))(V1148))), case V1149 of {'Idris.Prelude.Types.Left', E1099} -> (fun (V1150) -> {'Idris.Prelude.Types.Left', V1150} end(E1099)); {'Idris.Prelude.Types.Right', E1100} -> (fun (V1151) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1142, {'Idris.TTImp.TTImp.IBindVar', V1143, V1147}} | V1151]))(V1148)) end(E1100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1098)); _ -> fun (V1152) -> begin (V1153 = (('un--getMatch'(V0, V1141, V2))(V1152))), case V1153 of {'Idris.Prelude.Types.Left', E1096} -> (fun (V1154) -> {'Idris.Prelude.Types.Left', V1154} end(E1096)); {'Idris.Prelude.Types.Right', E1097} -> (fun (V1155) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1142, V2} | V1155]))(V1152)) end(E1097)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1092, E1093, E1094, E1095)); _ -> fun (V1156) -> begin (V1157 = (('un--getMatch'(V0, V1141, V2))(V1156))), case V1157 of {'Idris.Prelude.Types.Left', E1090} -> (fun (V1158) -> {'Idris.Prelude.Types.Left', V1158} end(E1090)); {'Idris.Prelude.Types.Right', E1091} -> (fun (V1159) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1142, V2} | V1159]))(V1156)) end(E1091)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1089)); _ -> ('un--getMatch'(V0, V1141, V2)) end end(E1085, E1086, E1087, E1088)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1065, E1066, E1067, E1068} -> (fun (V1160, V1161, V1162, V1163) -> ('un--getMatch'(V0, V1, V1163)) end(E1065, E1066, E1067, E1068)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1059} -> (fun (V1164) -> case V2 of {'Idris.TTImp.TTImp.IType', E1060} -> (fun (V1165) -> fun (V1166) -> {'Idris.Prelude.Types.Right', []} end end(E1060)); _ -> fun (V1167) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1167)) end end end(E1059)); {'Idris.TTImp.TTImp.IPrimVal', E1061, E1062} -> (fun (V1168, V1169) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1063, E1064} -> (fun (V1170, V1171) -> ('case--getMatch-4071'(V1169, V1168, V1171, V1170, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1169, V1171)))) end(E1063, E1064)); _ -> fun (V1172) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1172)) end end end(E1061, E1062)); _ -> fun (V1173) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1173)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1164, E1165, E1166, E1167} -> (fun (V1174, V1175, V1176, V1177) -> ('un--getMatch'(1, V1175, V1175)) end(E1164, E1165, E1166, E1167)); {'Idris.TTImp.TTImp.IAutoApp', E1168, E1169, E1170} -> (fun (V1178, V1179, V1180) -> ('un--getMatch'(1, V1179, V1179)) end(E1168, E1169, E1170)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1157, E1158, E1159, E1160} -> (fun (V1181, V1182, V1183, V1184) -> fun (V1185) -> ('un--matchFail'('erased', V1181, V1185)) end end(E1157, E1158, E1159, E1160)); {'Idris.TTImp.TTImp.IAutoApp', E1161, E1162, E1163} -> (fun (V1186, V1187, V1188) -> fun (V1189) -> ('un--matchFail'('erased', V1186, V1189)) end end(E1161, E1162, E1163)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1125, E1126, E1127} -> (fun (V1190, V1191, V1192) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1138, E1139, E1140} -> (fun (V1193, V1194, V1195) -> ('un--matchAny'(V1190, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1192, V1195)))) end(E1138, E1139, E1140)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1134, E1135, E1136, E1137} -> (fun (V1196, V1197, V1198, V1199) -> ('un--getMatch'(V0, V1, V1199)) end(E1134, E1135, E1136, E1137)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1128} -> (fun (V1200) -> case V2 of {'Idris.TTImp.TTImp.IType', E1129} -> (fun (V1201) -> fun (V1202) -> {'Idris.Prelude.Types.Right', []} end end(E1129)); _ -> fun (V1203) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1203)) end end end(E1128)); {'Idris.TTImp.TTImp.IPrimVal', E1130, E1131} -> (fun (V1204, V1205) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1132, E1133} -> (fun (V1206, V1207) -> ('case--getMatch-4071'(V1205, V1204, V1207, V1206, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1205, V1207)))) end(E1132, E1133)); _ -> fun (V1208) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1208)) end end end(E1130, E1131)); _ -> fun (V1209) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1209)) end end end end end(E1125, E1126, E1127)); {'Idris.TTImp.TTImp.IAs', E1141, E1142, E1143, E1144} -> (fun (V1210, V1211, V1212, V1213) -> case V1212 of {'Idris.Core.Name.UN', E1145} -> (fun (V1214) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1148, E1149, E1150, E1151} -> (fun (V1215, V1216, V1217, V1218) -> case V1217 of {'Idris.Core.Name.UN', E1154} -> (fun (V1219) -> fun (V1220) -> begin (V1221 = (('un--getMatch'(V0, V1213, V1218))(V1220))), case V1221 of {'Idris.Prelude.Types.Left', E1155} -> (fun (V1222) -> {'Idris.Prelude.Types.Left', V1222} end(E1155)); {'Idris.Prelude.Types.Right', E1156} -> (fun (V1223) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1214, {'Idris.TTImp.TTImp.IBindVar', V1215, V1219}} | V1223]))(V1220)) end(E1156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1154)); _ -> fun (V1224) -> begin (V1225 = (('un--getMatch'(V0, V1213, V2))(V1224))), case V1225 of {'Idris.Prelude.Types.Left', E1152} -> (fun (V1226) -> {'Idris.Prelude.Types.Left', V1226} end(E1152)); {'Idris.Prelude.Types.Right', E1153} -> (fun (V1227) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1214, V2} | V1227]))(V1224)) end(E1153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1148, E1149, E1150, E1151)); _ -> fun (V1228) -> begin (V1229 = (('un--getMatch'(V0, V1213, V2))(V1228))), case V1229 of {'Idris.Prelude.Types.Left', E1146} -> (fun (V1230) -> {'Idris.Prelude.Types.Left', V1230} end(E1146)); {'Idris.Prelude.Types.Right', E1147} -> (fun (V1231) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1214, V2} | V1231]))(V1228)) end(E1147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1145)); _ -> ('un--getMatch'(V0, V1213, V2)) end end(E1141, E1142, E1143, E1144)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1121, E1122, E1123, E1124} -> (fun (V1232, V1233, V1234, V1235) -> ('un--getMatch'(V0, V1, V1235)) end(E1121, E1122, E1123, E1124)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1115} -> (fun (V1236) -> case V2 of {'Idris.TTImp.TTImp.IType', E1116} -> (fun (V1237) -> fun (V1238) -> {'Idris.Prelude.Types.Right', []} end end(E1116)); _ -> fun (V1239) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1239)) end end end(E1115)); {'Idris.TTImp.TTImp.IPrimVal', E1117, E1118} -> (fun (V1240, V1241) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1119, E1120} -> (fun (V1242, V1243) -> ('case--getMatch-4071'(V1241, V1240, V1243, V1242, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1241, V1243)))) end(E1119, E1120)); _ -> fun (V1244) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1244)) end end end(E1117, E1118)); _ -> fun (V1245) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1245)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1052, E1053, E1054, E1055} -> (fun (V1246, V1247, V1248, V1249) -> fun (V1250) -> ('un--matchFail'('erased', V1246, V1250)) end end(E1052, E1053, E1054, E1055)); {'Idris.TTImp.TTImp.IAutoApp', E1056, E1057, E1058} -> (fun (V1251, V1252, V1253) -> fun (V1254) -> ('un--matchFail'('erased', V1251, V1254)) end end(E1056, E1057, E1058)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1020, E1021, E1022} -> (fun (V1255, V1256, V1257) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1033, E1034, E1035} -> (fun (V1258, V1259, V1260) -> ('un--matchAny'(V1255, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1257, V1260)))) end(E1033, E1034, E1035)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1029, E1030, E1031, E1032} -> (fun (V1261, V1262, V1263, V1264) -> ('un--getMatch'(V0, V1, V1264)) end(E1029, E1030, E1031, E1032)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1023} -> (fun (V1265) -> case V2 of {'Idris.TTImp.TTImp.IType', E1024} -> (fun (V1266) -> fun (V1267) -> {'Idris.Prelude.Types.Right', []} end end(E1024)); _ -> fun (V1268) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1268)) end end end(E1023)); {'Idris.TTImp.TTImp.IPrimVal', E1025, E1026} -> (fun (V1269, V1270) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1027, E1028} -> (fun (V1271, V1272) -> ('case--getMatch-4071'(V1270, V1269, V1272, V1271, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1270, V1272)))) end(E1027, E1028)); _ -> fun (V1273) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1273)) end end end(E1025, E1026)); _ -> fun (V1274) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1274)) end end end end end(E1020, E1021, E1022)); {'Idris.TTImp.TTImp.IAs', E1036, E1037, E1038, E1039} -> (fun (V1275, V1276, V1277, V1278) -> case V1277 of {'Idris.Core.Name.UN', E1040} -> (fun (V1279) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1043, E1044, E1045, E1046} -> (fun (V1280, V1281, V1282, V1283) -> case V1282 of {'Idris.Core.Name.UN', E1049} -> (fun (V1284) -> fun (V1285) -> begin (V1286 = (('un--getMatch'(V0, V1278, V1283))(V1285))), case V1286 of {'Idris.Prelude.Types.Left', E1050} -> (fun (V1287) -> {'Idris.Prelude.Types.Left', V1287} end(E1050)); {'Idris.Prelude.Types.Right', E1051} -> (fun (V1288) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1279, {'Idris.TTImp.TTImp.IBindVar', V1280, V1284}} | V1288]))(V1285)) end(E1051)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1049)); _ -> fun (V1289) -> begin (V1290 = (('un--getMatch'(V0, V1278, V2))(V1289))), case V1290 of {'Idris.Prelude.Types.Left', E1047} -> (fun (V1291) -> {'Idris.Prelude.Types.Left', V1291} end(E1047)); {'Idris.Prelude.Types.Right', E1048} -> (fun (V1292) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1279, V2} | V1292]))(V1289)) end(E1048)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1043, E1044, E1045, E1046)); _ -> fun (V1293) -> begin (V1294 = (('un--getMatch'(V0, V1278, V2))(V1293))), case V1294 of {'Idris.Prelude.Types.Left', E1041} -> (fun (V1295) -> {'Idris.Prelude.Types.Left', V1295} end(E1041)); {'Idris.Prelude.Types.Right', E1042} -> (fun (V1296) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1279, V2} | V1296]))(V1293)) end(E1042)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1040)); _ -> ('un--getMatch'(V0, V1278, V2)) end end(E1036, E1037, E1038, E1039)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1016, E1017, E1018, E1019} -> (fun (V1297, V1298, V1299, V1300) -> ('un--getMatch'(V0, V1, V1300)) end(E1016, E1017, E1018, E1019)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1010} -> (fun (V1301) -> case V2 of {'Idris.TTImp.TTImp.IType', E1011} -> (fun (V1302) -> fun (V1303) -> {'Idris.Prelude.Types.Right', []} end end(E1011)); _ -> fun (V1304) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1304)) end end end(E1010)); {'Idris.TTImp.TTImp.IPrimVal', E1012, E1013} -> (fun (V1305, V1306) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1014, E1015} -> (fun (V1307, V1308) -> ('case--getMatch-4071'(V1306, V1305, V1308, V1307, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1306, V1308)))) end(E1014, E1015)); _ -> fun (V1309) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1309)) end end end(E1012, E1013)); _ -> fun (V1310) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1310)) end end end end end end end end(E1006, E1007, E1008, E1009)); {'Idris.TTImp.TTImp.IWithApp', E1175, E1176, E1177} -> (fun (V1311, V1312, V1313) -> case V2 of {'Idris.TTImp.TTImp.IWithApp', E1339, E1340, E1341} -> (fun (V1314, V1315, V1316) -> ('un--matchAll'(V0, [{'Idris.Builtin.MkPair', V1312, V1315} | [{'Idris.Builtin.MkPair', V1313, V1316} | []]])) end(E1339, E1340, E1341)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1276, E1277, E1278, E1279} -> (fun (V1317, V1318, V1319, V1320) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1318, V2} | [{'Idris.Builtin.MkPair', V1320, V1320} | []]])) end(E1276, E1277, E1278, E1279)); {'Idris.TTImp.TTImp.IAutoApp', E1280, E1281, E1282} -> (fun (V1321, V1322, V1323) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1322, V2} | [{'Idris.Builtin.MkPair', V1323, V1323} | []]])) end(E1280, E1281, E1282)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1269, E1270, E1271, E1272} -> (fun (V1324, V1325, V1326, V1327) -> fun (V1328) -> ('un--matchFail'('erased', V1324, V1328)) end end(E1269, E1270, E1271, E1272)); {'Idris.TTImp.TTImp.IAutoApp', E1273, E1274, E1275} -> (fun (V1329, V1330, V1331) -> fun (V1332) -> ('un--matchFail'('erased', V1329, V1332)) end end(E1273, E1274, E1275)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1237, E1238, E1239} -> (fun (V1333, V1334, V1335) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1250, E1251, E1252} -> (fun (V1336, V1337, V1338) -> ('un--matchAny'(V1333, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1335, V1338)))) end(E1250, E1251, E1252)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1246, E1247, E1248, E1249} -> (fun (V1339, V1340, V1341, V1342) -> ('un--getMatch'(V0, V1, V1342)) end(E1246, E1247, E1248, E1249)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1240} -> (fun (V1343) -> case V2 of {'Idris.TTImp.TTImp.IType', E1241} -> (fun (V1344) -> fun (V1345) -> {'Idris.Prelude.Types.Right', []} end end(E1241)); _ -> fun (V1346) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1346)) end end end(E1240)); {'Idris.TTImp.TTImp.IPrimVal', E1242, E1243} -> (fun (V1347, V1348) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1244, E1245} -> (fun (V1349, V1350) -> ('case--getMatch-4071'(V1348, V1347, V1350, V1349, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1348, V1350)))) end(E1244, E1245)); _ -> fun (V1351) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1351)) end end end(E1242, E1243)); _ -> fun (V1352) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1352)) end end end end end(E1237, E1238, E1239)); {'Idris.TTImp.TTImp.IAs', E1253, E1254, E1255, E1256} -> (fun (V1353, V1354, V1355, V1356) -> case V1355 of {'Idris.Core.Name.UN', E1257} -> (fun (V1357) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1260, E1261, E1262, E1263} -> (fun (V1358, V1359, V1360, V1361) -> case V1360 of {'Idris.Core.Name.UN', E1266} -> (fun (V1362) -> fun (V1363) -> begin (V1364 = (('un--getMatch'(V0, V1356, V1361))(V1363))), case V1364 of {'Idris.Prelude.Types.Left', E1267} -> (fun (V1365) -> {'Idris.Prelude.Types.Left', V1365} end(E1267)); {'Idris.Prelude.Types.Right', E1268} -> (fun (V1366) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1357, {'Idris.TTImp.TTImp.IBindVar', V1358, V1362}} | V1366]))(V1363)) end(E1268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1266)); _ -> fun (V1367) -> begin (V1368 = (('un--getMatch'(V0, V1356, V2))(V1367))), case V1368 of {'Idris.Prelude.Types.Left', E1264} -> (fun (V1369) -> {'Idris.Prelude.Types.Left', V1369} end(E1264)); {'Idris.Prelude.Types.Right', E1265} -> (fun (V1370) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1357, V2} | V1370]))(V1367)) end(E1265)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1260, E1261, E1262, E1263)); _ -> fun (V1371) -> begin (V1372 = (('un--getMatch'(V0, V1356, V2))(V1371))), case V1372 of {'Idris.Prelude.Types.Left', E1258} -> (fun (V1373) -> {'Idris.Prelude.Types.Left', V1373} end(E1258)); {'Idris.Prelude.Types.Right', E1259} -> (fun (V1374) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1357, V2} | V1374]))(V1371)) end(E1259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1257)); _ -> ('un--getMatch'(V0, V1356, V2)) end end(E1253, E1254, E1255, E1256)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1233, E1234, E1235, E1236} -> (fun (V1375, V1376, V1377, V1378) -> ('un--getMatch'(V0, V1, V1378)) end(E1233, E1234, E1235, E1236)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1227} -> (fun (V1379) -> case V2 of {'Idris.TTImp.TTImp.IType', E1228} -> (fun (V1380) -> fun (V1381) -> {'Idris.Prelude.Types.Right', []} end end(E1228)); _ -> fun (V1382) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1382)) end end end(E1227)); {'Idris.TTImp.TTImp.IPrimVal', E1229, E1230} -> (fun (V1383, V1384) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1231, E1232} -> (fun (V1385, V1386) -> ('case--getMatch-4071'(V1384, V1383, V1386, V1385, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1384, V1386)))) end(E1231, E1232)); _ -> fun (V1387) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1387)) end end end(E1229, E1230)); _ -> fun (V1388) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1388)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1332, E1333, E1334, E1335} -> (fun (V1389, V1390, V1391, V1392) -> ('un--getMatch'(1, V1390, V1390)) end(E1332, E1333, E1334, E1335)); {'Idris.TTImp.TTImp.IAutoApp', E1336, E1337, E1338} -> (fun (V1393, V1394, V1395) -> ('un--getMatch'(1, V1394, V1394)) end(E1336, E1337, E1338)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1325, E1326, E1327, E1328} -> (fun (V1396, V1397, V1398, V1399) -> fun (V1400) -> ('un--matchFail'('erased', V1396, V1400)) end end(E1325, E1326, E1327, E1328)); {'Idris.TTImp.TTImp.IAutoApp', E1329, E1330, E1331} -> (fun (V1401, V1402, V1403) -> fun (V1404) -> ('un--matchFail'('erased', V1401, V1404)) end end(E1329, E1330, E1331)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1293, E1294, E1295} -> (fun (V1405, V1406, V1407) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1306, E1307, E1308} -> (fun (V1408, V1409, V1410) -> ('un--matchAny'(V1405, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1407, V1410)))) end(E1306, E1307, E1308)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1302, E1303, E1304, E1305} -> (fun (V1411, V1412, V1413, V1414) -> ('un--getMatch'(V0, V1, V1414)) end(E1302, E1303, E1304, E1305)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1296} -> (fun (V1415) -> case V2 of {'Idris.TTImp.TTImp.IType', E1297} -> (fun (V1416) -> fun (V1417) -> {'Idris.Prelude.Types.Right', []} end end(E1297)); _ -> fun (V1418) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1418)) end end end(E1296)); {'Idris.TTImp.TTImp.IPrimVal', E1298, E1299} -> (fun (V1419, V1420) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1300, E1301} -> (fun (V1421, V1422) -> ('case--getMatch-4071'(V1420, V1419, V1422, V1421, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1420, V1422)))) end(E1300, E1301)); _ -> fun (V1423) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1423)) end end end(E1298, E1299)); _ -> fun (V1424) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1424)) end end end end end(E1293, E1294, E1295)); {'Idris.TTImp.TTImp.IAs', E1309, E1310, E1311, E1312} -> (fun (V1425, V1426, V1427, V1428) -> case V1427 of {'Idris.Core.Name.UN', E1313} -> (fun (V1429) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1316, E1317, E1318, E1319} -> (fun (V1430, V1431, V1432, V1433) -> case V1432 of {'Idris.Core.Name.UN', E1322} -> (fun (V1434) -> fun (V1435) -> begin (V1436 = (('un--getMatch'(V0, V1428, V1433))(V1435))), case V1436 of {'Idris.Prelude.Types.Left', E1323} -> (fun (V1437) -> {'Idris.Prelude.Types.Left', V1437} end(E1323)); {'Idris.Prelude.Types.Right', E1324} -> (fun (V1438) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1429, {'Idris.TTImp.TTImp.IBindVar', V1430, V1434}} | V1438]))(V1435)) end(E1324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1322)); _ -> fun (V1439) -> begin (V1440 = (('un--getMatch'(V0, V1428, V2))(V1439))), case V1440 of {'Idris.Prelude.Types.Left', E1320} -> (fun (V1441) -> {'Idris.Prelude.Types.Left', V1441} end(E1320)); {'Idris.Prelude.Types.Right', E1321} -> (fun (V1442) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1429, V2} | V1442]))(V1439)) end(E1321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1316, E1317, E1318, E1319)); _ -> fun (V1443) -> begin (V1444 = (('un--getMatch'(V0, V1428, V2))(V1443))), case V1444 of {'Idris.Prelude.Types.Left', E1314} -> (fun (V1445) -> {'Idris.Prelude.Types.Left', V1445} end(E1314)); {'Idris.Prelude.Types.Right', E1315} -> (fun (V1446) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1429, V2} | V1446]))(V1443)) end(E1315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1313)); _ -> ('un--getMatch'(V0, V1428, V2)) end end(E1309, E1310, E1311, E1312)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1289, E1290, E1291, E1292} -> (fun (V1447, V1448, V1449, V1450) -> ('un--getMatch'(V0, V1, V1450)) end(E1289, E1290, E1291, E1292)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1283} -> (fun (V1451) -> case V2 of {'Idris.TTImp.TTImp.IType', E1284} -> (fun (V1452) -> fun (V1453) -> {'Idris.Prelude.Types.Right', []} end end(E1284)); _ -> fun (V1454) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1454)) end end end(E1283)); {'Idris.TTImp.TTImp.IPrimVal', E1285, E1286} -> (fun (V1455, V1456) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1287, E1288} -> (fun (V1457, V1458) -> ('case--getMatch-4071'(V1456, V1455, V1458, V1457, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1456, V1458)))) end(E1287, E1288)); _ -> fun (V1459) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1459)) end end end(E1285, E1286)); _ -> fun (V1460) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1460)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1220, E1221, E1222, E1223} -> (fun (V1461, V1462, V1463, V1464) -> fun (V1465) -> ('un--matchFail'('erased', V1461, V1465)) end end(E1220, E1221, E1222, E1223)); {'Idris.TTImp.TTImp.IAutoApp', E1224, E1225, E1226} -> (fun (V1466, V1467, V1468) -> fun (V1469) -> ('un--matchFail'('erased', V1466, V1469)) end end(E1224, E1225, E1226)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1188, E1189, E1190} -> (fun (V1470, V1471, V1472) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1201, E1202, E1203} -> (fun (V1473, V1474, V1475) -> ('un--matchAny'(V1470, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1472, V1475)))) end(E1201, E1202, E1203)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1197, E1198, E1199, E1200} -> (fun (V1476, V1477, V1478, V1479) -> ('un--getMatch'(V0, V1, V1479)) end(E1197, E1198, E1199, E1200)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1191} -> (fun (V1480) -> case V2 of {'Idris.TTImp.TTImp.IType', E1192} -> (fun (V1481) -> fun (V1482) -> {'Idris.Prelude.Types.Right', []} end end(E1192)); _ -> fun (V1483) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1483)) end end end(E1191)); {'Idris.TTImp.TTImp.IPrimVal', E1193, E1194} -> (fun (V1484, V1485) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1195, E1196} -> (fun (V1486, V1487) -> ('case--getMatch-4071'(V1485, V1484, V1487, V1486, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1485, V1487)))) end(E1195, E1196)); _ -> fun (V1488) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1488)) end end end(E1193, E1194)); _ -> fun (V1489) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1489)) end end end end end(E1188, E1189, E1190)); {'Idris.TTImp.TTImp.IAs', E1204, E1205, E1206, E1207} -> (fun (V1490, V1491, V1492, V1493) -> case V1492 of {'Idris.Core.Name.UN', E1208} -> (fun (V1494) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1211, E1212, E1213, E1214} -> (fun (V1495, V1496, V1497, V1498) -> case V1497 of {'Idris.Core.Name.UN', E1217} -> (fun (V1499) -> fun (V1500) -> begin (V1501 = (('un--getMatch'(V0, V1493, V1498))(V1500))), case V1501 of {'Idris.Prelude.Types.Left', E1218} -> (fun (V1502) -> {'Idris.Prelude.Types.Left', V1502} end(E1218)); {'Idris.Prelude.Types.Right', E1219} -> (fun (V1503) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1494, {'Idris.TTImp.TTImp.IBindVar', V1495, V1499}} | V1503]))(V1500)) end(E1219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1217)); _ -> fun (V1504) -> begin (V1505 = (('un--getMatch'(V0, V1493, V2))(V1504))), case V1505 of {'Idris.Prelude.Types.Left', E1215} -> (fun (V1506) -> {'Idris.Prelude.Types.Left', V1506} end(E1215)); {'Idris.Prelude.Types.Right', E1216} -> (fun (V1507) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1494, V2} | V1507]))(V1504)) end(E1216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1211, E1212, E1213, E1214)); _ -> fun (V1508) -> begin (V1509 = (('un--getMatch'(V0, V1493, V2))(V1508))), case V1509 of {'Idris.Prelude.Types.Left', E1209} -> (fun (V1510) -> {'Idris.Prelude.Types.Left', V1510} end(E1209)); {'Idris.Prelude.Types.Right', E1210} -> (fun (V1511) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1494, V2} | V1511]))(V1508)) end(E1210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1208)); _ -> ('un--getMatch'(V0, V1493, V2)) end end(E1204, E1205, E1206, E1207)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1184, E1185, E1186, E1187} -> (fun (V1512, V1513, V1514, V1515) -> ('un--getMatch'(V0, V1, V1515)) end(E1184, E1185, E1186, E1187)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1178} -> (fun (V1516) -> case V2 of {'Idris.TTImp.TTImp.IType', E1179} -> (fun (V1517) -> fun (V1518) -> {'Idris.Prelude.Types.Right', []} end end(E1179)); _ -> fun (V1519) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1519)) end end end(E1178)); {'Idris.TTImp.TTImp.IPrimVal', E1180, E1181} -> (fun (V1520, V1521) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1182, E1183} -> (fun (V1522, V1523) -> ('case--getMatch-4071'(V1521, V1520, V1523, V1522, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1521, V1523)))) end(E1182, E1183)); _ -> fun (V1524) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1524)) end end end(E1180, E1181)); _ -> fun (V1525) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1525)) end end end end end end end end(E1175, E1176, E1177)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E98, E99, E100, E101} -> (fun (V1526, V1527, V1528, V1529) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1527, V2} | [{'Idris.Builtin.MkPair', V1529, V1529} | []]])) end(E98, E99, E100, E101)); {'Idris.TTImp.TTImp.IAutoApp', E102, E103, E104} -> (fun (V1530, V1531, V1532) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1531, V2} | [{'Idris.Builtin.MkPair', V1532, V1532} | []]])) end(E102, E103, E104)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E91, E92, E93, E94} -> (fun (V1533, V1534, V1535, V1536) -> fun (V1537) -> ('un--matchFail'('erased', V1533, V1537)) end end(E91, E92, E93, E94)); {'Idris.TTImp.TTImp.IAutoApp', E95, E96, E97} -> (fun (V1538, V1539, V1540) -> fun (V1541) -> ('un--matchFail'('erased', V1538, V1541)) end end(E95, E96, E97)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E59, E60, E61} -> (fun (V1542, V1543, V1544) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E72, E73, E74} -> (fun (V1545, V1546, V1547) -> ('un--matchAny'(V1542, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1544, V1547)))) end(E72, E73, E74)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E68, E69, E70, E71} -> (fun (V1548, V1549, V1550, V1551) -> ('un--getMatch'(V0, V1, V1551)) end(E68, E69, E70, E71)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E62} -> (fun (V1552) -> case V2 of {'Idris.TTImp.TTImp.IType', E63} -> (fun (V1553) -> fun (V1554) -> {'Idris.Prelude.Types.Right', []} end end(E63)); _ -> fun (V1555) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1555)) end end end(E62)); {'Idris.TTImp.TTImp.IPrimVal', E64, E65} -> (fun (V1556, V1557) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E66, E67} -> (fun (V1558, V1559) -> ('case--getMatch-4071'(V1557, V1556, V1559, V1558, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1557, V1559)))) end(E66, E67)); _ -> fun (V1560) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1560)) end end end(E64, E65)); _ -> fun (V1561) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1561)) end end end end end(E59, E60, E61)); {'Idris.TTImp.TTImp.IAs', E75, E76, E77, E78} -> (fun (V1562, V1563, V1564, V1565) -> case V1564 of {'Idris.Core.Name.UN', E79} -> (fun (V1566) -> case V2 of {'Idris.TTImp.TTImp.IAs', E82, E83, E84, E85} -> (fun (V1567, V1568, V1569, V1570) -> case V1569 of {'Idris.Core.Name.UN', E88} -> (fun (V1571) -> fun (V1572) -> begin (V1573 = (('un--getMatch'(V0, V1565, V1570))(V1572))), case V1573 of {'Idris.Prelude.Types.Left', E89} -> (fun (V1574) -> {'Idris.Prelude.Types.Left', V1574} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V1575) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1566, {'Idris.TTImp.TTImp.IBindVar', V1567, V1571}} | V1575]))(V1572)) end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E88)); _ -> fun (V1576) -> begin (V1577 = (('un--getMatch'(V0, V1565, V2))(V1576))), case V1577 of {'Idris.Prelude.Types.Left', E86} -> (fun (V1578) -> {'Idris.Prelude.Types.Left', V1578} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V1579) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1566, V2} | V1579]))(V1576)) end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E82, E83, E84, E85)); _ -> fun (V1580) -> begin (V1581 = (('un--getMatch'(V0, V1565, V2))(V1580))), case V1581 of {'Idris.Prelude.Types.Left', E80} -> (fun (V1582) -> {'Idris.Prelude.Types.Left', V1582} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V1583) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1566, V2} | V1583]))(V1580)) end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E79)); _ -> ('un--getMatch'(V0, V1565, V2)) end end(E75, E76, E77, E78)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E55, E56, E57, E58} -> (fun (V1584, V1585, V1586, V1587) -> ('un--getMatch'(V0, V1, V1587)) end(E55, E56, E57, E58)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E49} -> (fun (V1588) -> case V2 of {'Idris.TTImp.TTImp.IType', E50} -> (fun (V1589) -> fun (V1590) -> {'Idris.Prelude.Types.Right', []} end end(E50)); _ -> fun (V1591) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1591)) end end end(E49)); {'Idris.TTImp.TTImp.IPrimVal', E51, E52} -> (fun (V1592, V1593) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E53, E54} -> (fun (V1594, V1595) -> ('case--getMatch-4071'(V1593, V1592, V1595, V1594, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1593, V1595)))) end(E53, E54)); _ -> fun (V1596) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1596)) end end end(E51, E52)); _ -> fun (V1597) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1597)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E154, E155, E156, E157} -> (fun (V1598, V1599, V1600, V1601) -> ('un--getMatch'(1, V1599, V1599)) end(E154, E155, E156, E157)); {'Idris.TTImp.TTImp.IAutoApp', E158, E159, E160} -> (fun (V1602, V1603, V1604) -> ('un--getMatch'(1, V1603, V1603)) end(E158, E159, E160)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E147, E148, E149, E150} -> (fun (V1605, V1606, V1607, V1608) -> fun (V1609) -> ('un--matchFail'('erased', V1605, V1609)) end end(E147, E148, E149, E150)); {'Idris.TTImp.TTImp.IAutoApp', E151, E152, E153} -> (fun (V1610, V1611, V1612) -> fun (V1613) -> ('un--matchFail'('erased', V1610, V1613)) end end(E151, E152, E153)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E115, E116, E117} -> (fun (V1614, V1615, V1616) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E128, E129, E130} -> (fun (V1617, V1618, V1619) -> ('un--matchAny'(V1614, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1616, V1619)))) end(E128, E129, E130)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E124, E125, E126, E127} -> (fun (V1620, V1621, V1622, V1623) -> ('un--getMatch'(V0, V1, V1623)) end(E124, E125, E126, E127)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E118} -> (fun (V1624) -> case V2 of {'Idris.TTImp.TTImp.IType', E119} -> (fun (V1625) -> fun (V1626) -> {'Idris.Prelude.Types.Right', []} end end(E119)); _ -> fun (V1627) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1627)) end end end(E118)); {'Idris.TTImp.TTImp.IPrimVal', E120, E121} -> (fun (V1628, V1629) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E122, E123} -> (fun (V1630, V1631) -> ('case--getMatch-4071'(V1629, V1628, V1631, V1630, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1629, V1631)))) end(E122, E123)); _ -> fun (V1632) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1632)) end end end(E120, E121)); _ -> fun (V1633) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1633)) end end end end end(E115, E116, E117)); {'Idris.TTImp.TTImp.IAs', E131, E132, E133, E134} -> (fun (V1634, V1635, V1636, V1637) -> case V1636 of {'Idris.Core.Name.UN', E135} -> (fun (V1638) -> case V2 of {'Idris.TTImp.TTImp.IAs', E138, E139, E140, E141} -> (fun (V1639, V1640, V1641, V1642) -> case V1641 of {'Idris.Core.Name.UN', E144} -> (fun (V1643) -> fun (V1644) -> begin (V1645 = (('un--getMatch'(V0, V1637, V1642))(V1644))), case V1645 of {'Idris.Prelude.Types.Left', E145} -> (fun (V1646) -> {'Idris.Prelude.Types.Left', V1646} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V1647) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1638, {'Idris.TTImp.TTImp.IBindVar', V1639, V1643}} | V1647]))(V1644)) end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E144)); _ -> fun (V1648) -> begin (V1649 = (('un--getMatch'(V0, V1637, V2))(V1648))), case V1649 of {'Idris.Prelude.Types.Left', E142} -> (fun (V1650) -> {'Idris.Prelude.Types.Left', V1650} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V1651) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1638, V2} | V1651]))(V1648)) end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E138, E139, E140, E141)); _ -> fun (V1652) -> begin (V1653 = (('un--getMatch'(V0, V1637, V2))(V1652))), case V1653 of {'Idris.Prelude.Types.Left', E136} -> (fun (V1654) -> {'Idris.Prelude.Types.Left', V1654} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V1655) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1638, V2} | V1655]))(V1652)) end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E135)); _ -> ('un--getMatch'(V0, V1637, V2)) end end(E131, E132, E133, E134)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E111, E112, E113, E114} -> (fun (V1656, V1657, V1658, V1659) -> ('un--getMatch'(V0, V1, V1659)) end(E111, E112, E113, E114)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E105} -> (fun (V1660) -> case V2 of {'Idris.TTImp.TTImp.IType', E106} -> (fun (V1661) -> fun (V1662) -> {'Idris.Prelude.Types.Right', []} end end(E106)); _ -> fun (V1663) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1663)) end end end(E105)); {'Idris.TTImp.TTImp.IPrimVal', E107, E108} -> (fun (V1664, V1665) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E109, E110} -> (fun (V1666, V1667) -> ('case--getMatch-4071'(V1665, V1664, V1667, V1666, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1665, V1667)))) end(E109, E110)); _ -> fun (V1668) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1668)) end end end(E107, E108)); _ -> fun (V1669) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1669)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E42, E43, E44, E45} -> (fun (V1670, V1671, V1672, V1673) -> fun (V1674) -> ('un--matchFail'('erased', V1670, V1674)) end end(E42, E43, E44, E45)); {'Idris.TTImp.TTImp.IAutoApp', E46, E47, E48} -> (fun (V1675, V1676, V1677) -> fun (V1678) -> ('un--matchFail'('erased', V1675, V1678)) end end(E46, E47, E48)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E10, E11, E12} -> (fun (V1679, V1680, V1681) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E23, E24, E25} -> (fun (V1682, V1683, V1684) -> ('un--matchAny'(V1679, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1681, V1684)))) end(E23, E24, E25)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E19, E20, E21, E22} -> (fun (V1685, V1686, V1687, V1688) -> ('un--getMatch'(V0, V1, V1688)) end(E19, E20, E21, E22)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E13} -> (fun (V1689) -> case V2 of {'Idris.TTImp.TTImp.IType', E14} -> (fun (V1690) -> fun (V1691) -> {'Idris.Prelude.Types.Right', []} end end(E14)); _ -> fun (V1692) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1692)) end end end(E13)); {'Idris.TTImp.TTImp.IPrimVal', E15, E16} -> (fun (V1693, V1694) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E17, E18} -> (fun (V1695, V1696) -> ('case--getMatch-4071'(V1694, V1693, V1696, V1695, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1694, V1696)))) end(E17, E18)); _ -> fun (V1697) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1697)) end end end(E15, E16)); _ -> fun (V1698) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1698)) end end end end end(E10, E11, E12)); {'Idris.TTImp.TTImp.IAs', E26, E27, E28, E29} -> (fun (V1699, V1700, V1701, V1702) -> case V1701 of {'Idris.Core.Name.UN', E30} -> (fun (V1703) -> case V2 of {'Idris.TTImp.TTImp.IAs', E33, E34, E35, E36} -> (fun (V1704, V1705, V1706, V1707) -> case V1706 of {'Idris.Core.Name.UN', E39} -> (fun (V1708) -> fun (V1709) -> begin (V1710 = (('un--getMatch'(V0, V1702, V1707))(V1709))), case V1710 of {'Idris.Prelude.Types.Left', E40} -> (fun (V1711) -> {'Idris.Prelude.Types.Left', V1711} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V1712) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1703, {'Idris.TTImp.TTImp.IBindVar', V1704, V1708}} | V1712]))(V1709)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E39)); _ -> fun (V1713) -> begin (V1714 = (('un--getMatch'(V0, V1702, V2))(V1713))), case V1714 of {'Idris.Prelude.Types.Left', E37} -> (fun (V1715) -> {'Idris.Prelude.Types.Left', V1715} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V1716) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1703, V2} | V1716]))(V1713)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E33, E34, E35, E36)); _ -> fun (V1717) -> begin (V1718 = (('un--getMatch'(V0, V1702, V2))(V1717))), case V1718 of {'Idris.Prelude.Types.Left', E31} -> (fun (V1719) -> {'Idris.Prelude.Types.Left', V1719} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V1720) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1703, V2} | V1720]))(V1717)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E30)); _ -> ('un--getMatch'(V0, V1702, V2)) end end(E26, E27, E28, E29)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E6, E7, E8, E9} -> (fun (V1721, V1722, V1723, V1724) -> ('un--getMatch'(V0, V1, V1724)) end(E6, E7, E8, E9)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E0} -> (fun (V1725) -> case V2 of {'Idris.TTImp.TTImp.IType', E1} -> (fun (V1726) -> fun (V1727) -> {'Idris.Prelude.Types.Right', []} end end(E1)); _ -> fun (V1728) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1728)) end end end(E0)); {'Idris.TTImp.TTImp.IPrimVal', E2, E3} -> (fun (V1729, V1730) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E4, E5} -> (fun (V1731, V1732) -> ('case--getMatch-4071'(V1730, V1729, V1732, V1731, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1730, V1732)))) end(E4, E5)); _ -> fun (V1733) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1733)) end end end(E2, E3)); _ -> fun (V1734) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1734)) end end end end end end end.
'un--getArgMatch'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> V2 end()); _ -> case V1 of 0 -> case V4 of {'Idris.Prelude.Types.Just', E8} -> (fun (V5) -> case V5 of {'Idris.Builtin.MkPair', E13, E14} -> (fun (V6, V7) -> case V6 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case V7 of {'Idris.Core.Name.UN', E19} -> (fun (V8) -> ('case--getArgMatch-4227'(V8, V3, V2, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V11, V12)) end end}, V8, V3)))) end(E19)); _ -> {'Idris.TTImp.TTImp.ISearch', V0, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(500))} end end()); _ -> case V4 of {'Idris.Prelude.Types.Just', E15} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V14, V15) -> case V15 of {'Idris.Core.Name.UN', E18} -> (fun (V16) -> ('case--getArgMatch-4280'(V14, V16, V3, V2, V1, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V19, V20)) end end}, V16, V3)))) end(E18)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E16, E17)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E15)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end end(E13, E14)); _ -> case V4 of {'Idris.Prelude.Types.Just', E9} -> (fun (V21) -> case V21 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V22, V23) -> case V23 of {'Idris.Core.Name.UN', E12} -> (fun (V24) -> ('case--getArgMatch-4280'(V22, V24, V3, V2, V1, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V25, V26)) end end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V27, V28)) end end}, V24, V3)))) end(E12)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E10, E11)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E9)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end end(E8)); _ -> case V4 of {'Idris.Prelude.Types.Just', E4} -> (fun (V29) -> case V29 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V30, V31) -> case V31 of {'Idris.Core.Name.UN', E7} -> (fun (V32) -> ('case--getArgMatch-4280'(V30, V32, V3, V2, V1, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V33, V34)) end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V35, V36)) end end}, V32, V3)))) end(E7)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E5, E6)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E4)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end; _ -> case V4 of {'Idris.Prelude.Types.Just', E0} -> (fun (V37) -> case V37 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V38, V39) -> case V39 of {'Idris.Core.Name.UN', E3} -> (fun (V40) -> ('case--getArgMatch-4280'(V38, V40, V3, V2, V1, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V41, V42)) end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V43, V44)) end end}, V40, V3)))) end(E3)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E1, E2)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E0)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end end.
