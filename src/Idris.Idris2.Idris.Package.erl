-module('Idris.Idris2.Idris.Package').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in findIpkg-8543'/21,
  'case--case block in case block in findIpkg-8422'/17,
  'case--case block in findIpkg-8355'/10,
  'case--findIpkg-8285'/4,
  'case--case block in processPackageOpts-8153'/9,
  'case--processPackageOpts-8135'/5,
  'case--filterPackageOpts-8096'/3,
  'case--filterPackageOpts-8073'/3,
  'case--filterPackageOpts-8051'/3,
  'case--filterPackageOpts-8029'/3,
  'case--filterPackageOpts-8007'/3,
  'case--filterPackageOpts-7985'/3,
  'case--filterPackageOpts-7965'/2,
  'case--filterPackageOpts-7943'/3,
  'case--filterPackageOpts-7921'/3,
  'case--filterPackageOpts-7899'/3,
  'case--filterPackageOpts-7877'/3,
  'case--filterPackageOpts-7857'/2,
  'case--filterPackageOpts-7835'/3,
  'case--filterPackageOpts-7813'/3,
  'case--filterPackageOpts-7793'/2,
  'case--filterPackageOpts-7773'/2,
  'case--filterPackageOpts-7750'/4,
  'case--case block in case block in case block in processPackage-7493'/13,
  'case--case block in case block in case block in processPackage-7377'/13,
  'case--case block in case block in case block in processPackage-7285'/13,
  'case--case block in case block in case block in processPackage-7193'/13,
  'case--case block in case block in processPackage-7159'/12,
  'case--case block in processPackage-7116'/7,
  'case--processPackage-7030'/7,
  'case--runRepl-6979'/6,
  'case--clean-6731'/9,
  'case--clean-6674'/9,
  'case--clean,delete-6578'/6,
  'case--foldWithKeysC,go-6501'/10,
  'case--check-6280'/6,
  'case--case block in case block in case block in install-6083'/15,
  'case--case block in case block in install-6043'/13,
  'case--case block in install-6009'/12,
  'case--install-5974'/9,
  'case--case block in installFrom-5803'/15,
  'case--installFrom-5751'/12,
  'case--copyFile-5695'/3,
  'case--case block in build-5611'/9,
  'case--case block in case block in build-5555'/9,
  'case--case block in build-5516'/8,
  'case--build-5475'/6,
  'case--prepareCompilation-5355'/14,
  'case--filterChangedModules-5259'/3,
  'case--processOptions-5123'/5,
  'case--addFields-5037'/11,
  'case--addField-4874'/6,
  'case--addField-4826'/6,
  'case--addField-4778'/6,
  'case--addField-4730'/6,
  'case--addField-4682'/6,
  'case--addField-4634'/6,
  'case--addField-4590'/6,
  'case--addField-4546'/6,
  'case--addField-4502'/6,
  'case--addField-4454'/6,
  'case--addField-4412'/5,
  'case--addField-4370'/5,
  'case--addField-4298'/5,
  'case--addField-4254'/6,
  'case--addField-4210'/6,
  'case--addField-4166'/6,
  'case--addField-4122'/6,
  'case--addField-4078'/6,
  'case--addField-4034'/6,
  'case--addField-3990'/6,
  'case--addField-3948'/6,
  'case--addField-3906'/6,
  'nested--20509-4894--in--un--toSource'/4,
  'nested--18850-3266--in--un--strField'/3,
  'nested--24091-8225--in--un--loadDependencies'/4,
  'nested--22188-6466--in--un--go'/8,
  'nested--20509-4895--in--un--go'/7,
  'nested--22289-6562--in--un--deleteFolder'/7,
  'nested--22289-6563--in--un--deleteBin'/7,
  'nested--22289-6561--in--un--delete'/6,
  'un--runScript'/1,
  'un--runRepl'/5,
  'un--processPackageOpts'/4,
  'un--processPackage'/6,
  'un--processOptions'/3,
  'un--prepareCompilation'/6,
  'un--parsePkgDesc'/1,
  'un--installFrom'/5,
  'un--install'/5,
  'un--initPkgDesc'/1,
  'un--getParseErrorLoc'/2,
  'un--foldlC'/6,
  'un--foldWithKeysC'/7,
  'un--findIpkg'/4,
  'un--filterPackageOpts'/2,
  'un--filterChangedModules'/2,
  'un--field'/1,
  'un--errorMsg'/0,
  'un--copyFile'/3,
  'un--compileMain'/7,
  'un--compileLibHelper'/7,
  'un--clean'/5,
  'un--check'/6,
  'un--build'/6,
  'un--bitraverseC'/7,
  'un--addFields'/4,
  'un--addField'/5,
  'un--addDeps'/3
]).
'case--case block in case block in case block in findIpkg-8543'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V21, V22, {'Idris.Prelude.Types.Just', V18}, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in findIpkg-8422'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.Utils.Path':'un--</>'(V5, V18))), fun (V20) -> begin (V21 = ('Idris.Idris2.Idris.REPLOpts':'un--setSource'(V1, V19, V20))), case V21 of {'Idris.Prelude.Types.Left', E1} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V23) -> begin (V25 = begin (V24 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V24} end), case V25 of {'Idris.Prelude.Types.Left', E3} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V27) -> begin (V43 = begin (V42 = ('erlang':'put'(V1, case V27 of {'Idris.Idris.REPLOpts.MkREPLOpts', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18} -> (fun (V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V28, V29, {'Idris.Prelude.Types.Just', V19}, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41} end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V42} end), case V43 of {'Idris.Prelude.Types.Left', E19} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V19}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in findIpkg-8355'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Right', E0} -> (fun (V10) -> case V10 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V11, V12) -> fun (V13) -> begin (V14 = ('un--addFields'(V2, V12, ('un--initPkgDesc'(V11)), V13))), case V14 of {'Idris.Prelude.Types.Left', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V16) -> begin (V45 = (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end, fun () -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Context':'un--setBuildDir'(V2, V18, V19)) end end end, case V16 of {'Idris.Idris.Package.MkPkgDesc', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> V37 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13))), case V45 of {'Idris.Prelude.Types.Left', E30} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V47) -> begin (V73 = ('Idris.Idris2.Core.Context':'un--setOutputDir'(V2, case V16 of {'Idris.Idris.Package.MkPkgDesc', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56} -> (fun (V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72) -> V66 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V13))), case V73 of {'Idris.Prelude.Types.Left', E57} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V75) -> begin (V101 = (('un--processOptions'(V2, V1, case V16 of {'Idris.Idris.Package.MkPkgDesc', E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83} -> (fun (V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100) -> V91 end(E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13))), case V101 of {'Idris.Prelude.Types.Left', E84} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V103) -> begin (V129 = (('nested--24091-8225--in--un--loadDependencies'(V0, V1, V2, case V16 of {'Idris.Idris.Package.MkPkgDesc', E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110} -> (fun (V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128) -> V114 end(E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13))), case V129 of {'Idris.Prelude.Types.Left', E111} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V131) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E113} -> (fun (V132) -> begin (V133 = ('Idris.Idris2.Utils.Path':'un--</>'(V5, V132))), begin (V134 = ('Idris.Idris2.Idris.REPLOpts':'un--setSource'(V1, V133, V13))), case V134 of {'Idris.Prelude.Types.Left', E114} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V136) -> begin (V138 = begin (V137 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V137} end), case V138 of {'Idris.Prelude.Types.Left', E116} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V140) -> begin (V156 = begin (V155 = ('erlang':'put'(V1, case V140 of {'Idris.Idris.REPLOpts.MkREPLOpts', E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131} -> (fun (V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V141, V142, {'Idris.Prelude.Types.Just', V133}, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154} end(E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V155} end), case V156 of {'Idris.Prelude.Types.Left', E132} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V158) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V133}} end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E134} -> (fun (V159) -> case V159 of {'Idris.Parser.Support.FileFail', E135} -> (fun (V160) -> fun (V161) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.FileErr', V4, V160}, V161)) end end(E135)); _ -> fun (V162) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.ParseFail', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V163) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--show_Show__Token'(V163)) end, fun (V164) -> fun (V165) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--showPrec_Show__Token'(V164, V165)) end end}, {'Idris.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V166) -> fun (V167) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--pretty_Pretty__Token'('erased', V167)) end end, fun (V168) -> fun (V169) -> fun (V170) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--prettyPrec_Pretty__Token'('erased', V169, V170)) end end end}}, ('un--getParseErrorLoc'(V4, V159)), V159}, V162)) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--findIpkg-8285'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> case V4 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V7, V8) -> fun (V9) -> begin (V38 = begin (V37 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> V16 end end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), begin (V24 = (V21(V22))), (V23(V24)) end end end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), ((V28(V30))(V29)) end end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V32(V33))), (V34(V33)) end end end end}, fun (V35) -> fun (V36) -> V36 end end}, V5))(V9))), {'Idris.Prelude.Types.Right', V37} end), case V38 of {'Idris.Prelude.Types.Left', E5} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V40) -> begin (V41 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V2, V5, V9))), case V41 of {'Idris.Prelude.Types.Left', E7} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V43) -> begin (V47 = begin (V46 = ('Idris.Idris2.Parser.Package':'un--parseFile'('erased', V7, {'Idris.Text.Parser.Core.SeqEat', 0, ('un--parsePkgDesc'(V7)), fun () -> fun (V44) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--eoi'()), fun () -> fun (V45) -> {'Idris.Text.Parser.Core.Empty', V44} end end} end end}, V9))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E9} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V49) -> case V49 of {'Idris.Prelude.Types.Right', E11} -> (fun (V50) -> case V50 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V51, V52) -> begin (V53 = ('un--addFields'(V2, V52, ('un--initPkgDesc'(V51)), V9))), case V53 of {'Idris.Prelude.Types.Left', E14} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V55) -> begin (V84 = (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V56) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end, fun () -> fun (V57) -> fun (V58) -> ('Idris.Idris2.Core.Context':'un--setBuildDir'(V2, V57, V58)) end end end, case V55 of {'Idris.Idris.Package.MkPkgDesc', E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40} -> (fun (V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83) -> V76 end(E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9))), case V84 of {'Idris.Prelude.Types.Left', E41} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V86) -> begin (V112 = ('Idris.Idris2.Core.Context':'un--setOutputDir'(V2, case V55 of {'Idris.Idris.Package.MkPkgDesc', E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67} -> (fun (V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111) -> V105 end(E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V9))), case V112 of {'Idris.Prelude.Types.Left', E68} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V114) -> begin (V140 = (('un--processOptions'(V2, V1, case V55 of {'Idris.Idris.Package.MkPkgDesc', E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94} -> (fun (V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139) -> V130 end(E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9))), case V140 of {'Idris.Prelude.Types.Left', E95} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V142) -> begin (V168 = (('nested--24091-8225--in--un--loadDependencies'(V0, V1, V2, case V55 of {'Idris.Idris.Package.MkPkgDesc', E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121} -> (fun (V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167) -> V153 end(E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9))), case V168 of {'Idris.Prelude.Types.Left', E122} -> (fun (V169) -> {'Idris.Prelude.Types.Left', V169} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V170) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E124} -> (fun (V171) -> begin (V172 = ('Idris.Idris2.Utils.Path':'un--</>'(V8, V171))), begin (V173 = ('Idris.Idris2.Idris.REPLOpts':'un--setSource'(V1, V172, V9))), case V173 of {'Idris.Prelude.Types.Left', E125} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V175) -> begin (V177 = begin (V176 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V176} end), case V177 of {'Idris.Prelude.Types.Left', E127} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V179) -> begin (V195 = begin (V194 = ('erlang':'put'(V1, case V179 of {'Idris.Idris.REPLOpts.MkREPLOpts', E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142} -> (fun (V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V180, V181, {'Idris.Prelude.Types.Just', V172}, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193} end(E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V194} end), case V195 of {'Idris.Prelude.Types.Left', E143} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V197) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V172}} end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); {'Idris.Prelude.Types.Left', E145} -> (fun (V198) -> case V198 of {'Idris.Parser.Support.FileFail', E146} -> (fun (V199) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.FileErr', V7, V199}, V9)) end(E146)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.ParseFail', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V200) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--show_Show__Token'(V200)) end, fun (V201) -> fun (V202) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--showPrec_Show__Token'(V201, V202)) end end}, {'Idris.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V203) -> fun (V204) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--pretty_Pretty__Token'('erased', V204)) end end, fun (V205) -> fun (V206) -> fun (V207) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--prettyPrec_Pretty__Token'('erased', V206, V207)) end end end}}, ('un--getParseErrorLoc'(V7, V198)), V198}, V9)) end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V208) -> {'Idris.Prelude.Types.Right', V0} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processPackageOpts-8153'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V6 of 0 -> fun (V9) -> begin (V38 = begin (V37 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> V16 end end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), begin (V24 = (V21(V22))), (V23(V24)) end end end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), ((V28(V30))(V29)) end end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V32(V33))), (V34(V33)) end end end end}, fun (V35) -> fun (V36) -> V36 end end}, ('un--errorMsg'())))(V9))), {'Idris.Prelude.Types.Right', V37} end), case V38 of {'Idris.Prelude.Types.Left', E0} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V40) -> {'Idris.Prelude.Types.Right', 0} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V41) -> begin (V42 = (('un--processPackage'(V3, V2, V1, V4, V5, V7))(V41))), case V42 of {'Idris.Prelude.Types.Left', E2} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V44) -> {'Idris.Prelude.Types.Right', 0} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processPackageOpts-8135'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V5, V6, V7) -> case V5 of {'Idris.Prelude.Types.Just', E3} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V9, V10) -> case V7 of 0 -> fun (V11) -> begin (V40 = begin (V39 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, ('un--errorMsg'())))(V11))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E6} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V42) -> {'Idris.Prelude.Types.Right', 0} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V43) -> begin (V44 = (('un--processPackage'(V3, V2, V1, V9, V10, V6))(V43))), case V44 of {'Idris.Prelude.Types.Left', E8} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V46) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V47) -> {'Idris.Prelude.Types.Right', 1} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-8096'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, V4, 0} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-8073'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.ChangedModules', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-8051'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.OutputDir', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-8029'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.BuildDir', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-8007'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.Directive', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7985'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.SetCG', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7965'(V0, V1) -> case V1 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.Idris.Package.MkPFR', V2, [{'Idris.Idris.CommandLine.DebugElabCheck'} | V3], V4} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7943'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.DumpVMCode', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7921'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.DumpLifted', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7899'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.DumpCases', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7877'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.Logging', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7857'(V0, V1) -> case V1 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.Idris.Package.MkPFR', V2, [{'Idris.Idris.CommandLine.Timing'} | V3], V4} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7835'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.Color', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7813'(V0, V1, V2) -> case V2 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Idris.Package.MkPFR', V3, [{'Idris.Idris.CommandLine.ConsoleWidth', V0} | V4], V5} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7793'(V0, V1) -> case V1 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.Idris.Package.MkPFR', V2, [{'Idris.Idris.CommandLine.Verbose'} | V3], V4} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7773'(V0, V1) -> case V1 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.Idris.Package.MkPFR', V2, [{'Idris.Idris.CommandLine.Quiet'} | V3], V4} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterPackageOpts-7750'(V0, V1, V2, V3) -> case V3 of {'Idris.Idris.Package.MkPFR', E0, E1, E2} -> (fun (V4, V5, V6) -> {'Idris.Idris.Package.MkPFR', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V0}}, V5, V6} end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in processPackage-7493'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of [] -> fun (V13) -> ('un--runRepl'(V4, V3, V2, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__Maybe'('erased', 'erased', fun (V14) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V14)) end, case V8 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V27 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V13)) end; _ -> fun (V40) -> begin (V68 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V43, V44, V45)) end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> V47 end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> begin (V54 = (V51(V53))), begin (V55 = (V52(V53))), (V54(V55)) end end end end end end end}, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V58(V60))), ((V59(V61))(V60)) end end end end end end, fun (V62) -> fun (V63) -> fun (V64) -> begin (V65 = (V63(V64))), (V65(V64)) end end end end}, fun (V66) -> fun (V67) -> V67 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V40))), {'Idris.Prelude.Types.Right', V68} end end end.
'case--case block in case block in case block in processPackage-7377'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of [] -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> fun (V14) -> begin (V42 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> fun (V22) -> V21 end end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), begin (V29 = (V26(V27))), (V28(V29)) end end end end end end end}, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V32(V34))), ((V33(V35))(V34)) end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> begin (V39 = (V37(V38))), (V39(V38)) end end end end}, fun (V40) -> fun (V41) -> V41 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V14))), {'Idris.Prelude.Types.Right', V42} end end end.
'case--case block in case block in case block in processPackage-7285'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of [] -> fun (V13) -> ('un--install'(V4, V2, V8, V0, V13)) end; _ -> fun (V14) -> begin (V42 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> fun (V22) -> V21 end end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), begin (V29 = (V26(V27))), (V28(V29)) end end end end end end end}, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V32(V34))), ((V33(V35))(V34)) end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> begin (V39 = (V37(V38))), (V39(V38)) end end end end}, fun (V40) -> fun (V41) -> V41 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V14))), {'Idris.Prelude.Types.Right', V42} end end end.
'case--case block in case block in case block in processPackage-7193'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of [] -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> fun (V14) -> begin (V42 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> fun (V22) -> V21 end end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), begin (V29 = (V26(V27))), (V28(V29)) end end end end end end end}, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V32(V34))), ((V33(V35))(V34)) end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> begin (V39 = (V37(V38))), (V39(V38)) end end end end}, fun (V40) -> fun (V41) -> V41 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V14))), {'Idris.Prelude.Types.Right', V42} end end end.
'case--case block in case block in processPackage-7159'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V2 of {'Idris.Idris.CommandLine.Build'} -> (fun () -> fun (V12) -> begin (V13 = ('un--build'(V5, V4, V3, V9, V0, V12))), case V13 of {'Idris.Prelude.Types.Left', E0} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V15) -> case V15 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> begin (V43 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), begin (V30 = (V27(V28))), (V29(V30)) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), ((V34(V36))(V35)) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V38(V39))), (V40(V39)) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V12))), {'Idris.Prelude.Types.Right', V43} end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.Install'} -> (fun () -> fun (V44) -> begin (V45 = ('un--build'(V5, V4, V3, V9, V0, V44))), case V45 of {'Idris.Prelude.Types.Left', E2} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V47) -> case V47 of [] -> ('un--install'(V5, V3, V9, V0, V44)); _ -> begin (V75 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> V54 end end end, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V58(V60))), begin (V62 = (V59(V60))), (V61(V62)) end end end end end end end}, fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> begin (V68 = (V65(V67))), ((V66(V68))(V67)) end end end end end end, fun (V69) -> fun (V70) -> fun (V71) -> begin (V72 = (V70(V71))), (V72(V71)) end end end end}, fun (V73) -> fun (V74) -> V74 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V44))), {'Idris.Prelude.Types.Right', V75} end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.Typecheck'} -> (fun () -> fun (V76) -> begin (V77 = ('un--check'(V5, V4, V3, V9, V0, V76))), case V77 of {'Idris.Prelude.Types.Left', E4} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V79) -> case V79 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> begin (V107 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V82, V83, V84)) end end end end end, fun (V85) -> fun (V86) -> fun (V87) -> V86 end end end, fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> begin (V93 = (V90(V92))), begin (V94 = (V91(V92))), (V93(V94)) end end end end end end end}, fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> begin (V100 = (V97(V99))), ((V98(V100))(V99)) end end end end end end, fun (V101) -> fun (V102) -> fun (V103) -> begin (V104 = (V102(V103))), (V104(V103)) end end end end}, fun (V105) -> fun (V106) -> V106 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V76))), {'Idris.Prelude.Types.Right', V107} end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.Clean'} -> (fun () -> fun (V108) -> ('un--clean'(V5, V3, V9, V0, V108)) end end()); {'Idris.Idris.CommandLine.REPL'} -> (fun () -> fun (V109) -> begin (V110 = ('un--build'(V5, V4, V3, V9, V0, V109))), case V110 of {'Idris.Prelude.Types.Left', E6} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V112) -> case V112 of [] -> ('un--runRepl'(V5, V4, V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__Maybe'('erased', 'erased', fun (V113) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V113)) end, case V9 of {'Idris.Idris.Package.MkPkgDesc', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138) -> V126 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V109)); _ -> begin (V166 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V141, V142, V143)) end end end end end, fun (V144) -> fun (V145) -> fun (V146) -> V145 end end end, fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> begin (V152 = (V149(V151))), begin (V153 = (V150(V151))), (V152(V153)) end end end end end end end}, fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> begin (V159 = (V156(V158))), ((V157(V159))(V158)) end end end end end end, fun (V160) -> fun (V161) -> fun (V162) -> begin (V163 = (V161(V162))), (V163(V162)) end end end end}, fun (V164) -> fun (V165) -> V165 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V109))), {'Idris.Prelude.Types.Right', V166} end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processPackage-7116'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Right', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V8, V9) -> fun (V10) -> begin (V11 = ('un--addFields'(V5, V9, ('un--initPkgDesc'(V8)), V10))), case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> begin (V42 = (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end, fun () -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Context':'un--setBuildDir'(V5, V15, V16)) end end end, case V13 of {'Idris.Idris.Package.MkPkgDesc', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V34 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V10))), case V42 of {'Idris.Prelude.Types.Left', E30} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V44) -> begin (V70 = ('Idris.Idris2.Core.Context':'un--setOutputDir'(V5, case V13 of {'Idris.Idris.Package.MkPkgDesc', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56} -> (fun (V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69) -> V63 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V10))), case V70 of {'Idris.Prelude.Types.Left', E57} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V72) -> case V2 of {'Idris.Idris.CommandLine.Build'} -> (fun () -> begin (V73 = ('un--build'(V5, V4, V3, V13, V0, V10))), case V73 of {'Idris.Prelude.Types.Left', E59} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V75) -> case V75 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> begin (V103 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V78, V79, V80)) end end end end end, fun (V81) -> fun (V82) -> fun (V83) -> V82 end end end, fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> begin (V89 = (V86(V88))), begin (V90 = (V87(V88))), (V89(V90)) end end end end end end end}, fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> begin (V96 = (V93(V95))), ((V94(V96))(V95)) end end end end end end, fun (V97) -> fun (V98) -> fun (V99) -> begin (V100 = (V98(V99))), (V100(V99)) end end end end}, fun (V101) -> fun (V102) -> V102 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V10))), {'Idris.Prelude.Types.Right', V103} end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.CommandLine.Install'} -> (fun () -> begin (V104 = ('un--build'(V5, V4, V3, V13, V0, V10))), case V104 of {'Idris.Prelude.Types.Left', E61} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V106) -> case V106 of [] -> ('un--install'(V5, V3, V13, V0, V10)); _ -> begin (V134 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V109, V110, V111)) end end end end end, fun (V112) -> fun (V113) -> fun (V114) -> V113 end end end, fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> begin (V120 = (V117(V119))), begin (V121 = (V118(V119))), (V120(V121)) end end end end end end end}, fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> begin (V127 = (V124(V126))), ((V125(V127))(V126)) end end end end end end, fun (V128) -> fun (V129) -> fun (V130) -> begin (V131 = (V129(V130))), (V131(V130)) end end end end}, fun (V132) -> fun (V133) -> V133 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V10))), {'Idris.Prelude.Types.Right', V134} end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.CommandLine.Typecheck'} -> (fun () -> begin (V135 = ('un--check'(V5, V4, V3, V13, V0, V10))), case V135 of {'Idris.Prelude.Types.Left', E63} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V137) -> case V137 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> begin (V165 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V140, V141, V142)) end end end end end, fun (V143) -> fun (V144) -> fun (V145) -> V144 end end end, fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> begin (V151 = (V148(V150))), begin (V152 = (V149(V150))), (V151(V152)) end end end end end end end}, fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> begin (V158 = (V155(V157))), ((V156(V158))(V157)) end end end end end end, fun (V159) -> fun (V160) -> fun (V161) -> begin (V162 = (V160(V161))), (V162(V161)) end end end end}, fun (V163) -> fun (V164) -> V164 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V10))), {'Idris.Prelude.Types.Right', V165} end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.CommandLine.Clean'} -> (fun () -> ('un--clean'(V5, V3, V13, V0, V10)) end()); {'Idris.Idris.CommandLine.REPL'} -> (fun () -> begin (V166 = ('un--build'(V5, V4, V3, V13, V0, V10))), case V166 of {'Idris.Prelude.Types.Left', E65} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V168) -> case V168 of [] -> ('un--runRepl'(V5, V4, V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__Maybe'('erased', 'erased', fun (V169) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V169)) end, case V13 of {'Idris.Idris.Package.MkPkgDesc', E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91} -> (fun (V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194) -> V182 end(E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V10)); _ -> begin (V222 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V197, V198, V199)) end end end end end, fun (V200) -> fun (V201) -> fun (V202) -> V201 end end end, fun (V203) -> fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> begin (V208 = (V205(V207))), begin (V209 = (V206(V207))), (V208(V209)) end end end end end end end}, fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> fun (V214) -> begin (V215 = (V212(V214))), ((V213(V215))(V214)) end end end end end end, fun (V216) -> fun (V217) -> fun (V218) -> begin (V219 = (V217(V218))), (V219(V218)) end end end end}, fun (V220) -> fun (V221) -> V221 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V10))), {'Idris.Prelude.Types.Right', V222} end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E92} -> (fun (V223) -> case V223 of {'Idris.Parser.Support.FileFail', E93} -> (fun (V224) -> fun (V225) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.FileErr', V1, V224}, V225)) end end(E93)); _ -> fun (V226) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.ParseFail', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V227) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--show_Show__Token'(V227)) end, fun (V228) -> fun (V229) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--showPrec_Show__Token'(V228, V229)) end end}, {'Idris.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V230) -> fun (V231) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--pretty_Pretty__Token'('erased', V231)) end end, fun (V232) -> fun (V233) -> fun (V234) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--prettyPrec_Pretty__Token'('erased', V233, V234)) end end end}}, ('un--getParseErrorLoc'(V1, V223)), V223}, V226)) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processPackage-7030'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> fun (V7) -> begin (V36 = begin (V35 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Packages must have an \x{27}.ipkg\x{27} extension: "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V1)), <<"."/utf8>>))))))(V7))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E0} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V38) -> begin (V66 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> V45 end end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), begin (V53 = (V50(V51))), (V52(V53)) end end end end end end end}, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V56(V58))), ((V57(V59))(V58)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V61(V62))), (V63(V62)) end end end end}, fun (V64) -> fun (V65) -> V65 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V7))), {'Idris.Prelude.Types.Right', V66} end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V67) -> begin (V71 = begin (V70 = ('Idris.Idris2.Parser.Package':'un--parseFile'('erased', V1, {'Idris.Text.Parser.Core.SeqEat', 0, ('un--parsePkgDesc'(V1)), fun () -> fun (V68) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--eoi'()), fun () -> fun (V69) -> {'Idris.Text.Parser.Core.Empty', V68} end end} end end}, V67))), {'Idris.Prelude.Types.Right', V70} end), case V71 of {'Idris.Prelude.Types.Left', E2} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V73) -> case V73 of {'Idris.Prelude.Types.Right', E4} -> (fun (V74) -> case V74 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V75, V76) -> begin (V77 = ('un--addFields'(V5, V76, ('un--initPkgDesc'(V75)), V67))), case V77 of {'Idris.Prelude.Types.Left', E7} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V79) -> begin (V108 = (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V80) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end, fun () -> fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Context':'un--setBuildDir'(V5, V81, V82)) end end end, case V79 of {'Idris.Idris.Package.MkPkgDesc', E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107) -> V100 end(E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V67))), case V108 of {'Idris.Prelude.Types.Left', E34} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V110) -> begin (V136 = ('Idris.Idris2.Core.Context':'un--setOutputDir'(V5, case V79 of {'Idris.Idris.Package.MkPkgDesc', E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60} -> (fun (V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135) -> V129 end(E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V67))), case V136 of {'Idris.Prelude.Types.Left', E61} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V138) -> case V2 of {'Idris.Idris.CommandLine.Build'} -> (fun () -> begin (V139 = ('un--build'(V5, V4, V3, V79, V0, V67))), case V139 of {'Idris.Prelude.Types.Left', E63} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V141) -> case V141 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> begin (V169 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V142) -> fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V144, V145, V146)) end end end end end, fun (V147) -> fun (V148) -> fun (V149) -> V148 end end end, fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> begin (V155 = (V152(V154))), begin (V156 = (V153(V154))), (V155(V156)) end end end end end end end}, fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> begin (V162 = (V159(V161))), ((V160(V162))(V161)) end end end end end end, fun (V163) -> fun (V164) -> fun (V165) -> begin (V166 = (V164(V165))), (V166(V165)) end end end end}, fun (V167) -> fun (V168) -> V168 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V67))), {'Idris.Prelude.Types.Right', V169} end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.CommandLine.Install'} -> (fun () -> begin (V170 = ('un--build'(V5, V4, V3, V79, V0, V67))), case V170 of {'Idris.Prelude.Types.Left', E65} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V172) -> case V172 of [] -> ('un--install'(V5, V3, V79, V0, V67)); _ -> begin (V200 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V175, V176, V177)) end end end end end, fun (V178) -> fun (V179) -> fun (V180) -> V179 end end end, fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> begin (V186 = (V183(V185))), begin (V187 = (V184(V185))), (V186(V187)) end end end end end end end}, fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> begin (V193 = (V190(V192))), ((V191(V193))(V192)) end end end end end end, fun (V194) -> fun (V195) -> fun (V196) -> begin (V197 = (V195(V196))), (V197(V196)) end end end end}, fun (V198) -> fun (V199) -> V199 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V67))), {'Idris.Prelude.Types.Right', V200} end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.CommandLine.Typecheck'} -> (fun () -> begin (V201 = ('un--check'(V5, V4, V3, V79, V0, V67))), case V201 of {'Idris.Prelude.Types.Left', E67} -> (fun (V202) -> {'Idris.Prelude.Types.Left', V202} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V203) -> case V203 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> begin (V231 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V206, V207, V208)) end end end end end, fun (V209) -> fun (V210) -> fun (V211) -> V210 end end end, fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> begin (V217 = (V214(V216))), begin (V218 = (V215(V216))), (V217(V218)) end end end end end end end}, fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> fun (V223) -> begin (V224 = (V221(V223))), ((V222(V224))(V223)) end end end end end end, fun (V225) -> fun (V226) -> fun (V227) -> begin (V228 = (V226(V227))), (V228(V227)) end end end end}, fun (V229) -> fun (V230) -> V230 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V67))), {'Idris.Prelude.Types.Right', V231} end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.CommandLine.Clean'} -> (fun () -> ('un--clean'(V5, V3, V79, V0, V67)) end()); {'Idris.Idris.CommandLine.REPL'} -> (fun () -> begin (V232 = ('un--build'(V5, V4, V3, V79, V0, V67))), case V232 of {'Idris.Prelude.Types.Left', E69} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V234) -> case V234 of [] -> ('un--runRepl'(V5, V4, V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__Maybe'('erased', 'erased', fun (V235) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V235)) end, case V79 of {'Idris.Idris.Package.MkPkgDesc', E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95} -> (fun (V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260) -> V248 end(E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V67)); _ -> begin (V288 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V261) -> fun (V262) -> fun (V263) -> fun (V264) -> fun (V265) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V263, V264, V265)) end end end end end, fun (V266) -> fun (V267) -> fun (V268) -> V267 end end end, fun (V269) -> fun (V270) -> fun (V271) -> fun (V272) -> fun (V273) -> begin (V274 = (V271(V273))), begin (V275 = (V272(V273))), (V274(V275)) end end end end end end end}, fun (V276) -> fun (V277) -> fun (V278) -> fun (V279) -> fun (V280) -> begin (V281 = (V278(V280))), ((V279(V281))(V280)) end end end end end end, fun (V282) -> fun (V283) -> fun (V284) -> begin (V285 = (V283(V284))), (V285(V284)) end end end end}, fun (V286) -> fun (V287) -> V287 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V67))), {'Idris.Prelude.Types.Right', V288} end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); {'Idris.Prelude.Types.Left', E96} -> (fun (V289) -> case V289 of {'Idris.Parser.Support.FileFail', E97} -> (fun (V290) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.FileErr', V1, V290}, V67)) end(E97)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.ParseFail', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V291) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--show_Show__Token'(V291)) end, fun (V292) -> fun (V293) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--showPrec_Show__Token'(V292, V293)) end end}, {'Idris.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V294) -> fun (V295) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--pretty_Pretty__Token'('erased', V295)) end end, fun (V296) -> fun (V297) -> fun (V298) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--prettyPrec_Pretty__Token'('erased', V297, V298)) end end end}}, ('un--getParseErrorLoc'(V1, V289)), V289}, V67)) end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--runRepl-6979'(V0, V1, V2, V3, V4, V5) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> fun (V8) -> begin (V9 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V3, V4, V2, V5, V1, V7, V8))), case V9 of {'Idris.Prelude.Types.Left', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V11) -> (('Idris.Idris2.Idris.REPL':'un--displayErrors'(V3, V4, V2, V5, V1, V11))(V8)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--clean-6731'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> begin (V45 = case case V4 of {'Idris.Core.Context.MkDefs', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V14 end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E1, E2, E3, E4, E5, E6, E7, E8, E9} -> (fun (V36, V37, V38, V39, V40, V41, V42, V43, V44) -> V36 end(E1, E2, E3, E4, E5, E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V55 = ('Idris.Idris2.Utils.Path':'un--</>'(V9, ('Idris.Idris2.Utils.Path':'un--</>'(case V45 of {'Idris.Core.Options.MkDirs', E36, E37, E38, E39, E40, E41, E42, E43, E44} -> (fun (V46, V47, V48, V49, V50, V51, V52, V53, V54) -> V48 end(E36, E37, E38, E39, E40, E41, E42, E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, <<"ttc"/utf8>>))))), begin (V56 = ('Idris.Idris2.Utils.Path':'un--</>'(V9, ('Idris.Idris2.Core.Options':'un--outputDirWithDefault'(V45))))), begin (V63 = ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', fun (V57) -> fun (V58) -> begin (V59 = ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V58))), begin (V60 = ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V58))), ('Idris.Idris2.Data.StringTrie':'un--insertWith'('erased', ('Idris.Idris2.Data.List':'un--reverse'('erased', V59)), fun (V61) -> ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> [V60 | []] end, fun () -> fun (V62) -> [V60 | V62] end end, V61)) end, V57)) end end end end, ('Idris.Idris2.Data.StringTrie':'un--empty'('erased')), V7))), fun (V64) -> begin (V88 = ('un--foldWithKeysC'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.Interfaces':'dn--un--<+>_Semigroup__(|Unit,MkUnit|)'(V65, V66)) end end, ('Idris.Idris2.Prelude.Interfaces':'dn--un--neutral_Monoid__(|Unit,MkUnit|)'())}, fun (V67) -> fun (V68) -> ('nested--22289-6562--in--un--deleteFolder'(V0, V1, V2, V3, V55, V67, V68)) end end, fun (V69) -> fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V72) -> case V72 of {'Idris.Prelude.Types.Left', E45} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V74) -> {'Idris.Prelude.Types.Right', (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V77, V78, V79)) end end end end end, fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V82, V83, V84)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V85) -> fun (V86) -> ('Idris.Idris2.Prelude.Interfaces':'dn--un--<+>_Semigroup__(|Unit,MkUnit|)'(V85, V86)) end end, ('Idris.Idris2.Prelude.Interfaces':'dn--un--neutral_Monoid__(|Unit,MkUnit|)'())}}))(V74))} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V87) -> ('nested--22289-6563--in--un--deleteBin'(V0, V1, V2, V3, V55, V69, V87)) end, V70, [])), V71)) end end end, V63, V64))), case V88 of {'Idris.Prelude.Types.Left', E47} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V90) -> begin (V91 = ('nested--22289-6562--in--un--deleteFolder'(V0, V1, V2, V3, V55, [], V64))), case V91 of {'Idris.Prelude.Types.Left', E49} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V93) -> begin (V122 = (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V94) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end, fun () -> fun (V95) -> fun (V96) -> ('nested--22289-6561--in--un--delete'(V0, V1, V2, V3, ('Idris.Idris2.Utils.Path':'un--</>'(V56, V95)), V96)) end end end, case V1 of {'Idris.Idris.Package.MkPkgDesc', E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75} -> (fun (V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121) -> V110 end(E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V64))), case V122 of {'Idris.Prelude.Types.Left', E76} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V124) -> (('un--runScript'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102} -> (fun (V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149) -> V149 end(E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V64)) end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V150) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t get current directory"/utf8>>}, V150)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--clean-6674'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V9, V10) -> {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V10, V9}} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--clean,delete-6578'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Right', E0} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkUnit'} -> (fun () -> fun (V7) -> begin (V35 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Removed: "/utf8>>, V4))))(V7))), {'Idris.Prelude.Types.Right', V35} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V36) -> fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--foldWithKeysC,go-6501'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> begin (V12 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V6, [V10 | []]))), fun (V13) -> begin (V14 = ('nested--22188-6466--in--un--go'('erased', V1, 'erased', V3, V4, V12, V11, V13))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V17 = ((V4(V12))(V13))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Right', case V1 of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E6, E7} -> (fun (V20, V21) -> ((V20(case V1 of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E8, E9} -> (fun (V22, V23) -> ((V22(V8))(V16)) end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V19)) end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--check-6280'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V6 of [] -> fun (V8) -> begin (V34 = (('un--runScript'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V29 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V8))), case V34 of {'Idris.Prelude.Types.Left', E27} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V36) -> {'Idris.Prelude.Types.Right', []} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V37) -> {'Idris.Prelude.Types.Right', V6} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in install-6083'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of 0 -> fun (V15) -> begin (V67 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V16) -> ('un--installFrom'(V3, case V1 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V17 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Utils.Path':'un--</>'(V8, V5)), ('Idris.Idris2.Utils.Path':'un--</>'(V10, case V1 of {'Idris.Idris.Package.MkPkgDesc', E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66) -> V42 end(E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V16)) end, V7, []))(V15))), case V67 of {'Idris.Prelude.Types.Left', E50} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V69) -> begin (V98 = begin (V97 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V72, V73, V74)) end end end end end, fun (V75) -> fun (V76) -> fun (V77) -> V76 end end end, fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> begin (V83 = (V80(V82))), begin (V84 = (V81(V82))), (V83(V84)) end end end end end end end}, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> begin (V90 = (V87(V89))), ((V88(V90))(V89)) end end end end end end, fun (V91) -> fun (V92) -> fun (V93) -> begin (V94 = (V92(V93))), (V94(V93)) end end end end}, fun (V95) -> fun (V96) -> V96 end end}, V8))(V15))), {'Idris.Prelude.Types.Right', V97} end), case V98 of {'Idris.Prelude.Types.Left', E52} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V100) -> (('un--runScript'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78} -> (fun (V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125) -> V123 end(E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V15)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V126) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t change directory to "/utf8>>, case V1 of {'Idris.Idris.Package.MkPkgDesc', E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103} -> (fun (V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151) -> V127 end(E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V126)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in install-6043'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Right', E0} -> (fun (V13) -> fun (V14) -> begin (V68 = begin (V67 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> fun (V22) -> V21 end end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), begin (V29 = (V26(V27))), (V28(V29)) end end end end end end end}, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V32(V34))), ((V33(V35))(V34)) end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> begin (V39 = (V37(V38))), (V39(V38)) end end end end}, fun (V40) -> fun (V41) -> V41 end end}, case V1 of {'Idris.Idris.Package.MkPkgDesc', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66) -> V42 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14))), {'Idris.Prelude.Types.Right', V67} end), case V68 of {'Idris.Prelude.Types.Left', E26} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V70) -> case V70 of 0 -> begin (V122 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V71) -> ('un--installFrom'(V3, case V1 of {'Idris.Idris.Package.MkPkgDesc', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96) -> V72 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Utils.Path':'un--</>'(V8, V5)), ('Idris.Idris2.Utils.Path':'un--</>'(V10, case V1 of {'Idris.Idris.Package.MkPkgDesc', E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77} -> (fun (V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121) -> V97 end(E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V71)) end, V7, []))(V14))), case V122 of {'Idris.Prelude.Types.Left', E78} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V124) -> begin (V153 = begin (V152 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V127, V128, V129)) end end end end end, fun (V130) -> fun (V131) -> fun (V132) -> V131 end end end, fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> begin (V138 = (V135(V137))), begin (V139 = (V136(V137))), (V138(V139)) end end end end end end end}, fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> begin (V145 = (V142(V144))), ((V143(V145))(V144)) end end end end end end, fun (V146) -> fun (V147) -> fun (V148) -> begin (V149 = (V147(V148))), (V149(V148)) end end end end}, fun (V150) -> fun (V151) -> V151 end end}, V8))(V14))), {'Idris.Prelude.Types.Right', V152} end), case V153 of {'Idris.Prelude.Types.Left', E80} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V155) -> (('un--runScript'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106} -> (fun (V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180) -> V178 end(E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14)) end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t change directory to "/utf8>>, case V1 of {'Idris.Idris.Package.MkPkgDesc', E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131} -> (fun (V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205) -> V181 end(E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Left', E132} -> (fun (V206) -> fun (V207) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t make directory "/utf8>>, case V1 of {'Idris.Idris.Package.MkPkgDesc', E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157} -> (fun (V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232) -> V208 end(E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V207)) end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in install-6009'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of 0 -> fun (V12) -> begin (V39 = begin (V38 = (('Idris.Idris2.Core.Directory':'un--mkdirAll'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V13 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V12))), {'Idris.Prelude.Types.Right', V38} end), case V39 of {'Idris.Prelude.Types.Left', E25} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V41) -> case V41 of {'Idris.Prelude.Types.Right', E27} -> (fun (V42) -> begin (V96 = begin (V95 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> V49 end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V53(V55))), begin (V57 = (V54(V55))), (V56(V57)) end end end end end end end}, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V60(V62))), ((V61(V63))(V62)) end end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> begin (V67 = (V65(V66))), (V67(V66)) end end end end}, fun (V68) -> fun (V69) -> V69 end end}, case V1 of {'Idris.Idris.Package.MkPkgDesc', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94) -> V70 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V12))), {'Idris.Prelude.Types.Right', V95} end), case V96 of {'Idris.Prelude.Types.Left', E53} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V98) -> case V98 of 0 -> begin (V150 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V99) -> ('un--installFrom'(V3, case V1 of {'Idris.Idris.Package.MkPkgDesc', E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79} -> (fun (V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124) -> V100 end(E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Utils.Path':'un--</>'(V8, V5)), ('Idris.Idris2.Utils.Path':'un--</>'(V10, case V1 of {'Idris.Idris.Package.MkPkgDesc', E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104} -> (fun (V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149) -> V125 end(E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V99)) end, V7, []))(V12))), case V150 of {'Idris.Prelude.Types.Left', E105} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V152) -> begin (V181 = begin (V180 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V155, V156, V157)) end end end end end, fun (V158) -> fun (V159) -> fun (V160) -> V159 end end end, fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> begin (V166 = (V163(V165))), begin (V167 = (V164(V165))), (V166(V167)) end end end end end end end}, fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> begin (V173 = (V170(V172))), ((V171(V173))(V172)) end end end end end end, fun (V174) -> fun (V175) -> fun (V176) -> begin (V177 = (V175(V176))), (V177(V176)) end end end end}, fun (V178) -> fun (V179) -> V179 end end}, V8))(V12))), {'Idris.Prelude.Types.Right', V180} end), case V181 of {'Idris.Prelude.Types.Left', E107} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V183) -> (('un--runScript'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133} -> (fun (V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208) -> V206 end(E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V12)) end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t change directory to "/utf8>>, case V1 of {'Idris.Idris.Package.MkPkgDesc', E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158} -> (fun (V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233) -> V209 end(E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); {'Idris.Prelude.Types.Left', E159} -> (fun (V234) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t make directory "/utf8>>, case V1 of {'Idris.Idris.Package.MkPkgDesc', E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184} -> (fun (V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259) -> V235 end(E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V12)) end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V260) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t change directory to "/utf8>>, V10))}, V260)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--install-5974'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> begin (V54 = ('Idris.Idris2.Utils.Path':'un--</>'(case case case V4 of {'Idris.Core.Context.MkDefs', E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V14 end(E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E10, E11, E12, E13, E14, E15, E16, E17, E18} -> (fun (V36, V37, V38, V39, V40, V41, V42, V43, V44) -> V36 end(E10, E11, E12, E13, E14, E15, E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkDirs', E1, E2, E3, E4, E5, E6, E7, E8, E9} -> (fun (V45, V46, V47, V48, V49, V50, V51, V52, V53) -> V49 end(E1, E2, E3, E4, E5, E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"idris2-"/utf8>>, ('Idris.Idris2.Idris.Version':'un--showVersion'(1, ('Idris.Idris2.Idris.Version':'un--version'())))))))), fun (V55) -> begin (V84 = begin (V83 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V58, V59, V60)) end end end end end, fun (V61) -> fun (V62) -> fun (V63) -> V62 end end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> begin (V69 = (V66(V68))), begin (V70 = (V67(V68))), (V69(V70)) end end end end end end end}, fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> begin (V76 = (V73(V75))), ((V74(V76))(V75)) end end end end end end, fun (V77) -> fun (V78) -> fun (V79) -> begin (V80 = (V78(V79))), (V80(V79)) end end end end}, fun (V81) -> fun (V82) -> V82 end end}, V54))(V55))), {'Idris.Prelude.Types.Right', V83} end), case V84 of {'Idris.Prelude.Types.Left', E45} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V86) -> case V86 of 0 -> begin (V113 = begin (V112 = (('Idris.Idris2.Core.Directory':'un--mkdirAll'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71} -> (fun (V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111) -> V87 end(E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V55))), {'Idris.Prelude.Types.Right', V112} end), case V113 of {'Idris.Prelude.Types.Left', E72} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V115) -> case V115 of {'Idris.Prelude.Types.Right', E74} -> (fun (V116) -> begin (V170 = begin (V169 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V119, V120, V121)) end end end end end, fun (V122) -> fun (V123) -> fun (V124) -> V123 end end end, fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> begin (V130 = (V127(V129))), begin (V131 = (V128(V129))), (V130(V131)) end end end end end end end}, fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> begin (V137 = (V134(V136))), ((V135(V137))(V136)) end end end end end end, fun (V138) -> fun (V139) -> fun (V140) -> begin (V141 = (V139(V140))), (V141(V140)) end end end end}, fun (V142) -> fun (V143) -> V143 end end}, case V1 of {'Idris.Idris.Package.MkPkgDesc', E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99} -> (fun (V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168) -> V144 end(E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V55))), {'Idris.Prelude.Types.Right', V169} end), case V170 of {'Idris.Prelude.Types.Left', E100} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V172) -> case V172 of 0 -> begin (V224 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V173) -> ('un--installFrom'(V3, case V1 of {'Idris.Idris.Package.MkPkgDesc', E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126} -> (fun (V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198) -> V174 end(E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Utils.Path':'un--</>'(V9, V5)), ('Idris.Idris2.Utils.Path':'un--</>'(V54, case V1 of {'Idris.Idris.Package.MkPkgDesc', E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151} -> (fun (V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223) -> V199 end(E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V173)) end, V7, []))(V55))), case V224 of {'Idris.Prelude.Types.Left', E152} -> (fun (V225) -> {'Idris.Prelude.Types.Left', V225} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V226) -> begin (V255 = begin (V254 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> fun (V231) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V229, V230, V231)) end end end end end, fun (V232) -> fun (V233) -> fun (V234) -> V233 end end end, fun (V235) -> fun (V236) -> fun (V237) -> fun (V238) -> fun (V239) -> begin (V240 = (V237(V239))), begin (V241 = (V238(V239))), (V240(V241)) end end end end end end end}, fun (V242) -> fun (V243) -> fun (V244) -> fun (V245) -> fun (V246) -> begin (V247 = (V244(V246))), ((V245(V247))(V246)) end end end end end end, fun (V248) -> fun (V249) -> fun (V250) -> begin (V251 = (V249(V250))), (V251(V250)) end end end end}, fun (V252) -> fun (V253) -> V253 end end}, V9))(V55))), {'Idris.Prelude.Types.Right', V254} end), case V255 of {'Idris.Prelude.Types.Left', E154} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V257) -> (('un--runScript'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180} -> (fun (V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282) -> V280 end(E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V55)) end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t change directory to "/utf8>>, case V1 of {'Idris.Idris.Package.MkPkgDesc', E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205} -> (fun (V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307) -> V283 end(E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); {'Idris.Prelude.Types.Left', E206} -> (fun (V308) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t make directory "/utf8>>, case V1 of {'Idris.Idris.Package.MkPkgDesc', E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231} -> (fun (V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333) -> V309 end(E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V55)) end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t change directory to "/utf8>>, V54))}, V55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V334) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t get current directory"/utf8>>}, V334)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in installFrom-5803'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Prelude.Types.Right', E0} -> (fun (V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t copy file "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V6, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" to "/utf8>>, V9))))))}, V18)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--installFrom-5751'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Right', E0} -> (fun (V12) -> fun (V13) -> begin (V42 = begin (V41 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V16, V17, V18)) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> V20 end end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V24(V26))), begin (V28 = (V25(V26))), (V27(V28)) end end end end end end end}, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V31(V33))), ((V32(V34))(V33)) end end end end end end, fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V36(V37))), (V38(V37)) end end end end}, fun (V39) -> fun (V40) -> V40 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Installing "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V6, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" to "/utf8>>, V9))))))))(V13))), {'Idris.Prelude.Types.Right', V41} end), case V42 of {'Idris.Prelude.Types.Left', E1} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V44) -> begin (V46 = begin (V45 = ('un--copyFile'(V6, V10, V13))), {'Idris.Prelude.Types.Right', V45} end), case V46 of {'Idris.Prelude.Types.Left', E3} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V48) -> case V48 of {'Idris.Prelude.Types.Right', E5} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E5)); {'Idris.Prelude.Types.Left', E6} -> (fun (V50) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t copy file "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V6, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" to "/utf8>>, V9))))))}, V13)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Left', E7} -> (fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t make directories "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V53) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V53)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V54, V55)) end end}, V7))))}, V52)) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--copyFile-5695'(V0, V1, V2) -> case V2 of {'Idris.Prelude.Types.Right', E0} -> (fun (V3) -> ('Idris.Idris2.Utils.Binary':'un--writeToFile'(V0, V3)) end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V4) -> fun (V5) -> {'Idris.Prelude.Types.Left', V4} end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in build-5611'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> begin (V37 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V11) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V11)) end, case V1 of {'Idris.Idris.Package.MkPkgDesc', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V23 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), fun (V38) -> ('un--compileLibHelper'(V4, V3, V2, V10, V37, V5, V38)) end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in build-5555'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> case V9 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V10, V11) -> begin (V12 = {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--miAsNamespace'(V10)), {'Idris.Core.Name.UN', <<"main"/utf8>>}}), fun (V13) -> ('un--compileMain'(V4, V3, V2, V12, V11, V7, V13)) end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V14) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.FC':'un--emptyFC'()), <<"No main module given"/utf8>>}, V14)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in build-5516'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> ('case--case block in case block in build-5555'(V0, V1, V2, V3, V4, V5, V6, V9, case V1 of {'Idris.Idris.Package.MkPkgDesc', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> V22 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--build-5475'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V6 of [] -> fun (V8) -> begin (V35 = begin (V9 = {'Idris.Builtin.MkPair', [], V7}), (('case--case block in build-5516'(V0, V1, V2, V3, V4, V7, V9, case V1 of {'Idris.Idris.Package.MkPkgDesc', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> V23 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V8)) end), case V35 of {'Idris.Prelude.Types.Left', E27} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V37) -> begin (V64 = begin (V38 = {'Idris.Builtin.MkPair', [], V7}), (('case--case block in build-5611'(V0, V1, V2, V3, V4, V7, V38, V37, case V1 of {'Idris.Idris.Package.MkPkgDesc', E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63) -> V53 end(E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V8)) end), case V64 of {'Idris.Prelude.Types.Left', E54} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V66) -> begin (V92 = (('un--runScript'(case V1 of {'Idris.Idris.Package.MkPkgDesc', E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91) -> V87 end(E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V8))), case V92 of {'Idris.Prelude.Types.Left', E81} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V94) -> {'Idris.Prelude.Types.Right', []} end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V95) -> {'Idris.Prelude.Types.Right', V6} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--prepareCompilation-5355'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Prelude.Types.Just', E0} -> (fun (V14) -> begin (V15 = ('un--filterChangedModules'(('Idris.Idris2.Data.List1':'un--forget'('erased', V14)), V11))), fun (V16) -> begin (V17 = (('Idris.Idris2.Idris.ModTree':'un--buildAll'(V4, V3, V2, V15))(V16))), case V17 of {'Idris.Prelude.Types.Left', E1} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V19, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V20) -> case V20 of {'Idris.Idris.ModTree.MkBuildMod', E3, E4, E5} -> (fun (V21, V22, V23) -> V22 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V15))}}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V24) -> begin (V25 = (('Idris.Idris2.Idris.ModTree':'un--buildAll'(V4, V3, V2, V11))(V24))), case V25 of {'Idris.Prelude.Types.Left', E6} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V27, {'Idris.Prelude.Types.Nothing'}}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--filterChangedModules-5259'(V0, V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V3, V4) -> begin (V5 = ('Idris.Idris2.Idris.ModTree':'un--filterUsedByMods'(V1, V4))), ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V3, V5)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processOptions-5123'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Right', E0} -> (fun (V5) -> fun (V6) -> begin (V7 = (('Idris.Idris2.Idris.SetOptions':'un--preOptions'(V3, V2, V5))(V6))), case V7 of {'Idris.Prelude.Types.Left', E1} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V0, V10}, V11)) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addFields-5037'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V5 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> {'Idris.Idris.Package.MkPkgDesc', V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V9, V10, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4874'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V0}}} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4826'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V0}}, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4778'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V0}}, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4730'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V0}}, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4682'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V0}}, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4634'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V0}}, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4590'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, {'Idris.Prelude.Types.Just', V0}, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4546'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, {'Idris.Prelude.Types.Just', V0}, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4502'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, {'Idris.Prelude.Types.Just', V0}, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4454'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V1, V0}}, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4412'(V0, V1, V2, V3, V4) -> case V1 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> {'Idris.Idris.Package.MkPkgDesc', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.Prelude.Types.Just', V0}, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4370'(V0, V1, V2, V3, V4) -> case V1 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> {'Idris.Idris.Package.MkPkgDesc', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, {'Idris.Prelude.Types.Just', V0}, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4298'(V0, V1, V2, V3, V4) -> case V1 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> {'Idris.Idris.Package.MkPkgDesc', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V0, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4254'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, V14, {'Idris.Prelude.Types.Just', V0}, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4210'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, V13, {'Idris.Prelude.Types.Just', V0}, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4166'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, V12, {'Idris.Prelude.Types.Just', V0}, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4122'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, V11, {'Idris.Prelude.Types.Just', V0}, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4078'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, V10, {'Idris.Prelude.Types.Just', V0}, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-4034'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, V9, {'Idris.Prelude.Types.Just', V0}, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-3990'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V8, {'Idris.Prelude.Types.Just', V0}, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-3948'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V7, V0, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addField-3906'(V0, V1, V2, V3, V4, V5) -> case V2 of {'Idris.Idris.Package.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.Package.MkPkgDesc', V6, V0, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--20509-4894--in--un--toSource'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> fun (V6) -> begin (V7 = ('Idris.Idris2.Core.Directory':'un--nsToSource'(V2, V4, V5, V6))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5, V9}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--18850-3266--in--un--strField'(V0, V1, V2) -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 0, ('Idris.Idris2.Parser.Rule.Common':'un--location'({'Idris.Parser.Lexer.Package.Token'})), fun (V3) -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--exactProperty'(V2)), fun () -> fun (V4) -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--equals'()), fun () -> fun (V5) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--stringLit'()), fun () -> fun (V6) -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, ('Idris.Idris2.Parser.Rule.Common':'un--location'({'Idris.Parser.Lexer.Package.Token'})), fun (V7) -> {'Idris.Text.Parser.Core.Empty', ((V1({'Idris.Core.FC.MkFC', V0, V3, V7}))(V6))} end} end end} end end} end end} end}.
'nested--24091-8225--in--un--loadDependencies'(V0, V1, V2, V3) -> ('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Context':'un--addPkg'(V2, V4, V5)) end end, V3)).
'nested--22188-6466--in--un--go'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V8) -> case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.These':'un--bifold'('erased', V1, V10))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--bitraverseC'('erased', 'erased', 'erased', 'erased', (V3(V5)), fun (V11) -> (('un--foldlC'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V19, V20, V21)) end end end end end}, fun (V22) -> fun (V23) -> case V23 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V24, V25) -> begin (V26 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V5, [V24 | []]))), fun (V27) -> begin (V28 = ('nested--22188-6466--in--un--go'('erased', V1, 'erased', V3, V4, V26, V25, V27))), case V28 of {'Idris.Prelude.Types.Left', E4} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V30) -> begin (V31 = ((V4(V26))(V27))), case V31 of {'Idris.Prelude.Types.Left', E6} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V33) -> {'Idris.Prelude.Types.Right', case V1 of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E8, E9} -> (fun (V34, V35) -> ((V34(case V1 of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E10, E11} -> (fun (V36, V37) -> ((V36(V22))(V30)) end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V33)) end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, case V1 of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E12, E13} -> (fun (V38, V39) -> V39 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(('Idris.Idris2.Data.StringMap':'un--toList'('erased', V11)))) end, V6)), V7)).
'nested--20509-4895--in--un--go'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> fun (V7) -> {'Idris.Prelude.Types.Right', V6} end; [E0 | E1] -> (fun (V8, V9) -> fun (V10) -> begin (V11 = (('un--addField'(V2, V3, V4, V8, V6))(V10))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> (('nested--20509-4895--in--un--go'(V0, V1, V2, V3, V4, V9, V13))(V10)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--22289-6562--in--un--deleteFolder'(V0, V1, V2, V3, V4, V5, V6) -> ('nested--22289-6561--in--un--delete'(V0, V1, V2, V3, ('Idris.Idris2.Utils.Path':'un--</>'(V4, ('Idris.Idris2.Utils.Path':'un--joinPath'(V5)))), V6)).
'nested--22289-6563--in--un--deleteBin'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Utils.Path':'un--</>'(V4, ('Idris.Idris2.Utils.Path':'un--</>'(('Idris.Idris2.Utils.Path':'un--joinPath'(V5)), V6))))), fun (V8) -> begin (V9 = ('nested--22289-6561--in--un--delete'(V0, V1, V2, V3, ('Idris.Idris2.Utils.Path':'un--<.>'(V7, <<"ttc"/utf8>>)), V8))), case V9 of {'Idris.Prelude.Types.Left', E0} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V11) -> ('nested--22289-6561--in--un--delete'(V0, V1, V2, V3, ('Idris.Idris2.Utils.Path':'un--<.>'(V7, <<"ttm"/utf8>>)), V8)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'nested--22289-6561--in--un--delete'(V0, V1, V2, V3, V4, V5) -> begin (V34 = begin (V33 = (('Idris.Idris2.Erlang.System.File':'un--removeFile'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), ((V24(V26))(V25)) end end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V28(V29))), (V30(V29)) end end end end}, fun (V31) -> fun (V32) -> V32 end end}, V4))(V5))), {'Idris.Prelude.Types.Right', V33} end), case V34 of {'Idris.Prelude.Types.Left', E0} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Right', E2} -> (fun (V37) -> case V37 of {'Idris.Builtin.MkUnit'} -> (fun () -> begin (V65 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V40, V41, V42)) end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> V44 end end end, fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> begin (V51 = (V48(V50))), begin (V52 = (V49(V50))), (V51(V52)) end end end end end end end}, fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V55(V57))), ((V56(V58))(V57)) end end end end end end, fun (V59) -> fun (V60) -> fun (V61) -> begin (V62 = (V60(V61))), (V62(V61)) end end end end}, fun (V63) -> fun (V64) -> V64 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Removed: "/utf8>>, V4))))(V5))), {'Idris.Prelude.Types.Right', V65} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); {'Idris.Prelude.Types.Left', E3} -> (fun (V66) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--runScript'(V0) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V1) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V2) -> case V2 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V3, V4) -> fun (V5) -> begin (V34 = begin (V33 = (('Idris.Idris2.Erlang.System':'un--system'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), ((V24(V26))(V25)) end end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V28(V29))), (V30(V29)) end end end end}, fun (V31) -> fun (V32) -> V32 end end}, V4))(V5))), {'Idris.Prelude.Types.Right', V33} end), case V34 of {'Idris.Prelude.Types.Left', E3} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V36) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(V36, 0)) of 0 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V3, <<"Script failed"/utf8>>}, V5)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--runRepl'(V0, V1, V2, V3, V4) -> begin (V5 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.UnifyState.UST'}, ('Idris.Idris2.Core.UnifyState':'un--initUState'()), V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Metadata.MD'}, ('Idris.Idris2.Core.Metadata':'un--initMetadata'()), V4))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> begin (V15 = case V3 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); {'Idris.Prelude.Types.Just', E4} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V0, V7, V1, V10, V2, V11, V4))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> (('Idris.Idris2.Idris.REPL':'un--displayErrors'(V0, V7, V1, V10, V2, V14))(V4)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> ('Idris.Idris2.Idris.REPL':'un--repl'(V0, V7, V1, V10, V2, V4)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--processPackageOpts'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Idris.Prelude.Types.Right', 1} end; [E12 | E13] -> (fun (V5, V6) -> case V5 of {'Idris.Idris.CommandLine.Package', E26, E27} -> (fun (V7, V8) -> case V6 of [] -> fun (V9) -> begin (V10 = (('un--processPackage'(V0, V1, V2, V7, V8, []))(V9))), case V10 of {'Idris.Prelude.Types.Left', E40} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V12) -> {'Idris.Prelude.Types.Right', 0} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V13) -> begin (V14 = (('un--filterPackageOpts'({'Idris.Idris.Package.MkPFR', {'Idris.Prelude.Types.Nothing'}, [], 1}, V3))(V13))), case V14 of {'Idris.Prelude.Types.Left', E28} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V16) -> case V16 of {'Idris.Idris.Package.MkPFR', E30, E31, E32} -> (fun (V17, V18, V19) -> case V17 of {'Idris.Prelude.Types.Just', E33} -> (fun (V20) -> case V20 of {'Idris.Builtin.MkPair', E34, E35} -> (fun (V21, V22) -> case V19 of 0 -> begin (V51 = begin (V50 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V25, V26, V27)) end end end end end, fun (V28) -> fun (V29) -> fun (V30) -> V29 end end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), begin (V37 = (V34(V35))), (V36(V37)) end end end end end end end}, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> begin (V43 = (V40(V42))), ((V41(V43))(V42)) end end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> begin (V47 = (V45(V46))), (V47(V46)) end end end end}, fun (V48) -> fun (V49) -> V49 end end}, ('un--errorMsg'())))(V13))), {'Idris.Prelude.Types.Right', V50} end), case V51 of {'Idris.Prelude.Types.Left', E36} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V53) -> {'Idris.Prelude.Types.Right', 0} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V54 = (('un--processPackage'(V0, V1, V2, V21, V22, V18))(V13))), case V54 of {'Idris.Prelude.Types.Left', E38} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V56) -> {'Idris.Prelude.Types.Right', 0} end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 1} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E26, E27)); _ -> fun (V57) -> begin (V58 = (('un--filterPackageOpts'({'Idris.Idris.Package.MkPFR', {'Idris.Prelude.Types.Nothing'}, [], 1}, V3))(V57))), case V58 of {'Idris.Prelude.Types.Left', E14} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V60) -> case V60 of {'Idris.Idris.Package.MkPFR', E16, E17, E18} -> (fun (V61, V62, V63) -> case V61 of {'Idris.Prelude.Types.Just', E19} -> (fun (V64) -> case V64 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V65, V66) -> case V63 of 0 -> begin (V95 = begin (V94 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V69, V70, V71)) end end end end end, fun (V72) -> fun (V73) -> fun (V74) -> V73 end end end, fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> begin (V80 = (V77(V79))), begin (V81 = (V78(V79))), (V80(V81)) end end end end end end end}, fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> begin (V87 = (V84(V86))), ((V85(V87))(V86)) end end end end end end, fun (V88) -> fun (V89) -> fun (V90) -> begin (V91 = (V89(V90))), (V91(V90)) end end end end}, fun (V92) -> fun (V93) -> V93 end end}, ('un--errorMsg'())))(V57))), {'Idris.Prelude.Types.Right', V94} end), case V95 of {'Idris.Prelude.Types.Left', E22} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V97) -> {'Idris.Prelude.Types.Right', 0} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V98 = (('un--processPackage'(V0, V1, V2, V65, V66, V62))(V57))), case V98 of {'Idris.Prelude.Types.Left', E24} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V100) -> {'Idris.Prelude.Types.Right', 0} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 1} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E12, E13)); _ -> fun (V101) -> begin (V102 = (('un--filterPackageOpts'({'Idris.Idris.Package.MkPFR', {'Idris.Prelude.Types.Nothing'}, [], 1}, V3))(V101))), case V102 of {'Idris.Prelude.Types.Left', E0} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V104) -> case V104 of {'Idris.Idris.Package.MkPFR', E2, E3, E4} -> (fun (V105, V106, V107) -> case V105 of {'Idris.Prelude.Types.Just', E5} -> (fun (V108) -> case V108 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V109, V110) -> case V107 of 0 -> begin (V139 = begin (V138 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V113, V114, V115)) end end end end end, fun (V116) -> fun (V117) -> fun (V118) -> V117 end end end, fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> begin (V124 = (V121(V123))), begin (V125 = (V122(V123))), (V124(V125)) end end end end end end end}, fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> begin (V131 = (V128(V130))), ((V129(V131))(V130)) end end end end end end, fun (V132) -> fun (V133) -> fun (V134) -> begin (V135 = (V133(V134))), (V135(V134)) end end end end}, fun (V136) -> fun (V137) -> V137 end end}, ('un--errorMsg'())))(V101))), {'Idris.Prelude.Types.Right', V138} end), case V139 of {'Idris.Prelude.Types.Left', E8} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V141) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V142 = (('un--processPackage'(V0, V1, V2, V109, V110, V106))(V101))), case V142 of {'Idris.Prelude.Types.Left', E10} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V144) -> {'Idris.Prelude.Types.Right', 0} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 1} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--processPackage'(V0, V1, V2, V3, V4, V5) -> ('case--processPackage-7030'(V5, V4, V3, V2, V1, V0, ('Idris.Idris2.Prelude.Basics':'un--not'(('Idris.Idris2.Data.Strings':'un--isSuffixOf'(<<".ipkg"/utf8>>, V4)))))).
'un--processOptions'(V0, V1, V2) -> case V2 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V3) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> case V4 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V5, V6) -> ('case--processOptions-5123'(V5, V6, V1, V0, ('Idris.Idris2.Idris.CommandLine':'un--getOpts'(('Idris.Idris2.Data.Strings':'un--words'(V6)))))) end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--prepareCompilation'(V0, V1, V2, V3, V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('un--addDeps'(V0, V3, V5))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V38 = (('un--processOptions'(V0, V2, case V3 of {'Idris.Idris.Package.MkPkgDesc', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V28 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5))), case V38 of {'Idris.Prelude.Types.Left', E29} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V40) -> begin (V41 = (('Idris.Idris2.Idris.SetOptions':'un--preOptions'(V0, V2, V4))(V5))), case V41 of {'Idris.Prelude.Types.Left', E31} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V43) -> begin (V69 = (('un--runScript'(case V3 of {'Idris.Idris.Package.MkPkgDesc', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68) -> V63 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5))), case V69 of {'Idris.Prelude.Types.Left', E58} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V71) -> begin (V150 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V72) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V72)) end, case V3 of {'Idris.Idris.Package.MkPkgDesc', E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84} -> (fun (V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97) -> V84 end(E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, fun () -> fun (V98) -> [('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V98)) | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V99) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V99)) end, case V3 of {'Idris.Idris.Package.MkPkgDesc', E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109} -> (fun (V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124) -> V111 end(E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))] end end, case V3 of {'Idris.Idris.Package.MkPkgDesc', E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134} -> (fun (V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149) -> V137 end(E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V151 = ('Idris.Idris2.Idris.ModTree':'un--getAllBuildMods'(V0, V1, V2, V150, V5))), case V151 of {'Idris.Prelude.Types.Left', E135} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V153) -> begin (V154 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V5))), case V154 of {'Idris.Prelude.Types.Left', E137} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V156) -> (('case--prepareCompilation-5355'(V4, V3, V2, V1, V0, V9, V12, V40, V43, V71, V150, V153, V156, case V156 of {'Idris.Core.Options.MkSessionOpts', E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152} -> (fun (V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170) -> V163 end(E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--parsePkgDesc'(V0) -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--exactProperty'(<<"package"/utf8>>)), fun () -> fun (V1) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--packageName'()), fun () -> fun (V2) -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, ('Idris.Idris2.Text.Parser':'un--many'('erased', 'erased', ('un--field'(V0)))), fun (V3) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Builtin.MkPair', V2, V3}} end} end end} end end}.
'un--installFrom'(V0, V1, V2, V3, V4) -> begin (V5 = ('Idris.Idris2.Utils.Path':'un--joinPath'(('Idris.Idris2.Data.List':'un--reverse'('erased', ('Idris.Idris2.Core.Name.Namespace':'un--unsafeUnfoldModuleIdent'(V4))))))), begin (V6 = ('Idris.Idris2.Utils.Path':'un--</>'(V2, ('Idris.Idris2.Utils.Path':'un--</>'(<<"ttc"/utf8>>, ('Idris.Idris2.Utils.Path':'un--<.>'(V5, <<"ttc"/utf8>>))))))), begin (V7 = ('Idris.Idris2.Data.List':'un--reverse'('erased', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'('erased', fun () -> [] end, ('Idris.Idris2.Data.List':'un--tail\x{27}'('erased', ('Idris.Idris2.Core.Name.Namespace':'un--unsafeUnfoldModuleIdent'(V4))))))))), begin (V8 = ('Idris.Idris2.Utils.Path':'un--joinPath'(V7))), begin (V9 = ('Idris.Idris2.Utils.Path':'un--</>'(V3, V8))), begin (V10 = ('Idris.Idris2.Utils.Path':'un--</>'(V3, ('Idris.Idris2.Utils.Path':'un--<.>'(V5, <<"ttc"/utf8>>))))), fun (V11) -> begin (V13 = begin (V12 = (('Idris.Idris2.Core.Directory':'un--mkdirAll'(V8))(V11))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E0} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V15) -> case V15 of {'Idris.Prelude.Types.Right', E2} -> (fun (V16) -> begin (V45 = begin (V44 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> V23 end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), begin (V31 = (V28(V29))), (V30(V31)) end end end end end end end}, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V34(V36))), ((V35(V37))(V36)) end end end end end end, fun (V38) -> fun (V39) -> fun (V40) -> begin (V41 = (V39(V40))), (V41(V40)) end end end end}, fun (V42) -> fun (V43) -> V43 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Installing "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V6, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" to "/utf8>>, V9))))))))(V11))), {'Idris.Prelude.Types.Right', V44} end), case V45 of {'Idris.Prelude.Types.Left', E3} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V47) -> begin (V49 = begin (V48 = ('un--copyFile'(V6, V10, V11))), {'Idris.Prelude.Types.Right', V48} end), case V49 of {'Idris.Prelude.Types.Left', E5} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V51) -> case V51 of {'Idris.Prelude.Types.Right', E7} -> (fun (V52) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E7)); {'Idris.Prelude.Types.Left', E8} -> (fun (V53) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t copy file "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V6, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" to "/utf8>>, V9))))))}, V11)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); {'Idris.Prelude.Types.Left', E9} -> (fun (V54) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t make directories "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V55) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V55)) end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V56, V57)) end end}, V7))))}, V11)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end end.
'un--install'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V53 = case case case V8 of {'Idris.Core.Context.MkDefs', E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> V13 end(E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V35 end(E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkDirs', E2, E3, E4, E5, E6, E7, E8, E9, E10} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52) -> V46 end(E2, E3, E4, E5, E6, E7, E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V79 = (('un--runScript'(case V2 of {'Idris.Idris.Package.MkPkgDesc', E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70} -> (fun (V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78) -> V75 end(E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V79 of {'Idris.Prelude.Types.Left', E71} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V81) -> begin (V160 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V82) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V82)) end, case V2 of {'Idris.Idris.Package.MkPkgDesc', E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97} -> (fun (V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107) -> V94 end(E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, fun () -> fun (V108) -> [('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V108)) | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V109) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V109)) end, case V2 of {'Idris.Idris.Package.MkPkgDesc', E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122} -> (fun (V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134) -> V121 end(E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))] end end, case V2 of {'Idris.Idris.Package.MkPkgDesc', E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147} -> (fun (V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159) -> V147 end(E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V189 = begin (V188 = (('Idris.Idris2.Erlang.System.Directory':'un--currentDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V163, V164, V165)) end end end end end, fun (V166) -> fun (V167) -> fun (V168) -> V167 end end end, fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> begin (V174 = (V171(V173))), begin (V175 = (V172(V173))), (V174(V175)) end end end end end end end}, fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> begin (V181 = (V178(V180))), ((V179(V181))(V180)) end end end end end end, fun (V182) -> fun (V183) -> fun (V184) -> begin (V185 = (V183(V184))), (V185(V184)) end end end end}, fun (V186) -> fun (V187) -> V187 end end}))(V4))), {'Idris.Prelude.Types.Right', V188} end), case V189 of {'Idris.Prelude.Types.Left', E148} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V191) -> case V191 of {'Idris.Prelude.Types.Just', E150} -> (fun (V192) -> begin (V237 = ('Idris.Idris2.Utils.Path':'un--</>'(case case case V8 of {'Idris.Core.Context.MkDefs', E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194} -> (fun (V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218) -> V197 end(E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E160, E161, E162, E163, E164, E165, E166, E167, E168} -> (fun (V219, V220, V221, V222, V223, V224, V225, V226, V227) -> V219 end(E160, E161, E162, E163, E164, E165, E166, E167, E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkDirs', E151, E152, E153, E154, E155, E156, E157, E158, E159} -> (fun (V228, V229, V230, V231, V232, V233, V234, V235, V236) -> V232 end(E151, E152, E153, E154, E155, E156, E157, E158, E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"idris2-"/utf8>>, ('Idris.Idris2.Idris.Version':'un--showVersion'(1, ('Idris.Idris2.Idris.Version':'un--version'())))))))), begin (V266 = begin (V265 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V238) -> fun (V239) -> fun (V240) -> fun (V241) -> fun (V242) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V240, V241, V242)) end end end end end, fun (V243) -> fun (V244) -> fun (V245) -> V244 end end end, fun (V246) -> fun (V247) -> fun (V248) -> fun (V249) -> fun (V250) -> begin (V251 = (V248(V250))), begin (V252 = (V249(V250))), (V251(V252)) end end end end end end end}, fun (V253) -> fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> begin (V258 = (V255(V257))), ((V256(V258))(V257)) end end end end end end, fun (V259) -> fun (V260) -> fun (V261) -> begin (V262 = (V260(V261))), (V262(V261)) end end end end}, fun (V263) -> fun (V264) -> V264 end end}, V237))(V4))), {'Idris.Prelude.Types.Right', V265} end), case V266 of {'Idris.Prelude.Types.Left', E195} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V268) -> case V268 of 0 -> begin (V295 = begin (V294 = (('Idris.Idris2.Core.Directory':'un--mkdirAll'(case V2 of {'Idris.Idris.Package.MkPkgDesc', E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221} -> (fun (V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293) -> V269 end(E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), {'Idris.Prelude.Types.Right', V294} end), case V295 of {'Idris.Prelude.Types.Left', E222} -> (fun (V296) -> {'Idris.Prelude.Types.Left', V296} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V297) -> case V297 of {'Idris.Prelude.Types.Right', E224} -> (fun (V298) -> begin (V352 = begin (V351 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> fun (V303) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V301, V302, V303)) end end end end end, fun (V304) -> fun (V305) -> fun (V306) -> V305 end end end, fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> begin (V312 = (V309(V311))), begin (V313 = (V310(V311))), (V312(V313)) end end end end end end end}, fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> begin (V319 = (V316(V318))), ((V317(V319))(V318)) end end end end end end, fun (V320) -> fun (V321) -> fun (V322) -> begin (V323 = (V321(V322))), (V323(V322)) end end end end}, fun (V324) -> fun (V325) -> V325 end end}, case V2 of {'Idris.Idris.Package.MkPkgDesc', E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249} -> (fun (V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350) -> V326 end(E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), {'Idris.Prelude.Types.Right', V351} end), case V352 of {'Idris.Prelude.Types.Left', E250} -> (fun (V353) -> {'Idris.Prelude.Types.Left', V353} end(E250)); {'Idris.Prelude.Types.Right', E251} -> (fun (V354) -> case V354 of 0 -> begin (V406 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V355) -> ('un--installFrom'(V0, case V2 of {'Idris.Idris.Package.MkPkgDesc', E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274, E275, E276} -> (fun (V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377, V378, V379, V380) -> V356 end(E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274, E275, E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Utils.Path':'un--</>'(V192, V53)), ('Idris.Idris2.Utils.Path':'un--</>'(V237, case V2 of {'Idris.Idris.Package.MkPkgDesc', E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301} -> (fun (V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404, V405) -> V381 end(E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V355)) end, V160, []))(V4))), case V406 of {'Idris.Prelude.Types.Left', E302} -> (fun (V407) -> {'Idris.Prelude.Types.Left', V407} end(E302)); {'Idris.Prelude.Types.Right', E303} -> (fun (V408) -> begin (V437 = begin (V436 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> fun (V413) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V411, V412, V413)) end end end end end, fun (V414) -> fun (V415) -> fun (V416) -> V415 end end end, fun (V417) -> fun (V418) -> fun (V419) -> fun (V420) -> fun (V421) -> begin (V422 = (V419(V421))), begin (V423 = (V420(V421))), (V422(V423)) end end end end end end end}, fun (V424) -> fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> begin (V429 = (V426(V428))), ((V427(V429))(V428)) end end end end end end, fun (V430) -> fun (V431) -> fun (V432) -> begin (V433 = (V431(V432))), (V433(V432)) end end end end}, fun (V434) -> fun (V435) -> V435 end end}, V192))(V4))), {'Idris.Prelude.Types.Right', V436} end), case V437 of {'Idris.Prelude.Types.Left', E304} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E304)); {'Idris.Prelude.Types.Right', E305} -> (fun (V439) -> (('un--runScript'(case V2 of {'Idris.Idris.Package.MkPkgDesc', E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330} -> (fun (V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460, V461, V462, V463, V464) -> V462 end(E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4)) end(E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E303)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t change directory to "/utf8>>, case V2 of {'Idris.Idris.Package.MkPkgDesc', E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355} -> (fun (V465, V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489) -> V465 end(E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E224)); {'Idris.Prelude.Types.Left', E356} -> (fun (V490) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t make directory "/utf8>>, case V2 of {'Idris.Idris.Package.MkPkgDesc', E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369, E370, E371, E372, E373, E374, E375, E376, E377, E378, E379, E380, E381} -> (fun (V491, V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, V514, V515) -> V491 end(E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369, E370, E371, E372, E373, E374, E375, E376, E377, E378, E379, E380, E381)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))}, V4)) end(E356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t change directory to "/utf8>>, V237))}, V4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E150)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t get current directory"/utf8>>}, V4)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--initPkgDesc'(V0) -> {'Idris.Idris.Package.MkPkgDesc', V0, <<"0"/utf8>>, <<"Anonymous"/utf8>>, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, [], [], {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}}.
'un--getParseErrorLoc'(V0, V1) -> case V1 of {'Idris.Parser.Support.ParseFail', E0, E1, E2} -> (fun (V2, V3, V4) -> case V3 of {'Idris.Prelude.Types.Just', E3} -> (fun (V5) -> {'Idris.Core.FC.MkFC', V0, V5, V5} end(E3)); _ -> ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()) end end(E0, E1, E2)); {'Idris.Parser.Support.LexFail', E4} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V9, V10) -> {'Idris.Core.FC.MkFC', V0, {'Idris.Builtin.MkPair', V7, V9}, {'Idris.Builtin.MkPair', V7, V9}} end(E7, E8)); _ -> ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()) end end(E5, E6)); _ -> ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()) end end(E4)); {'Idris.Parser.Support.LitFail', E9} -> (fun (V11) -> {'Idris.Core.FC.MkFC', V0, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}} end(E9)); _ -> ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()) end.
'un--foldlC'(V0, V1, V2, V3, V4, V5) -> case V3 of {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', E0, E1} -> (fun (V6, V7) -> fun (V8) -> (((((V7('erased'))('erased'))(fun (V10) -> fun (V11) -> fun (V12) -> begin (V13 = (V10(V12))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> (('Idris.Idris2.Prelude.Basics':'un--flip'('erased', 'erased', 'erased', V4, V11, V15))(V12)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end))(fun (V9) -> {'Idris.Prelude.Types.Right', V5} end))(V8)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--foldWithKeysC'(V0, V1, V2, V3, V4, V5, V6) -> ('nested--22188-6466--in--un--go'('erased', V2, 'erased', V4, V3, [], V5, V6)).
'un--findIpkg'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('Idris.Idris2.Core.Directory':'un--findIpkgFile'(V3))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> case V7 of {'Idris.Prelude.Types.Just', E2} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V11, V12) -> begin (V41 = begin (V40 = (('Idris.Idris2.Erlang.System.Directory':'un--changeDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V15, V16, V17)) end end end end end, fun (V18) -> fun (V19) -> fun (V20) -> V19 end end end, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), begin (V27 = (V24(V25))), (V26(V27)) end end end end end end end}, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> begin (V33 = (V30(V32))), ((V31(V33))(V32)) end end end end end end, fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V35(V36))), (V37(V36)) end end end end}, fun (V38) -> fun (V39) -> V39 end end}, V9))(V3))), {'Idris.Prelude.Types.Right', V40} end), case V41 of {'Idris.Prelude.Types.Left', E7} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V43) -> begin (V44 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V0, V9, V3))), case V44 of {'Idris.Prelude.Types.Left', E9} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V46) -> begin (V50 = begin (V49 = ('Idris.Idris2.Parser.Package':'un--parseFile'('erased', V11, {'Idris.Text.Parser.Core.SeqEat', 0, ('un--parsePkgDesc'(V11)), fun () -> fun (V47) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--eoi'()), fun () -> fun (V48) -> {'Idris.Text.Parser.Core.Empty', V47} end end} end end}, V3))), {'Idris.Prelude.Types.Right', V49} end), case V50 of {'Idris.Prelude.Types.Left', E11} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V52) -> case V52 of {'Idris.Prelude.Types.Right', E13} -> (fun (V53) -> case V53 of {'Idris.Builtin.MkPair', E14, E15} -> (fun (V54, V55) -> begin (V56 = ('un--addFields'(V0, V55, ('un--initPkgDesc'(V54)), V3))), case V56 of {'Idris.Prelude.Types.Left', E16} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V58) -> begin (V87 = (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end, fun () -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Context':'un--setBuildDir'(V0, V60, V61)) end end end, case V58 of {'Idris.Idris.Package.MkPkgDesc', E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42} -> (fun (V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86) -> V79 end(E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3))), case V87 of {'Idris.Prelude.Types.Left', E43} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V89) -> begin (V115 = ('Idris.Idris2.Core.Context':'un--setOutputDir'(V0, case V58 of {'Idris.Idris.Package.MkPkgDesc', E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69} -> (fun (V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114) -> V108 end(E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3))), case V115 of {'Idris.Prelude.Types.Left', E70} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V117) -> begin (V143 = (('un--processOptions'(V0, V1, case V58 of {'Idris.Idris.Package.MkPkgDesc', E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96} -> (fun (V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142) -> V133 end(E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3))), case V143 of {'Idris.Prelude.Types.Left', E97} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V145) -> begin (V171 = (('nested--24091-8225--in--un--loadDependencies'(V2, V1, V0, case V58 of {'Idris.Idris.Package.MkPkgDesc', E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123} -> (fun (V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170) -> V156 end(E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3))), case V171 of {'Idris.Prelude.Types.Left', E124} -> (fun (V172) -> {'Idris.Prelude.Types.Left', V172} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V173) -> case V2 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E126} -> (fun (V174) -> begin (V175 = ('Idris.Idris2.Utils.Path':'un--</>'(V12, V174))), begin (V176 = ('Idris.Idris2.Idris.REPLOpts':'un--setSource'(V1, V175, V3))), case V176 of {'Idris.Prelude.Types.Left', E127} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V178) -> begin (V180 = begin (V179 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V179} end), case V180 of {'Idris.Prelude.Types.Left', E129} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V182) -> begin (V198 = begin (V197 = ('erlang':'put'(V1, case V182 of {'Idris.Idris.REPLOpts.MkREPLOpts', E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144} -> (fun (V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V183, V184, {'Idris.Prelude.Types.Just', V175}, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196} end(E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V197} end), case V198 of {'Idris.Prelude.Types.Left', E145} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V200) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V175}} end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13)); {'Idris.Prelude.Types.Left', E147} -> (fun (V201) -> case V201 of {'Idris.Parser.Support.FileFail', E148} -> (fun (V202) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.FileErr', V11, V202}, V3)) end(E148)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.ParseFail', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V203) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--show_Show__Token'(V203)) end, fun (V204) -> fun (V205) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--showPrec_Show__Token'(V204, V205)) end end}, {'Idris.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V206) -> fun (V207) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--pretty_Pretty__Token'('erased', V207)) end end, fun (V208) -> fun (V209) -> fun (V210) -> ('Idris.Idris2.Parser.Lexer.Package':'dn--un--prettyPrec_Pretty__Token'('erased', V209, V210)) end end end}}, ('un--getParseErrorLoc'(V11, V201)), V201}, V3)) end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', V2} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--filterPackageOpts'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Idris.Prelude.Types.Right', V0} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Idris.CommandLine.Package', E5, E6} -> (fun (V5, V6) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E7, E8, E9} -> (fun (V7, V8, V9) -> {'Idris.Idris.Package.MkPFR', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V5, V6}}, V8, V9} end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E5, E6)); {'Idris.Idris.CommandLine.Quiet'} -> (fun () -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E10, E11, E12} -> (fun (V10, V11, V12) -> {'Idris.Idris.Package.MkPFR', V10, [{'Idris.Idris.CommandLine.Quiet'} | V11], V12} end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end()); {'Idris.Idris.CommandLine.Verbose'} -> (fun () -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E13, E14, E15} -> (fun (V13, V14, V15) -> {'Idris.Idris.Package.MkPFR', V13, [{'Idris.Idris.CommandLine.Verbose'} | V14], V15} end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end()); {'Idris.Idris.CommandLine.ConsoleWidth', E16} -> (fun (V16) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E17, E18, E19} -> (fun (V17, V18, V19) -> {'Idris.Idris.Package.MkPFR', V17, [{'Idris.Idris.CommandLine.ConsoleWidth', V16} | V18], V19} end(E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E16)); {'Idris.Idris.CommandLine.Color', E20} -> (fun (V20) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E21, E22, E23} -> (fun (V21, V22, V23) -> {'Idris.Idris.Package.MkPFR', V21, [{'Idris.Idris.CommandLine.Color', V20} | V22], V23} end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E20)); {'Idris.Idris.CommandLine.Timing'} -> (fun () -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E24, E25, E26} -> (fun (V24, V25, V26) -> {'Idris.Idris.Package.MkPFR', V24, [{'Idris.Idris.CommandLine.Timing'} | V25], V26} end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end()); {'Idris.Idris.CommandLine.Logging', E27} -> (fun (V27) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E28, E29, E30} -> (fun (V28, V29, V30) -> {'Idris.Idris.Package.MkPFR', V28, [{'Idris.Idris.CommandLine.Logging', V27} | V29], V30} end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E27)); {'Idris.Idris.CommandLine.DumpCases', E31} -> (fun (V31) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E32, E33, E34} -> (fun (V32, V33, V34) -> {'Idris.Idris.Package.MkPFR', V32, [{'Idris.Idris.CommandLine.DumpCases', V31} | V33], V34} end(E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E31)); {'Idris.Idris.CommandLine.DumpLifted', E35} -> (fun (V35) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E36, E37, E38} -> (fun (V36, V37, V38) -> {'Idris.Idris.Package.MkPFR', V36, [{'Idris.Idris.CommandLine.DumpLifted', V35} | V37], V38} end(E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E35)); {'Idris.Idris.CommandLine.DumpVMCode', E39} -> (fun (V39) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E40, E41, E42} -> (fun (V40, V41, V42) -> {'Idris.Idris.Package.MkPFR', V40, [{'Idris.Idris.CommandLine.DumpVMCode', V39} | V41], V42} end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E39)); {'Idris.Idris.CommandLine.DebugElabCheck'} -> (fun () -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E43, E44, E45} -> (fun (V43, V44, V45) -> {'Idris.Idris.Package.MkPFR', V43, [{'Idris.Idris.CommandLine.DebugElabCheck'} | V44], V45} end(E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end()); {'Idris.Idris.CommandLine.SetCG', E46} -> (fun (V46) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E47, E48, E49} -> (fun (V47, V48, V49) -> {'Idris.Idris.Package.MkPFR', V47, [{'Idris.Idris.CommandLine.SetCG', V46} | V48], V49} end(E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E46)); {'Idris.Idris.CommandLine.Directive', E50} -> (fun (V50) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E51, E52, E53} -> (fun (V51, V52, V53) -> {'Idris.Idris.Package.MkPFR', V51, [{'Idris.Idris.CommandLine.Directive', V50} | V52], V53} end(E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E50)); {'Idris.Idris.CommandLine.BuildDir', E54} -> (fun (V54) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E55, E56, E57} -> (fun (V55, V56, V57) -> {'Idris.Idris.Package.MkPFR', V55, [{'Idris.Idris.CommandLine.BuildDir', V54} | V56], V57} end(E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E54)); {'Idris.Idris.CommandLine.OutputDir', E58} -> (fun (V58) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E59, E60, E61} -> (fun (V59, V60, V61) -> {'Idris.Idris.Package.MkPFR', V59, [{'Idris.Idris.CommandLine.OutputDir', V58} | V60], V61} end(E59, E60, E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E58)); {'Idris.Idris.CommandLine.ChangedModules', E62} -> (fun (V62) -> ('un--filterPackageOpts'(case V0 of {'Idris.Idris.Package.MkPFR', E63, E64, E65} -> (fun (V63, V64, V65) -> {'Idris.Idris.Package.MkPFR', V63, [{'Idris.Idris.CommandLine.ChangedModules', V62} | V64], V65} end(E63, E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E62)); _ -> fun (V66) -> {'Idris.Prelude.Types.Right', case V0 of {'Idris.Idris.Package.MkPFR', E2, E3, E4} -> (fun (V67, V68, V69) -> {'Idris.Idris.Package.MkPFR', V67, V68, 0} end(E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--filterChangedModules'(V0, V1) -> ('case--filterChangedModules-5259'(V1, V0, ('Idris.Idris2.Data.List':'un--partition'('erased', fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq__ModuleIdent'(V3, V4)) end end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq__ModuleIdent'(V5, V6)) end end}, case V2 of {'Idris.Idris.ModTree.MkBuildMod', E0, E1, E2} -> (fun (V7, V8, V9) -> V8 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V0)) end, V1)))).
'un--field'(V0) -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V1) -> fun (V2) -> {'Idris.Idris.Package.PVersion', V1, V2} end end, <<"version"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V3) -> fun (V4) -> {'Idris.Idris.Package.PAuthors', V3, V4} end end, <<"authors"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V5) -> fun (V6) -> {'Idris.Idris.Package.PMaintainers', V5, V6} end end, <<"maintainers"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V7) -> fun (V8) -> {'Idris.Idris.Package.PLicense', V7, V8} end end, <<"license"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V9) -> fun (V10) -> {'Idris.Idris.Package.PBrief', V9, V10} end end, <<"brief"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V11) -> fun (V12) -> {'Idris.Idris.Package.PReadMe', V11, V12} end end, <<"readme"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V13) -> fun (V14) -> {'Idris.Idris.Package.PHomePage', V13, V14} end end, <<"homepage"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V15) -> fun (V16) -> {'Idris.Idris.Package.PSourceLoc', V15, V16} end end, <<"sourceloc"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V17) -> fun (V18) -> {'Idris.Idris.Package.PBugTracker', V17, V18} end end, <<"bugtracker"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V19) -> fun (V20) -> {'Idris.Idris.Package.POpts', V19, V20} end end, <<"options"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V21) -> fun (V22) -> {'Idris.Idris.Package.POpts', V21, V22} end end, <<"opts"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V23) -> fun (V24) -> {'Idris.Idris.Package.PSourceDir', V23, V24} end end, <<"sourcedir"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V25) -> fun (V26) -> {'Idris.Idris.Package.PBuildDir', V25, V26} end end, <<"builddir"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V27) -> fun (V28) -> {'Idris.Idris.Package.POutputDir', V27, V28} end end, <<"outputdir"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V29) -> fun (V30) -> {'Idris.Idris.Package.PPrebuild', V29, V30} end end, <<"prebuild"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V31) -> fun (V32) -> {'Idris.Idris.Package.PPostbuild', V31, V32} end end, <<"postbuild"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V33) -> fun (V34) -> {'Idris.Idris.Package.PPreinstall', V33, V34} end end, <<"preinstall"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V35) -> fun (V36) -> {'Idris.Idris.Package.PPostinstall', V35, V36} end end, <<"postinstall"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V37) -> fun (V38) -> {'Idris.Idris.Package.PPreclean', V37, V38} end end, <<"preclean"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, ('nested--18850-3266--in--un--strField'(V0, fun (V39) -> fun (V40) -> {'Idris.Idris.Package.PPostclean', V39, V40} end end, <<"postclean"/utf8>>)), fun () -> {'Idris.Text.Parser.Core.Alt', 0, ('Idris.Idris2.Prelude.Basics':'un--&&'(0, fun () -> ('Idris.Idris2.Prelude.Basics':'un--&&'(0, fun () -> ('Idris.Idris2.Prelude.Basics':'un--&&'(0, fun () -> 0 end)) end)) end)), {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--exactProperty'(<<"depends"/utf8>>)), fun () -> fun (V41) -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--equals'()), fun () -> fun (V42) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--sep'('erased', ('Idris.Idris2.Parser.Rule.Package':'un--packageName'()))), fun () -> fun (V43) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Idris.Package.PDepends', V43}} end end} end end} end end}, fun () -> {'Idris.Text.Parser.Core.Alt', 0, ('Idris.Idris2.Prelude.Basics':'un--&&'(0, fun () -> ('Idris.Idris2.Prelude.Basics':'un--&&'(0, fun () -> 0 end)) end)), {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--exactProperty'(<<"modules"/utf8>>)), fun () -> fun (V44) -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--equals'()), fun () -> fun (V45) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--sep'('erased', {'Idris.Text.Parser.Core.SeqEmpty', 1, 0, ('Idris.Idris2.Parser.Rule.Common':'un--location'({'Idris.Parser.Lexer.Package.Token'})), fun (V46) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--moduleIdent'()), fun () -> fun (V47) -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, ('Idris.Idris2.Parser.Rule.Common':'un--location'({'Idris.Parser.Lexer.Package.Token'})), fun (V48) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Builtin.MkPair', {'Idris.Core.FC.MkFC', V0, V46, V48}, V47}} end} end end} end})), fun () -> fun (V49) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Idris.Package.PModules', V49}} end end} end end} end end}, fun () -> {'Idris.Text.Parser.Core.Alt', 0, ('Idris.Idris2.Prelude.Basics':'un--&&'(0, fun () -> 0 end)), {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--exactProperty'(<<"main"/utf8>>)), fun () -> fun (V50) -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--equals'()), fun () -> fun (V51) -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 0, ('Idris.Idris2.Parser.Rule.Common':'un--location'({'Idris.Parser.Lexer.Package.Token'})), fun (V52) -> {'Idris.Text.Parser.Core.SeqEat', 1, ('Idris.Idris2.Parser.Rule.Package':'un--moduleIdent'()), fun () -> fun (V53) -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, ('Idris.Idris2.Parser.Rule.Common':'un--location'({'Idris.Parser.Lexer.Package.Token'})), fun (V54) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Idris.Package.PMainMod', {'Idris.Core.FC.MkFC', V0, V52, V54}, V53}} end} end end} end} end end} end end}, fun () -> {'Idris.Text.Parser.Core.Alt', 0, 0, {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--exactProperty'(<<"executable"/utf8>>)), fun () -> fun (V55) -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--equals'()), fun () -> fun (V56) -> case ('Idris.Idris2.Prelude.Basics':'un--&&'(0, fun () -> 0 end)) of 1 -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, {'Idris.Text.Parser.Core.Alt', 0, 0, ('Idris.Idris2.Parser.Rule.Package':'un--stringLit'()), fun () -> ('Idris.Idris2.Parser.Rule.Package':'un--packageName'()) end}, fun () -> fun (V57) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Idris.Package.PExec', V57}} end end}; 0 -> {'Idris.Text.Parser.Core.SeqEat', 1, {'Idris.Text.Parser.Core.Alt', 0, 0, ('Idris.Idris2.Parser.Rule.Package':'un--stringLit'()), fun () -> ('Idris.Idris2.Parser.Rule.Package':'un--packageName'()) end}, fun () -> fun (V58) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Idris.Package.PExec', V58}} end end}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end} end end}, fun () -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--exactProperty'(<<"library"/utf8>>)), fun () -> fun (V59) -> {'Idris.Text.Parser.Core.SeqEat', 0, ('Idris.Idris2.Parser.Rule.Package':'un--equals'()), fun () -> fun (V60) -> case ('Idris.Idris2.Prelude.Basics':'un--&&'(0, fun () -> 0 end)) of 1 -> {'Idris.Text.Parser.Core.SeqEmpty', 1, 1, {'Idris.Text.Parser.Core.Alt', 0, 0, ('Idris.Idris2.Parser.Rule.Package':'un--stringLit'()), fun () -> ('Idris.Idris2.Parser.Rule.Package':'un--packageName'()) end}, fun () -> fun (V61) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Idris.Package.PLibrary', V61}} end end}; 0 -> {'Idris.Text.Parser.Core.SeqEat', 1, {'Idris.Text.Parser.Core.Alt', 0, 0, ('Idris.Idris2.Parser.Rule.Package':'un--stringLit'()), fun () -> ('Idris.Idris2.Parser.Rule.Package':'un--packageName'()) end}, fun () -> fun (V62) -> {'Idris.Text.Parser.Core.Empty', {'Idris.Idris.Package.PLibrary', V62}} end end}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end} end end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end} end}.
'un--errorMsg'() -> ('Idris.Idris2.Data.Strings':'un--unlines'([<<"Not all command line options can be used to override package options.\x{a}"/utf8>> | [<<"Overridable options are:"/utf8>> | [<<"    --quiet"/utf8>> | [<<"    --verbose"/utf8>> | [<<"    --console-width <console width>"/utf8>> | [<<"    --color, --colour"/utf8>> | [<<"    --no-color, --no-colour"/utf8>> | [<<"    --timing"/utf8>> | [<<"    --log <log level>"/utf8>> | [<<"    --dumpcases <file>"/utf8>> | [<<"    --dumplifted <file>"/utf8>> | [<<"    --dumpvmcode <file>"/utf8>> | [<<"    --debug-elab-check"/utf8>> | [<<"    --codegen <cg>"/utf8>> | [<<"    --directive <directive>"/utf8>> | [<<"    --build-dir <dir>"/utf8>> | [<<"    --output-dir <dir>"/utf8>> | [<<"    --changed-modules <namespaces>"/utf8>> | []]]]]]]]]]]]]]]]]]])).
'un--copyFile'(V0, V1, V2) -> begin (V3 = ('Idris.Idris2.Utils.Binary':'un--readFromFile'(V0, V2))), case V3 of {'Idris.Prelude.Types.Right', E0} -> (fun (V4) -> (('Idris.Idris2.Utils.Binary':'un--writeToFile'(V1, V4))(V2)) end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileMain'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Metadata.MD'}, ('Idris.Idris2.Core.Metadata':'un--initMetadata'()), V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.UnifyState.UST'}, ('Idris.Idris2.Core.UnifyState':'un--initUState'()), V6))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V0, V12, V1, V9, V2, V4, V6))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V16 = ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V12, V1, V9, V2, {'Idris.Idris.Syntax.PRef', ('Idris.Idris2.Idris.REPLOpts':'un--replFC'()), V3}, V5, V6))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileLibHelper'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Metadata.MD'}, ('Idris.Idris2.Core.Metadata':'un--initMetadata'()), V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.UnifyState.UST'}, ('Idris.Idris2.Core.UnifyState':'un--initUState'()), V6))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'('erased', fun () -> V4 end, V5))), begin (V14 = ('Idris.Idris2.Idris.ModTree':'un--loadModules'(V0, V1, V9, V12, V2, V13, V6))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Idris.REPL':'un--compileLib'(V0, V2, V3, V5, V6))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--clean'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V34 = (('un--runScript'(case V2 of {'Idris.Idris.Package.MkPkgDesc', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V32 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V34 of {'Idris.Prelude.Types.Left', E27} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V36) -> begin (V115 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V37) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V37)) end, case V2 of {'Idris.Idris.Package.MkPkgDesc', E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62) -> V49 end(E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, fun () -> fun (V63) -> [('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V63)) | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V64) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V64)) end, case V2 of {'Idris.Idris.Package.MkPkgDesc', E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78} -> (fun (V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89) -> V76 end(E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))] end end, case V2 of {'Idris.Idris.Package.MkPkgDesc', E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103} -> (fun (V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114) -> V102 end(E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V117 = ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V116) -> ('case--clean-6674'(V3, V2, V1, V0, V8, V36, V115, V116, ('Idris.Idris2.Core.Name.Namespace':'un--unsafeUnfoldModuleIdent'(V116)))) end, V115))), begin (V146 = begin (V145 = (('Idris.Idris2.Erlang.System.Directory':'un--currentDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V120, V121, V122)) end end end end end, fun (V123) -> fun (V124) -> fun (V125) -> V124 end end end, fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> begin (V131 = (V128(V130))), begin (V132 = (V129(V130))), (V131(V132)) end end end end end end end}, fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> begin (V138 = (V135(V137))), ((V136(V138))(V137)) end end end end end end, fun (V139) -> fun (V140) -> fun (V141) -> begin (V142 = (V140(V141))), (V142(V141)) end end end end}, fun (V143) -> fun (V144) -> V144 end end}))(V4))), {'Idris.Prelude.Types.Right', V145} end), case V146 of {'Idris.Prelude.Types.Left', E104} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V148) -> case V148 of {'Idris.Prelude.Types.Just', E106} -> (fun (V149) -> begin (V185 = case case V8 of {'Idris.Core.Context.MkDefs', E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141} -> (fun (V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175) -> V154 end(E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E107, E108, E109, E110, E111, E112, E113, E114, E115} -> (fun (V176, V177, V178, V179, V180, V181, V182, V183, V184) -> V176 end(E107, E108, E109, E110, E111, E112, E113, E114, E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V195 = ('Idris.Idris2.Utils.Path':'un--</>'(V149, ('Idris.Idris2.Utils.Path':'un--</>'(case V185 of {'Idris.Core.Options.MkDirs', E142, E143, E144, E145, E146, E147, E148, E149, E150} -> (fun (V186, V187, V188, V189, V190, V191, V192, V193, V194) -> V188 end(E142, E143, E144, E145, E146, E147, E148, E149, E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, <<"ttc"/utf8>>))))), begin (V196 = ('Idris.Idris2.Utils.Path':'un--</>'(V149, ('Idris.Idris2.Core.Options':'un--outputDirWithDefault'(V185))))), begin (V203 = ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', fun (V197) -> fun (V198) -> begin (V199 = ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V198))), begin (V200 = ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V198))), ('Idris.Idris2.Data.StringTrie':'un--insertWith'('erased', ('Idris.Idris2.Data.List':'un--reverse'('erased', V199)), fun (V201) -> ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> [V200 | []] end, fun () -> fun (V202) -> [V200 | V202] end end, V201)) end, V197)) end end end end, ('Idris.Idris2.Data.StringTrie':'un--empty'('erased')), V117))), begin (V227 = ('un--foldWithKeysC'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V204) -> fun (V205) -> ('Idris.Idris2.Prelude.Interfaces':'dn--un--<+>_Semigroup__(|Unit,MkUnit|)'(V204, V205)) end end, ('Idris.Idris2.Prelude.Interfaces':'dn--un--neutral_Monoid__(|Unit,MkUnit|)'())}, fun (V206) -> fun (V207) -> ('nested--22289-6562--in--un--deleteFolder'(V3, V2, V1, V0, V195, V206, V207)) end end, fun (V208) -> fun (V209) -> fun (V210) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V211) -> case V211 of {'Idris.Prelude.Types.Left', E151} -> (fun (V212) -> {'Idris.Prelude.Types.Left', V212} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V213) -> {'Idris.Prelude.Types.Right', (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V216, V217, V218)) end end end end end, fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> fun (V223) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V221, V222, V223)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V224) -> fun (V225) -> ('Idris.Idris2.Prelude.Interfaces':'dn--un--<+>_Semigroup__(|Unit,MkUnit|)'(V224, V225)) end end, ('Idris.Idris2.Prelude.Interfaces':'dn--un--neutral_Monoid__(|Unit,MkUnit|)'())}}))(V213))} end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V226) -> ('nested--22289-6563--in--un--deleteBin'(V3, V2, V1, V0, V195, V208, V226)) end, V209, [])), V210)) end end end, V203, V4))), case V227 of {'Idris.Prelude.Types.Left', E153} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V229) -> begin (V230 = ('nested--22289-6562--in--un--deleteFolder'(V3, V2, V1, V0, V195, [], V4))), case V230 of {'Idris.Prelude.Types.Left', E155} -> (fun (V231) -> {'Idris.Prelude.Types.Left', V231} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V232) -> begin (V261 = (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V233) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end, fun () -> fun (V234) -> fun (V235) -> ('nested--22289-6561--in--un--delete'(V3, V2, V1, V0, ('Idris.Idris2.Utils.Path':'un--</>'(V196, V234)), V235)) end end end, case V2 of {'Idris.Idris.Package.MkPkgDesc', E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181} -> (fun (V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260) -> V249 end(E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V261 of {'Idris.Prelude.Types.Left', E182} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V263) -> (('un--runScript'(case V2 of {'Idris.Idris.Package.MkPkgDesc', E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208} -> (fun (V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288) -> V288 end(E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4)) end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E106)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t get current directory"/utf8>>}, V4)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--check'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('un--prepareCompilation'(V0, V1, V2, V3, V4, V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> case V9 of [] -> begin (V36 = (('un--runScript'(case V3 of {'Idris.Idris.Package.MkPkgDesc', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V31 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5))), case V36 of {'Idris.Prelude.Types.Left', E29} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V38) -> {'Idris.Prelude.Types.Right', []} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', V9} end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--build'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('un--prepareCompilation'(V0, V1, V2, V3, V4, V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> case V9 of [] -> begin (V37 = begin (V11 = {'Idris.Builtin.MkPair', [], V10}), (('case--case block in build-5516'(V4, V3, V2, V1, V0, V10, V11, case V3 of {'Idris.Idris.Package.MkPkgDesc', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V25 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5)) end), case V37 of {'Idris.Prelude.Types.Left', E29} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V39) -> begin (V66 = begin (V40 = {'Idris.Builtin.MkPair', [], V10}), (('case--case block in build-5611'(V4, V3, V2, V1, V0, V10, V40, V39, case V3 of {'Idris.Idris.Package.MkPkgDesc', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65) -> V55 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5)) end), case V66 of {'Idris.Prelude.Types.Left', E56} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V68) -> begin (V94 = (('un--runScript'(case V3 of {'Idris.Idris.Package.MkPkgDesc', E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82} -> (fun (V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93) -> V89 end(E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5))), case V94 of {'Idris.Prelude.Types.Left', E83} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V96) -> {'Idris.Prelude.Types.Right', []} end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', V9} end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--bitraverseC'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Data.These.This', E0} -> (fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Core':'un--<*>'('erased', 'erased', fun (V9) -> {'Idris.Prelude.Types.Right', fun (V10) -> {'Idris.Data.These.This', V10} end} end, (V4(V7)), V8)) end end(E0)); {'Idris.Data.These.That', E1} -> (fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Core':'un--<*>'('erased', 'erased', fun (V13) -> {'Idris.Prelude.Types.Right', fun (V14) -> {'Idris.Data.These.That', V14} end} end, (V5(V11)), V12)) end end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V15, V16) -> fun (V17) -> ('Idris.Idris2.Core.Core':'un--<*>'('erased', 'erased', fun (V18) -> ('Idris.Idris2.Core.Core':'un--<*>'('erased', 'erased', fun (V19) -> {'Idris.Prelude.Types.Right', fun (V20) -> fun (V21) -> {'Idris.Data.These.Both', V20, V21} end end} end, (V4(V15)), V18)) end, (V5(V16)), V17)) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addFields'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Package.ParsedMods'}, [], V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V7 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Package.MainMod'}, {'Idris.Prelude.Types.Nothing'}, V3))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> begin (V10 = (('nested--20509-4895--in--un--go'(V2, V1, V0, V6, V9, V1, V2))(V3))), case V10 of {'Idris.Prelude.Types.Left', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V12) -> begin (V38 = ('Idris.Idris2.Core.Context':'un--setSourceDir'(V0, case V12 of {'Idris.Idris.Package.MkPkgDesc', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V29 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3))), case V38 of {'Idris.Prelude.Types.Left', E31} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V40) -> begin (V42 = begin (V41 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V41} end), case V42 of {'Idris.Prelude.Types.Left', E33} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V44) -> begin (V46 = begin (V45 = ('erlang':'get'(V9))), {'Idris.Prelude.Types.Right', V45} end), case V46 of {'Idris.Prelude.Types.Left', E35} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V48) -> begin (V50 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V49) -> ('nested--20509-4894--in--un--toSource'(V2, V1, V0, V49)) end, V44, []))(V3))), case V50 of {'Idris.Prelude.Types.Left', E37} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V52) -> begin (V57 = case V48 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E39} -> (fun (V53) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V54) -> case V54 of {'Idris.Prelude.Types.Left', E40} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V56) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V56}} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('nested--20509-4894--in--un--toSource'(V2, V1, V0, V53)), V3)) end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V57 of {'Idris.Prelude.Types.Left', E42} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V59) -> {'Idris.Prelude.Types.Right', case V12 of {'Idris.Idris.Package.MkPkgDesc', E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68} -> (fun (V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84) -> {'Idris.Idris.Package.MkPkgDesc', V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V52, V59, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84} end(E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--addField'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Idris.Package.PVersion', E0, E1} -> (fun (V5, V6) -> fun (V7) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> {'Idris.Idris.Package.MkPkgDesc', V8, V6, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32} end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E0, E1)); {'Idris.Idris.Package.PAuthors', E27, E28} -> (fun (V33, V34) -> fun (V35) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> {'Idris.Idris.Package.MkPkgDesc', V36, V37, V34, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60} end(E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E27, E28)); {'Idris.Idris.Package.PMaintainers', E54, E55} -> (fun (V61, V62) -> fun (V63) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80} -> (fun (V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88) -> {'Idris.Idris.Package.MkPkgDesc', V64, V65, V66, {'Idris.Prelude.Types.Just', V62}, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88} end(E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E54, E55)); {'Idris.Idris.Package.PLicense', E81, E82} -> (fun (V89, V90) -> fun (V91) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107} -> (fun (V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116) -> {'Idris.Idris.Package.MkPkgDesc', V92, V93, V94, V95, {'Idris.Prelude.Types.Just', V90}, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116} end(E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E81, E82)); {'Idris.Idris.Package.PBrief', E108, E109} -> (fun (V117, V118) -> fun (V119) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134} -> (fun (V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144) -> {'Idris.Idris.Package.MkPkgDesc', V120, V121, V122, V123, V124, {'Idris.Prelude.Types.Just', V118}, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144} end(E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E108, E109)); {'Idris.Idris.Package.PReadMe', E135, E136} -> (fun (V145, V146) -> fun (V147) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161} -> (fun (V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172) -> {'Idris.Idris.Package.MkPkgDesc', V148, V149, V150, V151, V152, V153, {'Idris.Prelude.Types.Just', V146}, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172} end(E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E135, E136)); {'Idris.Idris.Package.PHomePage', E162, E163} -> (fun (V173, V174) -> fun (V175) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188} -> (fun (V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200) -> {'Idris.Idris.Package.MkPkgDesc', V176, V177, V178, V179, V180, V181, V182, {'Idris.Prelude.Types.Just', V174}, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200} end(E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E162, E163)); {'Idris.Idris.Package.PSourceLoc', E189, E190} -> (fun (V201, V202) -> fun (V203) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215} -> (fun (V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228) -> {'Idris.Idris.Package.MkPkgDesc', V204, V205, V206, V207, V208, V209, V210, V211, {'Idris.Prelude.Types.Just', V202}, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228} end(E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E189, E190)); {'Idris.Idris.Package.PBugTracker', E216, E217} -> (fun (V229, V230) -> fun (V231) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242} -> (fun (V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256) -> {'Idris.Idris.Package.MkPkgDesc', V232, V233, V234, V235, V236, V237, V238, V239, V240, {'Idris.Prelude.Types.Just', V230}, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256} end(E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E216, E217)); {'Idris.Idris.Package.PDepends', E243} -> (fun (V257) -> fun (V258) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268} -> (fun (V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283) -> {'Idris.Idris.Package.MkPkgDesc', V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V257, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283} end(E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E243)); {'Idris.Idris.Package.PModules', E269} -> (fun (V284) -> fun (V285) -> begin (V287 = begin (V286 = ('erlang':'put'(V1, V284))), {'Idris.Prelude.Types.Right', V286} end), case V287 of {'Idris.Prelude.Types.Left', E270} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V289) -> {'Idris.Prelude.Types.Right', V4} end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E269)); {'Idris.Idris.Package.PMainMod', E272, E273} -> (fun (V290, V291) -> fun (V292) -> begin (V294 = begin (V293 = ('erlang':'put'(V2, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V290, V291}}))), {'Idris.Prelude.Types.Right', V293} end), case V294 of {'Idris.Prelude.Types.Left', E274} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V296) -> {'Idris.Prelude.Types.Right', V4} end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E272, E273)); {'Idris.Idris.Package.PExec', E276} -> (fun (V297) -> fun (V298) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301} -> (fun (V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323) -> {'Idris.Idris.Package.MkPkgDesc', V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, {'Idris.Prelude.Types.Just', V297}, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323} end(E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E276)); {'Idris.Idris.Package.PLibrary', E302} -> (fun (V324) -> fun (V325) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327} -> (fun (V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350) -> {'Idris.Idris.Package.MkPkgDesc', V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, {'Idris.Prelude.Types.Just', V324}, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350} end(E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E302)); {'Idris.Idris.Package.POpts', E328, E329} -> (fun (V351, V352) -> fun (V353) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354} -> (fun (V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377, V378) -> {'Idris.Idris.Package.MkPkgDesc', V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V351, V352}}, V370, V371, V372, V373, V374, V375, V376, V377, V378} end(E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E328, E329)); {'Idris.Idris.Package.PSourceDir', E355, E356} -> (fun (V379, V380) -> fun (V381) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369, E370, E371, E372, E373, E374, E375, E376, E377, E378, E379, E380, E381} -> (fun (V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404, V405, V406) -> {'Idris.Idris.Package.MkPkgDesc', V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, {'Idris.Prelude.Types.Just', V380}, V399, V400, V401, V402, V403, V404, V405, V406} end(E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369, E370, E371, E372, E373, E374, E375, E376, E377, E378, E379, E380, E381)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E355, E356)); {'Idris.Idris.Package.PBuildDir', E382, E383} -> (fun (V407, V408) -> fun (V409) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E384, E385, E386, E387, E388, E389, E390, E391, E392, E393, E394, E395, E396, E397, E398, E399, E400, E401, E402, E403, E404, E405, E406, E407, E408} -> (fun (V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, V429, V430, V431, V432, V433, V434) -> {'Idris.Idris.Package.MkPkgDesc', V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, {'Idris.Prelude.Types.Just', V408}, V428, V429, V430, V431, V432, V433, V434} end(E384, E385, E386, E387, E388, E389, E390, E391, E392, E393, E394, E395, E396, E397, E398, E399, E400, E401, E402, E403, E404, E405, E406, E407, E408)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E382, E383)); {'Idris.Idris.Package.POutputDir', E409, E410} -> (fun (V435, V436) -> fun (V437) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E411, E412, E413, E414, E415, E416, E417, E418, E419, E420, E421, E422, E423, E424, E425, E426, E427, E428, E429, E430, E431, E432, E433, E434, E435} -> (fun (V438, V439, V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460, V461, V462) -> {'Idris.Idris.Package.MkPkgDesc', V438, V439, V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, {'Idris.Prelude.Types.Just', V436}, V457, V458, V459, V460, V461, V462} end(E411, E412, E413, E414, E415, E416, E417, E418, E419, E420, E421, E422, E423, E424, E425, E426, E427, E428, E429, E430, E431, E432, E433, E434, E435)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E409, E410)); {'Idris.Idris.Package.PPrebuild', E436, E437} -> (fun (V463, V464) -> fun (V465) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E438, E439, E440, E441, E442, E443, E444, E445, E446, E447, E448, E449, E450, E451, E452, E453, E454, E455, E456, E457, E458, E459, E460, E461, E462} -> (fun (V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490) -> {'Idris.Idris.Package.MkPkgDesc', V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483, V484, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V463, V464}}, V486, V487, V488, V489, V490} end(E438, E439, E440, E441, E442, E443, E444, E445, E446, E447, E448, E449, E450, E451, E452, E453, E454, E455, E456, E457, E458, E459, E460, E461, E462)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E436, E437)); {'Idris.Idris.Package.PPostbuild', E463, E464} -> (fun (V491, V492) -> fun (V493) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E465, E466, E467, E468, E469, E470, E471, E472, E473, E474, E475, E476, E477, E478, E479, E480, E481, E482, E483, E484, E485, E486, E487, E488, E489} -> (fun (V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, V514, V515, V516, V517, V518) -> {'Idris.Idris.Package.MkPkgDesc', V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V491, V492}}, V515, V516, V517, V518} end(E465, E466, E467, E468, E469, E470, E471, E472, E473, E474, E475, E476, E477, E478, E479, E480, E481, E482, E483, E484, E485, E486, E487, E488, E489)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E463, E464)); {'Idris.Idris.Package.PPreinstall', E490, E491} -> (fun (V519, V520) -> fun (V521) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E492, E493, E494, E495, E496, E497, E498, E499, E500, E501, E502, E503, E504, E505, E506, E507, E508, E509, E510, E511, E512, E513, E514, E515, E516} -> (fun (V522, V523, V524, V525, V526, V527, V528, V529, V530, V531, V532, V533, V534, V535, V536, V537, V538, V539, V540, V541, V542, V543, V544, V545, V546) -> {'Idris.Idris.Package.MkPkgDesc', V522, V523, V524, V525, V526, V527, V528, V529, V530, V531, V532, V533, V534, V535, V536, V537, V538, V539, V540, V541, V542, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V519, V520}}, V544, V545, V546} end(E492, E493, E494, E495, E496, E497, E498, E499, E500, E501, E502, E503, E504, E505, E506, E507, E508, E509, E510, E511, E512, E513, E514, E515, E516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E490, E491)); {'Idris.Idris.Package.PPostinstall', E517, E518} -> (fun (V547, V548) -> fun (V549) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E519, E520, E521, E522, E523, E524, E525, E526, E527, E528, E529, E530, E531, E532, E533, E534, E535, E536, E537, E538, E539, E540, E541, E542, E543} -> (fun (V550, V551, V552, V553, V554, V555, V556, V557, V558, V559, V560, V561, V562, V563, V564, V565, V566, V567, V568, V569, V570, V571, V572, V573, V574) -> {'Idris.Idris.Package.MkPkgDesc', V550, V551, V552, V553, V554, V555, V556, V557, V558, V559, V560, V561, V562, V563, V564, V565, V566, V567, V568, V569, V570, V571, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V547, V548}}, V573, V574} end(E519, E520, E521, E522, E523, E524, E525, E526, E527, E528, E529, E530, E531, E532, E533, E534, E535, E536, E537, E538, E539, E540, E541, E542, E543)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E517, E518)); {'Idris.Idris.Package.PPreclean', E544, E545} -> (fun (V575, V576) -> fun (V577) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E546, E547, E548, E549, E550, E551, E552, E553, E554, E555, E556, E557, E558, E559, E560, E561, E562, E563, E564, E565, E566, E567, E568, E569, E570} -> (fun (V578, V579, V580, V581, V582, V583, V584, V585, V586, V587, V588, V589, V590, V591, V592, V593, V594, V595, V596, V597, V598, V599, V600, V601, V602) -> {'Idris.Idris.Package.MkPkgDesc', V578, V579, V580, V581, V582, V583, V584, V585, V586, V587, V588, V589, V590, V591, V592, V593, V594, V595, V596, V597, V598, V599, V600, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V575, V576}}, V602} end(E546, E547, E548, E549, E550, E551, E552, E553, E554, E555, E556, E557, E558, E559, E560, E561, E562, E563, E564, E565, E566, E567, E568, E569, E570)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E544, E545)); {'Idris.Idris.Package.PPostclean', E571, E572} -> (fun (V603, V604) -> fun (V605) -> {'Idris.Prelude.Types.Right', case V4 of {'Idris.Idris.Package.MkPkgDesc', E573, E574, E575, E576, E577, E578, E579, E580, E581, E582, E583, E584, E585, E586, E587, E588, E589, E590, E591, E592, E593, E594, E595, E596, E597} -> (fun (V606, V607, V608, V609, V610, V611, V612, V613, V614, V615, V616, V617, V618, V619, V620, V621, V622, V623, V624, V625, V626, V627, V628, V629, V630) -> {'Idris.Idris.Package.MkPkgDesc', V606, V607, V608, V609, V610, V611, V612, V613, V614, V615, V616, V617, V618, V619, V620, V621, V622, V623, V624, V625, V626, V627, V628, V629, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V603, V604}}} end(E573, E574, E575, E576, E577, E578, E579, E580, E581, E582, E583, E584, E585, E586, E587, E588, E589, E590, E591, E592, E593, E594, E595, E596, E597)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end end(E571, E572)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addDeps'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Context':'un--addPkg'(V0, V7, V8)) end end, case V1 of {'Idris.Idris.Package.MkPkgDesc', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V19 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
