-module('Idris.Idris2.TTImp.Elab.Quote').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in bindUnqs-7723'/19,
  'case--bindUnqs-7663'/16,
  'nested--11272-7520--in--un--unqPair'/7,
  'nested--11264-7394--in--un--unqPair'/9,
  'un--onLHS'/1,
  'un--getUnquoteUpdate'/4,
  'un--getUnquoteTy'/4,
  'un--getUnquoteRecord'/4,
  'un--getUnquoteField'/4,
  'un--getUnquoteDecl'/4,
  'un--getUnquoteData'/4,
  'un--getUnquoteClause'/4,
  'un--getUnquote'/4,
  'un--checkQuoteName'/13,
  'un--checkQuoteDecl'/13,
  'un--checkQuote'/13,
  'un--bindUnqs'/11
]).
'case--case block in bindUnqs-7723'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V19, V20) -> fun (V21) -> begin (V22 = (('un--bindUnqs'(V0, V13, V12, V11, V10, V4, V9, V8, V7, V6, V5))(V21))), case V22 of {'Idris.Prelude.Types.Left', E2} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V24) -> begin (V25 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V20))(V21))), case V25 of {'Idris.Prelude.Types.Left', E4} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V2, V1, {'Idris.Core.TT.Let', V2, ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), V9)), V19, V27}, ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V1, V1, V24))}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--bindUnqs-7663'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Prelude.Types.Just', E0} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V17, V18) -> fun (V19) -> begin (V20 = (('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V13, V12, V11, V10, V9, V8, V7, V6, V3, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V6, {'Idris.Core.TT.Ref', V2, {'Idris.Core.TT.TyCon', 0, 0}, {'Idris.Core.Name.Resolved', V17}}))}))(V19))), case V20 of {'Idris.Prelude.Types.Left', E3} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V22) -> case V22 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V23, V24) -> begin (V25 = (('un--bindUnqs'(V0, V13, V12, V11, V10, V4, V9, V8, V7, V6, V5))(V19))), case V25 of {'Idris.Prelude.Types.Left', E7} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V27) -> begin (V28 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V24))(V19))), case V28 of {'Idris.Prelude.Types.Left', E9} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V2, V1, {'Idris.Core.TT.Let', V2, ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), V9)), V23, V30}, ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V1, V1, V27))}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> fun (V31) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V31)) end end end(E0)); _ -> fun (V32) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V32)) end end.
'nested--11272-7520--in--un--unqPair'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> fun (V9) -> begin (V10 = (('un--getUnquote'(V5, V4, V3, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V7, V12}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11264-7394--in--un--unqPair'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V13, V14) -> fun (V15) -> begin (V16 = (('un--getUnquote'(V7, V6, V5, V14))(V15))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V9, {'Idris.Builtin.MkPair', V11, {'Idris.Builtin.MkPair', V13, V18}}}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--onLHS'(V0) -> case V0 of {'Idris.TTImp.Elab.Check.InLHS', E0} -> (fun (V1) -> 0 end(E0)); _ -> 1 end.
'un--getUnquoteUpdate'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V4, V5) -> fun (V6) -> begin (V7 = (('un--getUnquote'(V0, V1, V2, V5))(V6))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V4, V9}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E4, E5} -> (fun (V10, V11) -> fun (V12) -> begin (V13 = (('un--getUnquote'(V0, V1, V2, V11))(V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V10, V15}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteTy'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2} -> (fun (V4, V5, V6) -> fun (V7) -> begin (V8 = (('un--getUnquote'(V0, V1, V2, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V4, V5, V10}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteRecord'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V11 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V10) -> ('nested--11264-7394--in--un--unqPair'(V8, V7, V6, V5, V4, V2, V1, V0, V10)) end, V6, []))(V9))), case V11 of {'Idris.Prelude.Types.Left', E5} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V13) -> begin (V15 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V14) -> ('un--getUnquoteField'(V0, V1, V2, V14)) end, V8, []))(V9))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpRecord', V4, V5, V13, V7, V17}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteField'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V10 = (('un--getUnquote'(V0, V1, V2, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V4, V5, V6, V7, V12}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteDecl'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V10 = (('un--getUnquoteTy'(V0, V1, V2, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V4, V5, V6, V7, V12}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E7, E8, E9} -> (fun (V13, V14, V15) -> fun (V16) -> begin (V17 = (('un--getUnquoteData'(V0, V1, V2, V15))(V16))), case V17 of {'Idris.Prelude.Types.Left', E10} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V13, V14, V19}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7, E8, E9)); {'Idris.TTImp.TTImp.IDef', E12, E13, E14} -> (fun (V20, V21, V22) -> fun (V23) -> begin (V25 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V24) -> ('un--getUnquoteClause'(V0, V1, V2, V24)) end, V22, []))(V23))), case V25 of {'Idris.Prelude.Types.Left', E15} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V20, V21, V27}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E12, E13, E14)); {'Idris.TTImp.TTImp.IParameters', E17, E18, E19} -> (fun (V28, V29, V30) -> fun (V31) -> begin (V33 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V32) -> ('nested--11272-7520--in--un--unqPair'(V30, V29, V28, V2, V1, V0, V32)) end, V29, []))(V31))), case V33 of {'Idris.Prelude.Types.Left', E20} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V35) -> begin (V37 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V36) -> ('un--getUnquoteDecl'(V0, V1, V2, V36)) end, V30, []))(V31))), case V37 of {'Idris.Prelude.Types.Left', E22} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V28, V35, V39}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E17, E18, E19)); {'Idris.TTImp.TTImp.IRecord', E24, E25, E26, E27} -> (fun (V40, V41, V42, V43) -> fun (V44) -> begin (V45 = (('un--getUnquoteRecord'(V0, V1, V2, V43))(V44))), case V45 of {'Idris.Prelude.Types.Left', E28} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V47) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V40, V41, V42, V47}} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26, E27)); {'Idris.TTImp.TTImp.INamespace', E30, E31, E32} -> (fun (V48, V49, V50) -> fun (V51) -> begin (V53 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V52) -> ('un--getUnquoteDecl'(V0, V1, V2, V52)) end, V50, []))(V51))), case V53 of {'Idris.Prelude.Types.Left', E33} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V55) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V48, V49, V55}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E30, E31, E32)); {'Idris.TTImp.TTImp.ITransform', E35, E36, E37, E38} -> (fun (V56, V57, V58, V59) -> fun (V60) -> begin (V61 = (('un--getUnquote'(V0, V1, V2, V58))(V60))), case V61 of {'Idris.Prelude.Types.Left', E39} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V63) -> begin (V64 = (('un--getUnquote'(V0, V1, V2, V59))(V60))), case V64 of {'Idris.Prelude.Types.Left', E41} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V66) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V56, V57, V63, V66}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E35, E36, E37, E38)); _ -> fun (V67) -> {'Idris.Prelude.Types.Right', V3} end end.
'un--getUnquoteData'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V10 = (('un--getUnquote'(V0, V1, V2, V6))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> begin (V14 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V13) -> ('un--getUnquoteTy'(V0, V1, V2, V13)) end, V8, []))(V9))), case V14 of {'Idris.Prelude.Types.Left', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V4, V5, V12, V7, V16}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E9, E10, E11} -> (fun (V17, V18, V19) -> fun (V20) -> begin (V21 = (('un--getUnquote'(V0, V1, V2, V19))(V20))), case V21 of {'Idris.Prelude.Types.Left', E12} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V17, V18, V23}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteClause'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V4, V5, V6) -> fun (V7) -> begin (V8 = (('un--getUnquote'(V0, V1, V2, V5))(V7))), case V8 of {'Idris.Prelude.Types.Left', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V10) -> begin (V11 = (('un--getUnquote'(V0, V1, V2, V6))(V7))), case V11 of {'Idris.Prelude.Types.Left', E5} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V4, V10, V13}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E7, E8, E9, E10, E11} -> (fun (V14, V15, V16, V17, V18) -> fun (V19) -> begin (V20 = (('un--getUnquote'(V0, V1, V2, V15))(V19))), case V20 of {'Idris.Prelude.Types.Left', E12} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V22) -> begin (V23 = (('un--getUnquote'(V0, V1, V2, V16))(V19))), case V23 of {'Idris.Prelude.Types.Left', E14} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V25) -> begin (V27 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V26) -> ('un--getUnquoteClause'(V0, V1, V2, V26)) end, V18, []))(V19))), case V27 of {'Idris.Prelude.Types.Left', E16} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V14, V22, V25, V17, V29}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7, E8, E9, E10, E11)); {'Idris.TTImp.TTImp.ImpossibleClause', E18, E19} -> (fun (V30, V31) -> fun (V32) -> begin (V33 = (('un--getUnquote'(V0, V1, V2, V31))(V32))), case V33 of {'Idris.Prelude.Types.Left', E20} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V30, V35}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquote'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V4, V5, V6, V7, V8, V9) -> fun (V10) -> begin (V11 = (('un--getUnquote'(V0, V1, V2, V8))(V10))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> begin (V14 = (('un--getUnquote'(V0, V1, V2, V9))(V10))), case V14 of {'Idris.Prelude.Types.Left', E8} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V4, V5, V6, V7, V13, V16}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E10, E11, E12, E13, E14, E15} -> (fun (V17, V18, V19, V20, V21, V22) -> fun (V23) -> begin (V24 = (('un--getUnquote'(V0, V1, V2, V21))(V23))), case V24 of {'Idris.Prelude.Types.Left', E16} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V26) -> begin (V27 = (('un--getUnquote'(V0, V1, V2, V22))(V23))), case V27 of {'Idris.Prelude.Types.Left', E18} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V17, V18, V19, V20, V26, V29}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13, E14, E15)); {'Idris.TTImp.TTImp.ILet', E20, E21, E22, E23, E24, E25} -> (fun (V30, V31, V32, V33, V34, V35) -> fun (V36) -> begin (V37 = (('un--getUnquote'(V0, V1, V2, V33))(V36))), case V37 of {'Idris.Prelude.Types.Left', E26} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V39) -> begin (V40 = (('un--getUnquote'(V0, V1, V2, V34))(V36))), case V40 of {'Idris.Prelude.Types.Left', E28} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V42) -> begin (V43 = (('un--getUnquote'(V0, V1, V2, V35))(V36))), case V43 of {'Idris.Prelude.Types.Left', E30} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V30, V31, V32, V39, V42, V45}} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20, E21, E22, E23, E24, E25)); {'Idris.TTImp.TTImp.ICase', E32, E33, E34, E35} -> (fun (V46, V47, V48, V49) -> fun (V50) -> begin (V51 = (('un--getUnquote'(V0, V1, V2, V47))(V50))), case V51 of {'Idris.Prelude.Types.Left', E36} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V53) -> begin (V54 = (('un--getUnquote'(V0, V1, V2, V48))(V50))), case V54 of {'Idris.Prelude.Types.Left', E38} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V56) -> begin (V58 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V57) -> ('un--getUnquoteClause'(V0, V1, V2, V57)) end, V49, []))(V50))), case V58 of {'Idris.Prelude.Types.Left', E40} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V46, V53, V56, V60}} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33, E34, E35)); {'Idris.TTImp.TTImp.ILocal', E42, E43, E44} -> (fun (V61, V62, V63) -> fun (V64) -> begin (V66 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V65) -> ('un--getUnquoteDecl'(V0, V1, V2, V65)) end, V62, []))(V64))), case V66 of {'Idris.Prelude.Types.Left', E45} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V68) -> begin (V69 = (('un--getUnquote'(V0, V1, V2, V63))(V64))), case V69 of {'Idris.Prelude.Types.Left', E47} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V71) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V61, V68, V71}} end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44)); {'Idris.TTImp.TTImp.IUpdate', E49, E50, E51} -> (fun (V72, V73, V74) -> fun (V75) -> begin (V77 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V76) -> ('un--getUnquoteUpdate'(V0, V1, V2, V76)) end, V73, []))(V75))), case V77 of {'Idris.Prelude.Types.Left', E52} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V79) -> begin (V80 = (('un--getUnquote'(V0, V1, V2, V74))(V75))), case V80 of {'Idris.Prelude.Types.Left', E54} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V82) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V72, V79, V82}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E49, E50, E51)); {'Idris.TTImp.TTImp.IApp', E56, E57, E58} -> (fun (V83, V84, V85) -> fun (V86) -> begin (V87 = (('un--getUnquote'(V0, V1, V2, V84))(V86))), case V87 of {'Idris.Prelude.Types.Left', E59} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V89) -> begin (V90 = (('un--getUnquote'(V0, V1, V2, V85))(V86))), case V90 of {'Idris.Prelude.Types.Left', E61} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V83, V89, V92}} end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58)); {'Idris.TTImp.TTImp.IAutoApp', E63, E64, E65} -> (fun (V93, V94, V95) -> fun (V96) -> begin (V97 = (('un--getUnquote'(V0, V1, V2, V94))(V96))), case V97 of {'Idris.Prelude.Types.Left', E66} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V99) -> begin (V100 = (('un--getUnquote'(V0, V1, V2, V95))(V96))), case V100 of {'Idris.Prelude.Types.Left', E68} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V102) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V93, V99, V102}} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E63, E64, E65)); {'Idris.TTImp.TTImp.INamedApp', E70, E71, E72, E73} -> (fun (V103, V104, V105, V106) -> fun (V107) -> begin (V108 = (('un--getUnquote'(V0, V1, V2, V104))(V107))), case V108 of {'Idris.Prelude.Types.Left', E74} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V110) -> begin (V111 = (('un--getUnquote'(V0, V1, V2, V106))(V107))), case V111 of {'Idris.Prelude.Types.Left', E76} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V113) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V103, V110, V105, V113}} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E70, E71, E72, E73)); {'Idris.TTImp.TTImp.IWithApp', E78, E79, E80} -> (fun (V114, V115, V116) -> fun (V117) -> begin (V118 = (('un--getUnquote'(V0, V1, V2, V115))(V117))), case V118 of {'Idris.Prelude.Types.Left', E81} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V120) -> begin (V121 = (('un--getUnquote'(V0, V1, V2, V116))(V117))), case V121 of {'Idris.Prelude.Types.Left', E83} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V123) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V114, V120, V123}} end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E78, E79, E80)); {'Idris.TTImp.TTImp.IAlternative', E85, E86, E87} -> (fun (V124, V125, V126) -> fun (V127) -> begin (V129 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V128) -> ('un--getUnquote'(V0, V1, V2, V128)) end, V126, []))(V127))), case V129 of {'Idris.Prelude.Types.Left', E88} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V131) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V124, V125, V131}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85, E86, E87)); {'Idris.TTImp.TTImp.IRewrite', E90, E91, E92} -> (fun (V132, V133, V134) -> fun (V135) -> begin (V136 = (('un--getUnquote'(V0, V1, V2, V133))(V135))), case V136 of {'Idris.Prelude.Types.Left', E93} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V138) -> begin (V139 = (('un--getUnquote'(V0, V1, V2, V134))(V135))), case V139 of {'Idris.Prelude.Types.Left', E95} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V141) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V132, V138, V141}} end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E90, E91, E92)); {'Idris.TTImp.TTImp.ICoerced', E97, E98} -> (fun (V142, V143) -> fun (V144) -> begin (V145 = (('un--getUnquote'(V0, V1, V2, V143))(V144))), case V145 of {'Idris.Prelude.Types.Left', E99} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V147) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICoerced', V142, V147}} end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E97, E98)); {'Idris.TTImp.TTImp.IBindHere', E101, E102, E103} -> (fun (V148, V149, V150) -> fun (V151) -> begin (V152 = (('un--getUnquote'(V0, V1, V2, V150))(V151))), case V152 of {'Idris.Prelude.Types.Left', E104} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V154) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V148, V149, V154}} end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E101, E102, E103)); {'Idris.TTImp.TTImp.IAs', E106, E107, E108, E109} -> (fun (V155, V156, V157, V158) -> fun (V159) -> begin (V160 = (('un--getUnquote'(V0, V1, V2, V158))(V159))), case V160 of {'Idris.Prelude.Types.Left', E110} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V162) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V155, V156, V157, V162}} end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E106, E107, E108, E109)); {'Idris.TTImp.TTImp.IMustUnify', E112, E113, E114} -> (fun (V163, V164, V165) -> fun (V166) -> begin (V167 = (('un--getUnquote'(V0, V1, V2, V165))(V166))), case V167 of {'Idris.Prelude.Types.Left', E115} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V169) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V163, V164, V169}} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E112, E113, E114)); {'Idris.TTImp.TTImp.IDelayed', E117, E118, E119} -> (fun (V170, V171, V172) -> fun (V173) -> begin (V174 = (('un--getUnquote'(V0, V1, V2, V172))(V173))), case V174 of {'Idris.Prelude.Types.Left', E120} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V176) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V170, V171, V176}} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E117, E118, E119)); {'Idris.TTImp.TTImp.IDelay', E122, E123} -> (fun (V177, V178) -> fun (V179) -> begin (V180 = (('un--getUnquote'(V0, V1, V2, V178))(V179))), case V180 of {'Idris.Prelude.Types.Left', E124} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V182) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V177, V182}} end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E122, E123)); {'Idris.TTImp.TTImp.IForce', E126, E127} -> (fun (V183, V184) -> fun (V185) -> begin (V186 = (('un--getUnquote'(V0, V1, V2, V184))(V185))), case V186 of {'Idris.Prelude.Types.Left', E128} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V188) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V183, V188}} end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E126, E127)); {'Idris.TTImp.TTImp.IQuote', E130, E131} -> (fun (V189, V190) -> fun (V191) -> begin (V192 = (('un--getUnquote'(V0, V1, V2, V190))(V191))), case V192 of {'Idris.Prelude.Types.Left', E132} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V194) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V189, V194}} end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E130, E131)); {'Idris.TTImp.TTImp.IUnquote', E134, E135} -> (fun (V195, V196) -> fun (V197) -> begin (V198 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V2, <<"q"/utf8>>, V197))), case V198 of {'Idris.Prelude.Types.Left', E136} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V200) -> begin (V202 = begin (V201 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V201} end), case V202 of {'Idris.Prelude.Types.Left', E138} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V204) -> begin (V206 = begin (V205 = ('erlang':'put'(V1, [{'Idris.Builtin.MkPair', V200, {'Idris.Builtin.MkPair', V195, V196}} | V204]))), {'Idris.Prelude.Types.Right', V205} end), case V206 of {'Idris.Prelude.Types.Left', E140} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V208) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V195, {'Idris.TTImp.TTImp.IVar', V195, V200}}} end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E134, E135)); _ -> fun (V209) -> {'Idris.Prelude.Types.Right', V3} end end.
'un--checkQuoteName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V23 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E2, E3, E4, E5, E6, E7} -> (fun (V17, V18, V19, V20, V21, V22) -> V17 end(E2, E3, E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V10))(V12))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectiontt'(<<"Name"/utf8>>)), V12))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> (('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V25, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V28)), V11))(V12)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkQuoteDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.TTImp.Elab.Quote.Unq'}, [], V12))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V21 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V20) -> ('un--getUnquoteDecl'(V1, V19, V3, V20)) end, V10, []))(V12))), case V21 of {'Idris.Prelude.Types.Left', E4} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V23) -> begin (V36 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__ImpDecl'(V24, V25, V26, V27, V28, V29)) end end end end end end, V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E6, E7, E8, E9, E10, E11} -> (fun (V30, V31, V32, V33, V34, V35) -> V30 end(E6, E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V23))(V12))), case V36 of {'Idris.Prelude.Types.Left', E12} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V38) -> begin (V40 = begin (V39 = ('erlang':'get'(V19))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E14} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V42) -> begin (V43 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Decl"/utf8>>)), V12))), case V43 of {'Idris.Prelude.Types.Left', E16} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V45) -> begin (V46 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--preludetypes'(<<"List"/utf8>>)), [V45 | []], V12))), case V46 of {'Idris.Prelude.Types.Left', E18} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V48) -> begin (V49 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V42, V5, V6, V7, V8, V38))(V12))), case V49 of {'Idris.Prelude.Types.Left', E20} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V51) -> (('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V51, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V48)), V11))(V12)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkQuote'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.TTImp.Elab.Quote.Unq'}, [], V12))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = (('un--getUnquote'(V1, V19, V3, V10))(V12))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> begin (V29 = (('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E6, E7, E8, E9, E10, E11} -> (fun (V23, V24, V25, V26, V27, V28) -> V23 end(E6, E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V22))(V12))), case V29 of {'Idris.Prelude.Types.Left', E12} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V19))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E14} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V35) -> begin (V36 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>)), V12))), case V36 of {'Idris.Prelude.Types.Left', E16} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V38) -> begin (V39 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V35, V5, V6, V7, V8, V31))(V12))), case V39 of {'Idris.Prelude.Types.Left', E18} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V41) -> begin (V42 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V1, V0, V16, V8, V41, V12))), case V42 of {'Idris.Prelude.Types.Left', E20} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V44) -> (('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V44, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V38)), V11))(V12)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--bindUnqs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V5 of [] -> fun (V11) -> {'Idris.Prelude.Types.Right', V10} end; [E0 | E1] -> (fun (V12, V13) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V14, V15) -> case V15 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V16, V17) -> fun (V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E6} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V22) -> begin (V49 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExactI'(('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>)), case V22 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48) -> V23 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V18))), case V49 of {'Idris.Prelude.Types.Left', E34} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V51) -> case V51 of {'Idris.Prelude.Types.Just', E36} -> (fun (V52) -> case V52 of {'Idris.Builtin.MkPair', E37, E38} -> (fun (V53, V54) -> begin (V55 = (('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V1, V2, V3, V4, V6, V7, V8, V9, V17, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.TyCon', 0, 0}, {'Idris.Core.Name.Resolved', V53}}))}))(V18))), case V55 of {'Idris.Prelude.Types.Left', E39} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V57) -> case V57 of {'Idris.Builtin.MkPair', E41, E42} -> (fun (V58, V59) -> begin (V60 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V13, V6, V7, V8, V9, V10))(V18))), case V60 of {'Idris.Prelude.Types.Left', E43} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V62) -> begin (V63 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V59))(V18))), case V63 of {'Idris.Prelude.Types.Left', E45} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V65) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V16, V14, {'Idris.Core.TT.Let', V16, ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), V6)), V58, V65}, ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V14, V14, V62))}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37, E38)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V18)) end end(E36)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V18)) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
