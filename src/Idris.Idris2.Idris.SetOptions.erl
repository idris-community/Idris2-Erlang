-module('Idris.Idris2.Idris.SetOptions').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--preOptions-3092'/5,
  'case--preOptions-3046'/5,
  'case--preOptions-3000'/5,
  'case--preOptions-2954'/5,
  'case--preOptions-2908'/5,
  'case--preOptions-2864'/5,
  'case--preOptions-2822'/4,
  'case--preOptions-2776'/6,
  'case--preOptions-2627'/5,
  'case--preOptions-2517'/6,
  'case--preOptions-2495'/4,
  'case--preOptions-2441'/4,
  'case--preOptions-2397'/5,
  'case--preOptions-2353'/4,
  'case--preOptions-2309'/5,
  'case--preOptions-2263'/5,
  'case--preOptions-2219'/4,
  'un--preOptions'/3,
  'un--postOptions'/7,
  'un--ideModeSocket'/1,
  'un--ideMode'/1,
  'un--dirOption'/2
]).
'case--preOptions-3092'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, (('Idris.Idris2.Core.Options.Log':'un--insertLogLevel'(V0))(V12)), V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-3046'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, {'Idris.Prelude.Types.Just', V0}} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-3000'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, {'Idris.Prelude.Types.Just', V0}, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2954'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, {'Idris.Prelude.Types.Just', V0}, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2908'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, {'Idris.Prelude.Types.Just', V0}, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2864'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V0, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2822'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', V4, V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2776'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V6, 0, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2627'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, [V0 | V9], V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2517'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = ('Idris.Idris2.Core.Context':'un--setCG'(V3, V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> (('un--preOptions'(V3, V2, V1))(V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> begin (V40 = begin (V39 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, <<"No such code generator"/utf8>>))(V11))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E3} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V42) -> begin (V98 = begin (V97 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> V49 end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V53(V55))), begin (V57 = (V54(V55))), (V56(V57)) end end end end end end end}, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V60(V62))), ((V61(V63))(V62)) end end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> begin (V67 = (V65(V66))), (V67(V66)) end end end end}, fun (V68) -> fun (V69) -> V69 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Code generators available: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V70) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V70)) end, ('Idris.Idris2.Core.Options':'un--availableCGs'(case V4 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96) -> V75 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))))(V11))), {'Idris.Prelude.Types.Right', V97} end), case V98 of {'Idris.Prelude.Types.Left', E31} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V100) -> begin (V128 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V103, V104, V105)) end end end end end, fun (V106) -> fun (V107) -> fun (V108) -> V107 end end end, fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> begin (V114 = (V111(V113))), begin (V115 = (V112(V113))), (V114(V115)) end end end end end end end}, fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> begin (V121 = (V118(V120))), ((V119(V121))(V120)) end end end end end end, fun (V122) -> fun (V123) -> fun (V124) -> begin (V125 = (V123(V124))), (V125(V124)) end end end end}, fun (V126) -> fun (V127) -> V127 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V11))), {'Idris.Prelude.Types.Right', V128} end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2495'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', 0, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2441'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2397'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2353'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2309'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2263'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2219'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--preOptions'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> {'Idris.Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Idris.CommandLine.NoBanner'} -> (fun () -> fun (V6) -> begin (V24 = begin (V7 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V6))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V9 of {'Idris.Core.Options.MkSessionOpts', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> {'Idris.Core.Options.MkSessionOpts', V10, 0, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23} end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V24 of {'Idris.Prelude.Types.Left', E18} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V26) -> (('un--preOptions'(V0, V1, V5))(V6)) end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.OutputFile', E20} -> (fun (V27) -> fun (V28) -> begin (V46 = begin (V29 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V28))), case V29 of {'Idris.Prelude.Types.Left', E21} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V31) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V31 of {'Idris.Core.Options.MkSessionOpts', E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36} -> (fun (V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45) -> {'Idris.Core.Options.MkSessionOpts', V32, 0, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45} end(E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V28)) end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V46 of {'Idris.Prelude.Types.Left', E37} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V48) -> (('un--preOptions'(V0, V1, V5))(V28)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20)); {'Idris.Idris.CommandLine.ExecFn', E39} -> (fun (V49) -> fun (V50) -> begin (V68 = begin (V51 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V50))), case V51 of {'Idris.Prelude.Types.Left', E40} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V53) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V53 of {'Idris.Core.Options.MkSessionOpts', E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67) -> {'Idris.Core.Options.MkSessionOpts', V54, 0, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67} end(E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V50)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V68 of {'Idris.Prelude.Types.Left', E56} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V70) -> (('un--preOptions'(V0, V1, V5))(V50)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E39)); {'Idris.Idris.CommandLine.IdeMode'} -> (fun () -> fun (V71) -> begin (V89 = begin (V72 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V71))), case V72 of {'Idris.Prelude.Types.Left', E58} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V74) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V74 of {'Idris.Core.Options.MkSessionOpts', E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73} -> (fun (V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88) -> {'Idris.Core.Options.MkSessionOpts', V75, 0, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88} end(E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V71)) end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V89 of {'Idris.Prelude.Types.Left', E74} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V91) -> (('un--preOptions'(V0, V1, V5))(V71)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.IdeModeSocket', E76} -> (fun (V92) -> fun (V93) -> begin (V111 = begin (V94 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V93))), case V94 of {'Idris.Prelude.Types.Left', E77} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V96) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V96 of {'Idris.Core.Options.MkSessionOpts', E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92} -> (fun (V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110) -> {'Idris.Core.Options.MkSessionOpts', V97, 0, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110} end(E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V93)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V111 of {'Idris.Prelude.Types.Left', E93} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V113) -> (('un--preOptions'(V0, V1, V5))(V93)) end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E76)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V114) -> begin (V132 = begin (V115 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V114))), case V115 of {'Idris.Prelude.Types.Left', E95} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V117) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V117 of {'Idris.Core.Options.MkSessionOpts', E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110} -> (fun (V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131) -> {'Idris.Core.Options.MkSessionOpts', V118, 0, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131} end(E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V114)) end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V132 of {'Idris.Prelude.Types.Left', E111} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V134) -> (('un--preOptions'(V0, V1, V5))(V114)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.Quiet'} -> (fun () -> fun (V135) -> begin (V136 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V1, {'Idris.Idris.REPLOpts.REPL', 0}, V135))), case V136 of {'Idris.Prelude.Types.Left', E113} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V138) -> (('un--preOptions'(V0, V1, V5))(V135)) end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.NoPrelude'} -> (fun () -> fun (V139) -> begin (V157 = begin (V140 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V139))), case V140 of {'Idris.Prelude.Types.Left', E115} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V142) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V142 of {'Idris.Core.Options.MkSessionOpts', E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130} -> (fun (V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156) -> {'Idris.Core.Options.MkSessionOpts', 0, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156} end(E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V139)) end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V157 of {'Idris.Prelude.Types.Left', E131} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V159) -> (('un--preOptions'(V0, V1, V5))(V139)) end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.SetCG', E133} -> (fun (V160) -> fun (V161) -> begin (V163 = begin (V162 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V162} end), case V163 of {'Idris.Prelude.Types.Left', E134} -> (fun (V164) -> {'Idris.Prelude.Types.Left', V164} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V165) -> (('case--preOptions-2517'(V160, V5, V1, V0, V165, ('Idris.Idris2.Core.Options':'un--getCG'(case V165 of {'Idris.Core.Context.MkDefs', E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161} -> (fun (V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191) -> V170 end(E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V160))))(V161)) end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E133)); {'Idris.Idris.CommandLine.Directive', E162} -> (fun (V192) -> fun (V193) -> begin (V211 = begin (V194 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V193))), case V194 of {'Idris.Prelude.Types.Left', E163} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V196) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V196 of {'Idris.Core.Options.MkSessionOpts', E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178} -> (fun (V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210) -> {'Idris.Core.Options.MkSessionOpts', V197, V198, V199, V200, [V192 | V201], V202, V203, V204, V205, V206, V207, V208, V209, V210} end(E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V193)) end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V211 of {'Idris.Prelude.Types.Left', E179} -> (fun (V212) -> {'Idris.Prelude.Types.Left', V212} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V213) -> (('un--preOptions'(V0, V1, V5))(V193)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E162)); {'Idris.Idris.CommandLine.PkgName', E181} -> (fun (V214) -> fun (V215) -> begin (V216 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, V214, V215))), case V216 of {'Idris.Prelude.Types.Left', E182} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V218) -> (('un--preOptions'(V0, V1, V5))(V215)) end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E181)); {'Idris.Idris.CommandLine.SourceDir', E184} -> (fun (V219) -> fun (V220) -> begin (V221 = ('Idris.Idris2.Core.Context':'un--setSourceDir'(V0, {'Idris.Prelude.Types.Just', V219}, V220))), case V221 of {'Idris.Prelude.Types.Left', E185} -> (fun (V222) -> {'Idris.Prelude.Types.Left', V222} end(E185)); {'Idris.Prelude.Types.Right', E186} -> (fun (V223) -> (('un--preOptions'(V0, V1, V5))(V220)) end(E186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184)); {'Idris.Idris.CommandLine.BuildDir', E187} -> (fun (V224) -> fun (V225) -> begin (V226 = ('Idris.Idris2.Core.Context':'un--setBuildDir'(V0, V224, V225))), case V226 of {'Idris.Prelude.Types.Left', E188} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V228) -> (('un--preOptions'(V0, V1, V5))(V225)) end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E187)); {'Idris.Idris.CommandLine.OutputDir', E190} -> (fun (V229) -> fun (V230) -> begin (V231 = ('Idris.Idris2.Core.Context':'un--setOutputDir'(V0, {'Idris.Prelude.Types.Just', V229}, V230))), case V231 of {'Idris.Prelude.Types.Left', E191} -> (fun (V232) -> {'Idris.Prelude.Types.Left', V232} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V233) -> (('un--preOptions'(V0, V1, V5))(V230)) end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E190)); {'Idris.Idris.CommandLine.Directory', E193} -> (fun (V234) -> fun (V235) -> begin (V237 = begin (V236 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V236} end), case V237 of {'Idris.Prelude.Types.Left', E194} -> (fun (V238) -> {'Idris.Prelude.Types.Left', V238} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V239) -> begin (V275 = (('un--dirOption'(case case V239 of {'Idris.Core.Context.MkDefs', E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230} -> (fun (V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265) -> V244 end(E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E196, E197, E198, E199, E200, E201, E202, E203, E204} -> (fun (V266, V267, V268, V269, V270, V271, V272, V273, V274) -> V266 end(E196, E197, E198, E199, E200, E201, E202, E203, E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V234))(V235))), case V275 of {'Idris.Prelude.Types.Left', E231} -> (fun (V276) -> {'Idris.Prelude.Types.Left', V276} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V277) -> {'Idris.Prelude.Types.Right', 1} end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E193)); {'Idris.Idris.CommandLine.Timing'} -> (fun () -> fun (V278) -> begin (V279 = ('Idris.Idris2.Core.Context':'un--setLogTimings'(V0, 0, V278))), case V279 of {'Idris.Prelude.Types.Left', E233} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E233)); {'Idris.Prelude.Types.Right', E234} -> (fun (V281) -> (('un--preOptions'(V0, V1, V5))(V278)) end(E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.DebugElabCheck'} -> (fun () -> fun (V282) -> begin (V283 = ('Idris.Idris2.Core.Context':'un--setDebugElabCheck'(V0, 0, V282))), case V283 of {'Idris.Prelude.Types.Left', E235} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E235)); {'Idris.Prelude.Types.Right', E236} -> (fun (V285) -> (('un--preOptions'(V0, V1, V5))(V282)) end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E237} -> (fun (V286) -> fun (V287) -> begin (V288 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V1, {'Idris.Idris.REPLOpts.REPL', 0}, V287))), case V288 of {'Idris.Prelude.Types.Left', E238} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V290) -> begin (V308 = begin (V291 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V287))), case V291 of {'Idris.Prelude.Types.Left', E240} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V293) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V293 of {'Idris.Core.Options.MkSessionOpts', E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255} -> (fun (V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307) -> {'Idris.Core.Options.MkSessionOpts', V294, 0, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307} end(E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V287)) end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V308 of {'Idris.Prelude.Types.Left', E256} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V310) -> (('un--preOptions'(V0, V1, V5))(V287)) end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E237)); {'Idris.Idris.CommandLine.FindIPKG'} -> (fun () -> fun (V311) -> begin (V329 = begin (V312 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V311))), case V312 of {'Idris.Prelude.Types.Left', E258} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V314) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V314 of {'Idris.Core.Options.MkSessionOpts', E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273} -> (fun (V315, V316, V317, V318, V319, V320, V321, V322, V323, V324, V325, V326, V327, V328) -> {'Idris.Core.Options.MkSessionOpts', V315, V316, 0, V318, V319, V320, V321, V322, V323, V324, V325, V326, V327, V328} end(E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V311)) end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V329 of {'Idris.Prelude.Types.Left', E274} -> (fun (V330) -> {'Idris.Prelude.Types.Left', V330} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V331) -> (('un--preOptions'(V0, V1, V5))(V311)) end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.ChangedModules', E276} -> (fun (V332) -> fun (V333) -> begin (V351 = begin (V334 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V333))), case V334 of {'Idris.Prelude.Types.Left', E277} -> (fun (V335) -> {'Idris.Prelude.Types.Left', V335} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V336) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V336 of {'Idris.Core.Options.MkSessionOpts', E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292} -> (fun (V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350) -> {'Idris.Core.Options.MkSessionOpts', V337, V338, V339, V340, V341, V342, V332, V344, V345, V346, V347, V348, V349, V350} end(E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V333)) end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V351 of {'Idris.Prelude.Types.Left', E293} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V353) -> (('un--preOptions'(V0, V1, V5))(V333)) end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E276)); {'Idris.Idris.CommandLine.DumpCases', E295} -> (fun (V354) -> fun (V355) -> begin (V373 = begin (V356 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V355))), case V356 of {'Idris.Prelude.Types.Left', E296} -> (fun (V357) -> {'Idris.Prelude.Types.Left', V357} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V358) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V358 of {'Idris.Core.Options.MkSessionOpts', E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311} -> (fun (V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372) -> {'Idris.Core.Options.MkSessionOpts', V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, {'Idris.Prelude.Types.Just', V354}, V370, V371, V372} end(E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V355)) end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V373 of {'Idris.Prelude.Types.Left', E312} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E312)); {'Idris.Prelude.Types.Right', E313} -> (fun (V375) -> (('un--preOptions'(V0, V1, V5))(V355)) end(E313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E295)); {'Idris.Idris.CommandLine.DumpLifted', E314} -> (fun (V376) -> fun (V377) -> begin (V395 = begin (V378 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V377))), case V378 of {'Idris.Prelude.Types.Left', E315} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E315)); {'Idris.Prelude.Types.Right', E316} -> (fun (V380) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V380 of {'Idris.Core.Options.MkSessionOpts', E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330} -> (fun (V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394) -> {'Idris.Core.Options.MkSessionOpts', V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, {'Idris.Prelude.Types.Just', V376}, V393, V394} end(E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V377)) end(E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V395 of {'Idris.Prelude.Types.Left', E331} -> (fun (V396) -> {'Idris.Prelude.Types.Left', V396} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V397) -> (('un--preOptions'(V0, V1, V5))(V377)) end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E314)); {'Idris.Idris.CommandLine.DumpANF', E333} -> (fun (V398) -> fun (V399) -> begin (V417 = begin (V400 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V399))), case V400 of {'Idris.Prelude.Types.Left', E334} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E334)); {'Idris.Prelude.Types.Right', E335} -> (fun (V402) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V402 of {'Idris.Core.Options.MkSessionOpts', E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349} -> (fun (V403, V404, V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, V415, V416) -> {'Idris.Core.Options.MkSessionOpts', V403, V404, V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, {'Idris.Prelude.Types.Just', V398}, V416} end(E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V399)) end(E335)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V417 of {'Idris.Prelude.Types.Left', E350} -> (fun (V418) -> {'Idris.Prelude.Types.Left', V418} end(E350)); {'Idris.Prelude.Types.Right', E351} -> (fun (V419) -> (('un--preOptions'(V0, V1, V5))(V399)) end(E351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E333)); {'Idris.Idris.CommandLine.DumpVMCode', E352} -> (fun (V420) -> fun (V421) -> begin (V439 = begin (V422 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V421))), case V422 of {'Idris.Prelude.Types.Left', E353} -> (fun (V423) -> {'Idris.Prelude.Types.Left', V423} end(E353)); {'Idris.Prelude.Types.Right', E354} -> (fun (V424) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V424 of {'Idris.Core.Options.MkSessionOpts', E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368} -> (fun (V425, V426, V427, V428, V429, V430, V431, V432, V433, V434, V435, V436, V437, V438) -> {'Idris.Core.Options.MkSessionOpts', V425, V426, V427, V428, V429, V430, V431, V432, V433, V434, V435, V436, V437, {'Idris.Prelude.Types.Just', V420}} end(E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V421)) end(E354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V439 of {'Idris.Prelude.Types.Left', E369} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E369)); {'Idris.Prelude.Types.Right', E370} -> (fun (V441) -> (('un--preOptions'(V0, V1, V5))(V421)) end(E370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E352)); {'Idris.Idris.CommandLine.Logging', E371} -> (fun (V442) -> fun (V443) -> begin (V461 = begin (V444 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V443))), case V444 of {'Idris.Prelude.Types.Left', E372} -> (fun (V445) -> {'Idris.Prelude.Types.Left', V445} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V446) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V446 of {'Idris.Core.Options.MkSessionOpts', E374, E375, E376, E377, E378, E379, E380, E381, E382, E383, E384, E385, E386, E387} -> (fun (V447, V448, V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460) -> {'Idris.Core.Options.MkSessionOpts', V447, V448, V449, V450, V451, V452, V453, (('Idris.Idris2.Core.Options.Log':'un--insertLogLevel'(V442))(V454)), V455, V456, V457, V458, V459, V460} end(E374, E375, E376, E377, E378, E379, E380, E381, E382, E383, E384, E385, E386, E387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V443)) end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V461 of {'Idris.Prelude.Types.Left', E388} -> (fun (V462) -> {'Idris.Prelude.Types.Left', V462} end(E388)); {'Idris.Prelude.Types.Right', E389} -> (fun (V463) -> (('un--preOptions'(V0, V1, V5))(V443)) end(E389)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E371)); {'Idris.Idris.CommandLine.ConsoleWidth', E390} -> (fun (V464) -> fun (V465) -> begin (V466 = ('Idris.Idris2.Idris.REPLOpts':'un--setConsoleWidth'(V1, V464, V465))), case V466 of {'Idris.Prelude.Types.Left', E391} -> (fun (V467) -> {'Idris.Prelude.Types.Left', V467} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V468) -> (('un--preOptions'(V0, V1, V5))(V465)) end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E390)); {'Idris.Idris.CommandLine.Color', E393} -> (fun (V469) -> fun (V470) -> begin (V471 = ('Idris.Idris2.Idris.REPLOpts':'un--setColor'(V1, V469, V470))), case V471 of {'Idris.Prelude.Types.Left', E394} -> (fun (V472) -> {'Idris.Prelude.Types.Left', V472} end(E394)); {'Idris.Prelude.Types.Right', E395} -> (fun (V473) -> (('un--preOptions'(V0, V1, V5))(V470)) end(E395)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E393)); _ -> ('un--preOptions'(V0, V1, V5)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--postOptions'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of [] -> fun (V7) -> {'Idris.Prelude.Types.Right', 0} end; _ -> case V5 of {'Idris.Idris.REPL.ErrorLoadingFile', E17, E18} -> (fun (V8, V9) -> case V6 of [E36 | E37] -> (fun (V10, V11) -> case V10 of {'Idris.Idris.CommandLine.OutputFile', E55} -> (fun (V12) -> fun (V13) -> begin (V14 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V11))(V13))), case V14 of {'Idris.Prelude.Types.Left', E56} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V16) -> {'Idris.Prelude.Types.Right', 1} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E55)); _ -> case V6 of [E38 | E39] -> (fun (V17, V18) -> case V17 of {'Idris.Idris.CommandLine.OutputFile', E40} -> (fun (V19) -> fun (V20) -> begin (V21 = ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V19, V20))), case V21 of {'Idris.Prelude.Types.Left', E41} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V23) -> begin (V24 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V18))(V20))), case V24 of {'Idris.Prelude.Types.Left', E43} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V26) -> {'Idris.Prelude.Types.Right', 1} end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E40)); {'Idris.Idris.CommandLine.ExecFn', E45} -> (fun (V27) -> fun (V28) -> begin (V29 = ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V27}}, V28))), case V29 of {'Idris.Prelude.Types.Left', E46} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V31) -> begin (V32 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V18))(V28))), case V32 of {'Idris.Prelude.Types.Left', E48} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V34) -> {'Idris.Prelude.Types.Right', 1} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E45)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V35) -> begin (V36 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V18))(V35))), case V36 of {'Idris.Prelude.Types.Left', E50} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V38) -> {'Idris.Prelude.Types.Right', 1} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E52} -> (fun (V39) -> fun (V40) -> begin (V41 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V39))(V40))), case V41 of {'Idris.Prelude.Types.Left', E53} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V43) -> {'Idris.Prelude.Types.Right', 1} end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V18)) end end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36, E37)); _ -> case V6 of [E19 | E20] -> (fun (V44, V45) -> case V44 of {'Idris.Idris.CommandLine.OutputFile', E21} -> (fun (V46) -> fun (V47) -> begin (V48 = ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V46, V47))), case V48 of {'Idris.Prelude.Types.Left', E22} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V50) -> begin (V51 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V45))(V47))), case V51 of {'Idris.Prelude.Types.Left', E24} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V53) -> {'Idris.Prelude.Types.Right', 1} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21)); {'Idris.Idris.CommandLine.ExecFn', E26} -> (fun (V54) -> fun (V55) -> begin (V56 = ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V54}}, V55))), case V56 of {'Idris.Prelude.Types.Left', E27} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V58) -> begin (V59 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V45))(V55))), case V59 of {'Idris.Prelude.Types.Left', E29} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V61) -> {'Idris.Prelude.Types.Right', 1} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E26)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V62) -> begin (V63 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V45))(V62))), case V63 of {'Idris.Prelude.Types.Left', E31} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V65) -> {'Idris.Prelude.Types.Right', 1} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E33} -> (fun (V66) -> fun (V67) -> begin (V68 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V66))(V67))), case V68 of {'Idris.Prelude.Types.Left', E34} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V70) -> {'Idris.Prelude.Types.Right', 1} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V45)) end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17, E18)); _ -> case V6 of [E0 | E1] -> (fun (V71, V72) -> case V71 of {'Idris.Idris.CommandLine.OutputFile', E2} -> (fun (V73) -> fun (V74) -> begin (V75 = ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V73, V74))), case V75 of {'Idris.Prelude.Types.Left', E3} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V77) -> begin (V78 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V72))(V74))), case V78 of {'Idris.Prelude.Types.Left', E5} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V80) -> {'Idris.Prelude.Types.Right', 1} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); {'Idris.Idris.CommandLine.ExecFn', E7} -> (fun (V81) -> fun (V82) -> begin (V83 = ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V81}}, V82))), case V83 of {'Idris.Prelude.Types.Left', E8} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V85) -> begin (V86 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V72))(V82))), case V86 of {'Idris.Prelude.Types.Left', E10} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V88) -> {'Idris.Prelude.Types.Right', 1} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V89) -> begin (V90 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V72))(V89))), case V90 of {'Idris.Prelude.Types.Left', E12} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V92) -> {'Idris.Prelude.Types.Right', 1} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E14} -> (fun (V93) -> fun (V94) -> begin (V95 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V93))(V94))), case V95 of {'Idris.Prelude.Types.Left', E15} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V97) -> {'Idris.Prelude.Types.Right', 1} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V72)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--ideModeSocket'(V0) -> case V0 of [] -> 1; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.Idris.CommandLine.IdeModeSocket', E2} -> (fun (V3) -> 0 end(E2)); _ -> ('un--ideModeSocket'(V2)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--ideMode'(V0) -> case V0 of [] -> 1; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.Idris.CommandLine.IdeMode'} -> (fun () -> 0 end()); _ -> ('un--ideMode'(V2)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--dirOption'(V0, V1) -> case V1 of {'Idris.Idris.CommandLine.LibDir'} -> (fun () -> fun (V2) -> begin (V39 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V5, V6, V7)) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> V9 end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> begin (V16 = (V13(V15))), begin (V17 = (V14(V15))), (V16(V17)) end end end end end end end}, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), ((V21(V23))(V22)) end end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V25(V26))), (V27(V26)) end end end end}, fun (V28) -> fun (V29) -> V29 end end}, ('Idris.Idris2.Utils.Path':'un--</>'(case V0 of {'Idris.Core.Options.MkDirs', E0, E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38) -> V34 end(E0, E1, E2, E3, E4, E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"idris2-"/utf8>>, ('Idris.Idris2.Idris.Version':'un--showVersion'(1, ('Idris.Idris2.Idris.Version':'un--version'())))))))))(V2))), {'Idris.Prelude.Types.Right', V39} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
