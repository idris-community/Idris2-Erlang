-module('Idris.Idris2.System.File').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--chmodRaw-2191'/6,
  'case--case block in writeFile-1985'/7,
  'case--writeFile-1957'/5,
  'case--case block in readFile-1851'/6,
  'case--readFile-1827'/4,
  'case--case block in readFile,read-1773'/7,
  'case--readFile,read-1724'/6,
  'case--fileSize-1640'/5,
  'case--removeFile-1583'/5,
  'case--fileStatusTime-1528'/5,
  'case--fileModifiedTime-1473'/5,
  'case--fileAccessTime-1418'/5,
  'case--popen-1339'/6,
  'case--fPutStr-1202'/6,
  'case--fGetChar-1139'/6,
  'case--fGetChars-1069'/6,
  'case--fGetLine-1011'/5,
  'case--firstExists-918'/5,
  'case--exists-834'/4,
  'case--openFile-766'/6,
  'case--returnError-558'/4,
  'case--modeStr-527'/1,
  'case--modeStr-517'/1,
  'case--modeStr-507'/1,
  'case--modeStr-497'/1,
  'case--modeStr-487'/1,
  'case--modeStr-477'/1,
  'nested--3432-1709--in--un--read'/5,
  'nested--3881-2121--in--un--getMs'/2,
  'nested--3881-2120--in--un--getM'/2,
  'dn--un--show_Show__FileError'/1,
  'dn--un--showPrec_Show__FileError'/2,
  'dn--un--__Impl_Show_FileError'/0,
  'un--writeFile'/4,
  'un--stdout'/0,
  'un--stdin'/0,
  'un--stderr'/0,
  'un--returnError'/3,
  'un--removeFile'/3,
  'un--readFile'/3,
  'un--prim__writeLine'/3,
  'un--prim__stdout'/0,
  'un--prim__stdin'/0,
  'un--prim__stderr'/0,
  'un--prim__removeFile'/2,
  'un--prim__readLine'/2,
  'un--prim__readChars'/3,
  'un--prim__readChar'/2,
  'un--prim__popen'/3,
  'un--prim__pclose'/2,
  'un--prim__open'/3,
  'un--prim__flush'/2,
  'un--prim__fileStatusTime'/2,
  'un--prim__fileSize'/2,
  'un--prim__fileModifiedTime'/2,
  'un--prim__fileErrno'/1,
  'un--prim__fileAccessTime'/2,
  'un--prim__fPoll'/2,
  'un--prim__error'/2,
  'un--prim__eof'/2,
  'un--prim__close'/2,
  'un--prim__chmod'/3,
  'un--popen'/4,
  'un--pclose'/3,
  'un--openFile'/4,
  'un--ok'/4,
  'un--modeStr'/1,
  'un--mkMode'/1,
  'un--firstExists'/3,
  'un--fileStatusTime'/3,
  'un--fileSize'/3,
  'un--fileModifiedTime'/3,
  'un--fileError'/3,
  'un--fileAccessTime'/3,
  'un--fflush'/3,
  'un--fPutStrLn'/4,
  'un--fPutStr'/4,
  'un--fPoll'/3,
  'un--fGetLine'/3,
  'un--fGetChars'/4,
  'un--fGetChar'/3,
  'un--fEOF'/3,
  'un--exists'/3,
  'un--closeFile'/3,
  'un--chmodRaw'/4,
  'un--chmod'/4,
  'un--FilePtr'/0
]).
'case--chmodRaw-2191'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V6, V7) -> V6 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> ((V12('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in writeFile-1985'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Right', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkUnit'} -> (fun () -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E12, E13} -> (fun (V8, V9) -> V8 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V10, V11, V12) -> ((((V11('erased'))('erased'))(('un--closeFile'('erased', V1, V4))))(fun (V13) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E10, E11} -> (fun (V14, V15) -> V14 end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E7, E8, E9} -> (fun (V16, V17, V18) -> V16 end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E4, E5, E6} -> (fun (V19, V20, V21) -> ((V20('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}})) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E14} -> (fun (V22) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E26, E27} -> (fun (V23, V24) -> V23 end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E15, E16, E17} -> (fun (V25, V26, V27) -> ((((V26('erased'))('erased'))(('un--closeFile'('erased', V1, V4))))(fun (V28) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E24, E25} -> (fun (V29, V30) -> V29 end(E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E21, E22, E23} -> (fun (V31, V32, V33) -> V31 end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E18, E19, E20} -> (fun (V34, V35, V36) -> ((V35('erased'))({'Idris.Prelude.Types.Left', V22})) end(E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--writeFile-1957'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Right', E0} -> (fun (V5) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E32, E33} -> (fun (V6, V7) -> V6 end(E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V8, V9, V10) -> ((((V9('erased'))('erased'))(('un--fPutStr'('erased', V1, V5, V2))))(fun (V11) -> case V11 of {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkUnit'} -> (fun () -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E16, E17} -> (fun (V13, V14) -> V13 end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V15, V16, V17) -> ((((V16('erased'))('erased'))(('un--closeFile'('erased', V1, V5))))(fun (V18) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E14, E15} -> (fun (V19, V20) -> V19 end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V21, V22, V23) -> V21 end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E8, E9, E10} -> (fun (V24, V25, V26) -> ((V25('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}})) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); {'Idris.Prelude.Types.Left', E18} -> (fun (V27) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E30, E31} -> (fun (V28, V29) -> V28 end(E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E19, E20, E21} -> (fun (V30, V31, V32) -> ((((V31('erased'))('erased'))(('un--closeFile'('erased', V1, V5))))(fun (V33) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E28, E29} -> (fun (V34, V35) -> V34 end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E25, E26, E27} -> (fun (V36, V37, V38) -> V36 end(E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E22, E23, E24} -> (fun (V39, V40, V41) -> ((V40('erased'))({'Idris.Prelude.Types.Left', V27})) end(E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E34} -> (fun (V42) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E41, E42} -> (fun (V43, V44) -> V43 end(E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E38, E39, E40} -> (fun (V45, V46, V47) -> V45 end(E38, E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E35, E36, E37} -> (fun (V48, V49, V50) -> ((V49('erased'))({'Idris.Prelude.Types.Left', V42})) end(E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in readFile-1851'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Right', E0} -> (fun (V6) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E12, E13} -> (fun (V7, V8) -> V7 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V9, V10, V11) -> ((((V10('erased'))('erased'))(('un--closeFile'('erased', V1, V3))))(fun (V12) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E10, E11} -> (fun (V13, V14) -> V13 end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E7, E8, E9} -> (fun (V15, V16, V17) -> V15 end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E4, E5, E6} -> (fun (V18, V19, V20) -> ((V19('erased'))({'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Strings':'un--fastAppend'(V6))})) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E14} -> (fun (V21) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E18, E19} -> (fun (V22, V23) -> V22 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E15, E16, E17} -> (fun (V24, V25, V26) -> ((((V25('erased'))('erased'))(('un--closeFile'('erased', V1, V3))))(fun (V27) -> ('un--returnError'('erased', 'erased', V1)) end)) end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--readFile-1827'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Right', E0} -> (fun (V4) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E24, E25} -> (fun (V5, V6) -> V5 end(E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V7, V8, V9) -> ((((V8('erased'))('erased'))(('nested--3432-1709--in--un--read'('erased', V1, V2, [], V4))))(fun (V10) -> case V10 of {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E16, E17} -> (fun (V12, V13) -> V12 end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V14, V15, V16) -> ((((V15('erased'))('erased'))(('un--closeFile'('erased', V1, V4))))(fun (V17) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E14, E15} -> (fun (V18, V19) -> V18 end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V20, V21, V22) -> V20 end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E8, E9, E10} -> (fun (V23, V24, V25) -> ((V24('erased'))({'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Strings':'un--fastAppend'(V11))})) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); {'Idris.Prelude.Types.Left', E18} -> (fun (V26) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E22, E23} -> (fun (V27, V28) -> V27 end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E19, E20, E21} -> (fun (V29, V30, V31) -> ((((V30('erased'))('erased'))(('un--closeFile'('erased', V1, V4))))(fun (V32) -> ('un--returnError'('erased', 'erased', V1)) end)) end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E26} -> (fun (V33) -> ('un--returnError'('erased', 'erased', V1)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in readFile,read-1773'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Right', E0} -> (fun (V7) -> ('nested--3432-1709--in--un--read'('erased', V1, V2, [V7 | V4], V3)) end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V8) -> ('un--returnError'('erased', 'erased', V1)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--readFile,read-1724'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V6, V7) -> V6 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> ((V12('erased'))({'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.List':'un--reverse'('erased', V4))})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V14, V15) -> V14 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V16, V17, V18) -> ((((V17('erased'))('erased'))(('un--fGetLine'('erased', V1, V3))))(fun (V19) -> case V19 of {'Idris.Prelude.Types.Right', E11} -> (fun (V20) -> ('nested--3432-1709--in--un--read'('erased', V1, V2, [V20 | V4], V3)) end(E11)); {'Idris.Prelude.Types.Left', E12} -> (fun (V21) -> ('un--returnError'('erased', 'erased', V1)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileSize-1640'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, V3)); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--removeFile-1583'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, {'Idris.Builtin.MkUnit'})); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileStatusTime-1528'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, V3)); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileModifiedTime-1473'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, V3)); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileAccessTime-1418'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, V3)); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--popen-1339'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V6, V7) -> V6 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> ((V12('erased'))({'Idris.Prelude.Types.Right', V4})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fPutStr-1202'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, {'Idris.Builtin.MkUnit'})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fGetChar-1139'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, ('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Int_Char'(V3)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fGetChars-1069'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, ('Idris.Idris2.Prelude.IO':'un--prim__getString'(V4)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fGetLine-1011'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, ('Idris.Idris2.Prelude.IO':'un--prim__getString'(V3)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--firstExists-918'(V0, V1, V2, V3, V4) -> case V4 of 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V5, V6) -> V5 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V7, V8, V9) -> V7 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V10, V11, V12) -> ((V11('erased'))({'Idris.Prelude.Types.Just', V2})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> ('un--firstExists'('erased', V1, V3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--exists-834'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Right', E0} -> (fun (V4) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E12, E13} -> (fun (V5, V6) -> V5 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V7, V8, V9) -> ((((V8('erased'))('erased'))(('un--closeFile'('erased', V1, V4))))(fun (V10) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E10, E11} -> (fun (V11, V12) -> V11 end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E7, E8, E9} -> (fun (V13, V14, V15) -> V13 end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E4, E5, E6} -> (fun (V16, V17, V18) -> ((V17('erased'))(0)) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E14} -> (fun (V19) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E21, E22} -> (fun (V20, V21) -> V20 end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E18, E19, E20} -> (fun (V22, V23, V24) -> V22 end(E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E15, E16, E17} -> (fun (V25, V26, V27) -> ((V26('erased'))(1)) end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--openFile-766'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, V4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--returnError-558'(V0, V1, V2, V3) -> case V3 of 0 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E14, E15} -> (fun (V4, V5) -> V4 end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V6, V7, V8) -> V6 end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E8, E9, E10} -> (fun (V9, V10, V11) -> ((V10('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileReadError'}})) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E22, E23} -> (fun (V12, V13) -> V12 end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E19, E20, E21} -> (fun (V14, V15, V16) -> V14 end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E16, E17, E18} -> (fun (V17, V18, V19) -> ((V18('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileWriteError'}})) end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 2 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E30, E31} -> (fun (V20, V21) -> V20 end(E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E27, E28, E29} -> (fun (V22, V23, V24) -> V22 end(E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E24, E25, E26} -> (fun (V25, V26, V27) -> ((V26('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileNotFound'}})) end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 3 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E38, E39} -> (fun (V28, V29) -> V28 end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E35, E36, E37} -> (fun (V30, V31, V32) -> V30 end(E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E32, E33, E34} -> (fun (V33, V34, V35) -> ((V34('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.PermissionDenied'}})) end(E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 4 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E46, E47} -> (fun (V36, V37) -> V36 end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E43, E44, E45} -> (fun (V38, V39, V40) -> V38 end(E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E40, E41, E42} -> (fun (V41, V42, V43) -> ((V42('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileExists'}})) end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V44, V45) -> V44 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V46, V47, V48) -> V46 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V49, V50, V51) -> ((V50('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.GenericFileError', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V3, 5))}})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--modeStr-527'(V0) -> case V0 of 0 -> <<"ab+"/utf8>>; 1 -> <<"a+"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-517'(V0) -> case V0 of 0 -> <<"wb+"/utf8>>; 1 -> <<"w+"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-507'(V0) -> case V0 of 0 -> <<"rb+"/utf8>>; 1 -> <<"r+"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-497'(V0) -> case V0 of 0 -> <<"ab"/utf8>>; 1 -> <<"a"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-487'(V0) -> case V0 of 0 -> <<"wb"/utf8>>; 1 -> <<"w"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-477'(V0) -> case V0 of 0 -> <<"rb"/utf8>>; 1 -> <<"r"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--3432-1709--in--un--read'(V0, V1, V2, V3, V4) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E18, E19} -> (fun (V5, V6) -> V5 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V7, V8, V9) -> ((((V8('erased'))('erased'))(('un--fEOF'('erased', V1, V4))))(fun (V10) -> case V10 of 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V11, V12) -> V11 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V13, V14, V15) -> V13 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V16, V17, V18) -> ((V17('erased'))({'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.List':'un--reverse'('erased', V3))})) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E16, E17} -> (fun (V19, V20) -> V19 end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V21, V22, V23) -> ((((V22('erased'))('erased'))(('un--fGetLine'('erased', V1, V4))))(fun (V24) -> case V24 of {'Idris.Prelude.Types.Right', E14} -> (fun (V25) -> ('nested--3432-1709--in--un--read'('erased', V1, V2, [V25 | V3], V4)) end(E14)); {'Idris.Prelude.Types.Left', E15} -> (fun (V26) -> ('un--returnError'('erased', 'erased', V1)) end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--3881-2121--in--un--getMs'(V0, V1) -> (('Idris.Idris2.Prelude.Interfaces':'un--sum'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V5, V6, V7)) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V10, V11, V12)) end end end end end}, {'Idris.Prelude.Num.dn--un--__mkNum', fun (V13) -> fun (V14) -> ((V13 + V14) rem 9223372036854775808) end end, fun (V15) -> fun (V16) -> ((V15 * V16) rem 9223372036854775808) end end, fun (V17) -> V17 end}}))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V2) -> ('nested--3881-2120--in--un--getM'(V0, V2)) end, V1)))).
'nested--3881-2120--in--un--getM'(V0, V1) -> case V1 of {'Idris.System.File.FileMode.Read'} -> (fun () -> 4 end()); {'Idris.System.File.FileMode.Write'} -> (fun () -> 2 end()); {'Idris.System.File.FileMode.Execute'} -> (fun () -> 1 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show__FileError'(V0) -> case V0 of {'Idris.System.File.GenericFileError', E0} -> (fun (V1) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"File error: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Int'(V1)))) end(E0)); {'Idris.System.File.FileReadError'} -> (fun () -> <<"File Read Error"/utf8>> end()); {'Idris.System.File.FileWriteError'} -> (fun () -> <<"File Write Error"/utf8>> end()); {'Idris.System.File.FileNotFound'} -> (fun () -> <<"File Not Found"/utf8>> end()); {'Idris.System.File.PermissionDenied'} -> (fun () -> <<"Permission Denied"/utf8>> end()); {'Idris.System.File.FileExists'} -> (fun () -> <<"File Exists"/utf8>> end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--showPrec_Show__FileError'(V0, V1) -> ('dn--un--show_Show__FileError'(V1)).
'dn--un--__Impl_Show_FileError'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show__FileError'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show__FileError'(V1, V2)) end end}.
'un--writeFile'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E46, E47} -> (fun (V4, V5) -> V4 end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(('un--openFile'('erased', V1, V2, {'Idris.System.File.WriteTruncate'}))))(fun (V9) -> case V9 of {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E35, E36} -> (fun (V11, V12) -> V11 end(E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E4, E5, E6} -> (fun (V13, V14, V15) -> ((((V14('erased'))('erased'))(('un--fPutStr'('erased', V1, V10, V3))))(fun (V16) -> case V16 of {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkUnit'} -> (fun () -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V18, V19) -> V18 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V20, V21, V22) -> ((((V21('erased'))('erased'))(('un--closeFile'('erased', V1, V10))))(fun (V23) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V24, V25) -> V24 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V26, V27, V28) -> V26 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V29, V30, V31) -> ((V30('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}})) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); {'Idris.Prelude.Types.Left', E21} -> (fun (V32) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E33, E34} -> (fun (V33, V34) -> V33 end(E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E22, E23, E24} -> (fun (V35, V36, V37) -> ((((V36('erased'))('erased'))(('un--closeFile'('erased', V1, V10))))(fun (V38) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E31, E32} -> (fun (V39, V40) -> V39 end(E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E28, E29, E30} -> (fun (V41, V42, V43) -> V41 end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E25, E26, E27} -> (fun (V44, V45, V46) -> ((V45('erased'))({'Idris.Prelude.Types.Left', V32})) end(E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); {'Idris.Prelude.Types.Left', E37} -> (fun (V47) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E44, E45} -> (fun (V48, V49) -> V48 end(E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E41, E42, E43} -> (fun (V50, V51, V52) -> V50 end(E41, E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E38, E39, E40} -> (fun (V53, V54, V55) -> ((V54('erased'))({'Idris.Prelude.Types.Left', V47})) end(E38, E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--stdout'() -> ('un--prim__stdout'()).
'un--stdin'() -> ('un--prim__stdin'()).
'un--stderr'() -> ('un--prim__stderr'()).
'un--returnError'(V0, V1, V2) -> case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E53, E54} -> (fun (V3, V4) -> V3 end(E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V57, V58) -> ((V58('erased'))(fun (V59) -> ('un--prim__fileErrno'(V59)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case V8 of 0 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V9, V10) -> V9 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E16, E17, E18} -> (fun (V11, V12, V13) -> V11 end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E13, E14, E15} -> (fun (V14, V15, V16) -> ((V15('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileReadError'}})) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E27, E28} -> (fun (V17, V18) -> V17 end(E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E24, E25, E26} -> (fun (V19, V20, V21) -> V19 end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E21, E22, E23} -> (fun (V22, V23, V24) -> ((V23('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileWriteError'}})) end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 2 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E35, E36} -> (fun (V25, V26) -> V25 end(E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E32, E33, E34} -> (fun (V27, V28, V29) -> V27 end(E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E29, E30, E31} -> (fun (V30, V31, V32) -> ((V31('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileNotFound'}})) end(E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 3 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E43, E44} -> (fun (V33, V34) -> V33 end(E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E40, E41, E42} -> (fun (V35, V36, V37) -> V35 end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E37, E38, E39} -> (fun (V38, V39, V40) -> ((V39('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.PermissionDenied'}})) end(E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 4 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E51, E52} -> (fun (V41, V42) -> V41 end(E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E48, E49, E50} -> (fun (V43, V44, V45) -> V43 end(E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E45, E46, E47} -> (fun (V46, V47, V48) -> ((V47('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileExists'}})) end(E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V49, V50) -> V49 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V51, V52, V53) -> V51 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V54, V55, V56) -> ((V55('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.GenericFileError', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg__Int'(V8, 5))}})) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--removeFile'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__removeFile'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--removeFile-1583'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--readFile'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E30, E31} -> (fun (V3, V4) -> V3 end(E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(('un--openFile'('erased', V1, V2, {'Idris.System.File.Read'}))))(fun (V8) -> case V8 of {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E27, E28} -> (fun (V10, V11) -> V10 end(E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E4, E5, E6} -> (fun (V12, V13, V14) -> ((((V13('erased'))('erased'))(('nested--3432-1709--in--un--read'('erased', V1, V2, [], V9))))(fun (V15) -> case V15 of {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V17, V18) -> V17 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V19, V20, V21) -> ((((V20('erased'))('erased'))(('un--closeFile'('erased', V1, V9))))(fun (V22) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V23, V24) -> V23 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V25, V26, V27) -> V25 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V28, V29, V30) -> ((V29('erased'))({'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Strings':'un--fastAppend'(V16))})) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); {'Idris.Prelude.Types.Left', E21} -> (fun (V31) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E25, E26} -> (fun (V32, V33) -> V32 end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E22, E23, E24} -> (fun (V34, V35, V36) -> ((((V35('erased'))('erased'))(('un--closeFile'('erased', V1, V9))))(fun (V37) -> ('un--returnError'('erased', 'erased', V1)) end)) end(E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); {'Idris.Prelude.Types.Left', E29} -> (fun (V38) -> ('un--returnError'('erased', 'erased', V1)) end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--prim__writeLine'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__writeLine")).
'un--prim__stdout'() -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__stdout")).
'un--prim__stdin'() -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__stdin")).
'un--prim__stderr'() -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__stderr")).
'un--prim__removeFile'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__removeFile")).
'un--prim__readLine'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__readLine")).
'un--prim__readChars'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__readChars")).
'un--prim__readChar'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__readChar")).
'un--prim__popen'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__popen")).
'un--prim__pclose'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__pclose")).
'un--prim__open'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__open")).
'un--prim__flush'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__flush")).
'un--prim__fileStatusTime'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileStatusTime")).
'un--prim__fileSize'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileSize")).
'un--prim__fileModifiedTime'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileModifiedTime")).
'un--prim__fileErrno'(V0) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileErrno")).
'un--prim__fileAccessTime'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileAccessTime")).
'un--prim__fPoll'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fPoll")).
'un--prim__error'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__error")).
'un--prim__eof'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__eof")).
'un--prim__close'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__close")).
'un--prim__chmod'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__chmod")).
'un--popen'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__popen'(V2, ('un--modeStr'(V3)), V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--popen-1339'('erased', V1, V3, V2, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(('Idris.Idris2.PrimIO':'un--prim__nullAnyPtr'(V9)), 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--pclose'(V0, V1, V2) -> case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E0, E1} -> (fun (V3, V4) -> ((V4('erased'))(fun (V5) -> ('un--prim__pclose'(V2, V5)) end)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--openFile'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__open'(V2, ('un--modeStr'(V3)), V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--openFile-766'('erased', V1, V3, V2, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(('Idris.Idris2.PrimIO':'un--prim__nullAnyPtr'(V9)), 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--ok'(V0, V1, V2, V3) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V4, V5) -> V4 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V6, V7, V8) -> V6 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V9, V10, V11) -> ((V10('erased'))({'Idris.Prelude.Types.Right', V3})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--modeStr'(V0) -> case V0 of {'Idris.System.File.Read'} -> (fun () -> ('case--modeStr-477'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.WriteTruncate'} -> (fun () -> ('case--modeStr-487'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.Append'} -> (fun () -> ('case--modeStr-497'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.ReadWrite'} -> (fun () -> ('case--modeStr-507'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.ReadWriteTruncate'} -> (fun () -> ('case--modeStr-517'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.ReadAppend'} -> (fun () -> ('case--modeStr-527'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkMode'(V0) -> ((((((('nested--3881-2121--in--un--getMs'(V0, case V0 of {'Idris.System.File.MkPermissions', E0, E1, E2} -> (fun (V1, V2, V3) -> V1 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) * 64) rem 9223372036854775808) + ((('nested--3881-2121--in--un--getMs'(V0, case V0 of {'Idris.System.File.MkPermissions', E3, E4, E5} -> (fun (V4, V5, V6) -> V5 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) * 8) rem 9223372036854775808)) rem 9223372036854775808) + ('nested--3881-2121--in--un--getMs'(V0, case V0 of {'Idris.System.File.MkPermissions', E6, E7, E8} -> (fun (V7, V8, V9) -> V9 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))) rem 9223372036854775808).
'un--firstExists'(V0, V1, V2) -> case V2 of [] -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V3, V4) -> V3 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V5, V6, V7) -> V5 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V8, V9, V10) -> ((V9('erased'))({'Idris.Prelude.Types.Nothing'})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E8 | E9] -> (fun (V11, V12) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E21, E22} -> (fun (V13, V14) -> V13 end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E10, E11, E12} -> (fun (V15, V16, V17) -> ((((V16('erased'))('erased'))(('un--exists'('erased', V1, V11))))(fun (V18) -> case V18 of 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V19, V20) -> V19 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E16, E17, E18} -> (fun (V21, V22, V23) -> V21 end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E13, E14, E15} -> (fun (V24, V25, V26) -> ((V25('erased'))({'Idris.Prelude.Types.Just', V11})) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> ('un--firstExists'('erased', V1, V12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileStatusTime'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__fileStatusTime'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fileStatusTime-1528'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord__Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileSize'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__fileSize'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fileSize-1640'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord__Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileModifiedTime'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__fileModifiedTime'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fileModifiedTime-1473'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord__Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileError'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V3, V4) -> V3 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V17, V18) -> ((V18('erased'))(fun (V19) -> ('un--prim__error'(V2, V19)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V9, V10) -> V9 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V11, V12, V13) -> V11 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(V8, 0)))) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileAccessTime'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__fileAccessTime'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fileAccessTime-1418'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord__Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fflush'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V3, V4) -> V3 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V17, V18) -> ((V18('erased'))(fun (V19) -> ('un--prim__flush'(V2, V19)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V9, V10) -> V9 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V11, V12, V13) -> V11 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V14, V15, V16) -> ((V15('erased'))({'Idris.Builtin.MkUnit'})) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fPutStrLn'(V0, V1, V2, V3) -> ('un--fPutStr'('erased', V1, V2, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V3, <<"\x{a}"/utf8>>)))).
'un--fPutStr'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__writeLine'(V2, V3, V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--fPutStr-1202'('erased', V1, V2, V3, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Int'(V9, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fPoll'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V3, V4) -> V3 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V17, V18) -> ((V18('erased'))(fun (V19) -> ('un--prim__fPoll'(V2, V19)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V9, V10) -> V9 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V11, V12, V13) -> V11 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord__Int'(V8, 0)))) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fGetLine'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__readLine'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fGetLine-1011'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(('Idris.Idris2.PrimIO':'un--prim__nullAnyPtr'(('Idris.Idris2.PrimIO':'un--prim__forgetPtr'('erased', V8)))), 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fGetChars'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__readChars'(V3, V2, V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--fGetChars-1069'('erased', V1, V2, V3, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(('Idris.Idris2.PrimIO':'un--prim__nullAnyPtr'(('Idris.Idris2.PrimIO':'un--prim__forgetPtr'('erased', V9)))), 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fGetChar'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E12, E13} -> (fun (V3, V4) -> V3 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V18, V19) -> ((V19('erased'))(fun (V20) -> ('un--prim__readChar'(V2, V20)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E10, E11} -> (fun (V9, V10) -> V9 end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V11, V12, V13) -> ((((V12('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E8, E9} -> (fun (V15, V16) -> ((V16('erased'))(fun (V17) -> ('un--prim__error'(V2, V17)) end)) end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V14) -> ('case--fGetChar-1139'('erased', V1, V2, V8, V14, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(V14, 0)))) end)) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fEOF'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V3, V4) -> V3 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V17, V18) -> ((V18('erased'))(fun (V19) -> ('un--prim__eof'(V2, V19)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V9, V10) -> V9 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V11, V12, V13) -> V11 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(V8, 0)))) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--exists'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E26, E27} -> (fun (V3, V4) -> V3 end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(('un--openFile'('erased', V1, V2, {'Idris.System.File.Read'}))))(fun (V8) -> case V8 of {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E15, E16} -> (fun (V10, V11) -> V10 end(E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E4, E5, E6} -> (fun (V12, V13, V14) -> ((((V13('erased'))('erased'))(('un--closeFile'('erased', V1, V9))))(fun (V15) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V16, V17) -> V16 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E10, E11, E12} -> (fun (V18, V19, V20) -> V18 end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E7, E8, E9} -> (fun (V21, V22, V23) -> ((V22('erased'))(0)) end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); {'Idris.Prelude.Types.Left', E17} -> (fun (V24) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E24, E25} -> (fun (V25, V26) -> V25 end(E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E21, E22, E23} -> (fun (V27, V28, V29) -> V27 end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E18, E19, E20} -> (fun (V30, V31, V32) -> ((V31('erased'))(1)) end(E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--closeFile'(V0, V1, V2) -> case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E0, E1} -> (fun (V3, V4) -> ((V4('erased'))(fun (V5) -> ('un--prim__close'(V2, V5)) end)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--chmodRaw'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__chmod'(V2, V3, V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--chmodRaw-2191'('erased', V1, V3, V2, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Int'(V9, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--chmod'(V0, V1, V2, V3) -> ('un--chmodRaw'('erased', V1, V2, ('un--mkMode'(V3)))).
'un--FilePtr'() -> {'Idris.PrimIO.AnyPtr'}.
