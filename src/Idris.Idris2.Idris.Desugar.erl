-module('Idris.Idris2.Idris.Desugar').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--desugarDecl-9645'/7,
  'case--desugarDecl-9586'/10,
  'case--desugarDecl-9462'/10,
  'case--desugarDecl-9399'/9,
  'case--case block in case block in case block in desugarDecl-9261'/19,
  'case--case block in case block in desugarDecl-9193'/18,
  'case--case block in case block in case block in case block in case block in desugarDecl-9126'/28,
  'case--case block in case block in case block in case block in desugarDecl-9067'/25,
  'case--case block in case block in case block in desugarDecl-8988'/22,
  'case--case block in case block in case block in desugarDecl-8919'/21,
  'case--case block in case block in desugarDecl-8869'/20,
  'case--case block in desugarDecl-8824'/18,
  'case--desugarDecl-8784'/15,
  'case--desugarDecl-8715'/14,
  'case--case block in case block in case block in desugarDecl-8492'/24,
  'case--case block in case block in case block in case block in desugarDecl-8367'/31,
  'case--case block in case block in case block in case block in desugarDecl-8298'/29,
  'case--case block in case block in case block in desugarDecl-8232'/28,
  'case--case block in case block in case block in desugarDecl-8159'/27,
  'case--case block in case block in desugarDecl-8090'/24,
  'case--case block in desugarDecl-8032'/22,
  'case--case block in desugarDecl-7972'/20,
  'case--desugarDecl-7919'/20,
  'case--desugarDecl-7855'/18,
  'case--desugarDecl-7449'/14,
  'case--desugarDecl-7414'/11,
  'case--desugarClause-6588'/13,
  'case--case block in desugarClause-6487'/15,
  'case--desugarClause-6444'/12,
  'case--expandDo-6079'/18,
  'case--expandDo-5907'/15,
  'case--expandDo-5779'/13,
  'case--desugarB-5537'/10,
  'case--desugarB-5475'/11,
  'case--desugarB-5103'/12,
  'case--desugarB-4994'/11,
  'case--desugarB-4846'/10,
  'case--desugarB-4791'/10,
  'case--desugarB-4726'/10,
  'case--desugarB-4624'/12,
  'case--toTokList-3784'/7,
  'case--case block in toTokList-3636'/8,
  'case--toTokList-3611'/8,
  'case--extendSyn-3570'/3,
  'nested--14395-5423--in--un--toPure'/11,
  'nested--14451-7030--in--un--toIDef'/8,
  'nested--14451-7484--in--un--pairToCons'/15,
  'nested--14445-6828--in--un--mkRecType'/9,
  'nested--14451-8627--in--un--mkConName'/13,
  'nested--14451-8628--in--un--mapDesugarPiInfo'/14,
  'nested--14395-5422--in--un--guard'/11,
  'nested--14451-7029--in--un--getFn'/8,
  'nested--14451-8626--in--un--fname'/13,
  'nested--14451-7485--in--un--expandConstraint'/15,
  'nested--14030-3594--in--un--backtickPrec'/5,
  'un--toTokList'/2,
  'un--pairname'/0,
  'un--mkpairname'/0,
  'un--mkdpairname'/0,
  'un--mkPrec'/2,
  'un--initBangs'/0,
  'un--idiomise'/2,
  'un--getDecl'/2,
  'un--extendSyn'/3,
  'un--expandList'/9,
  'un--expandDo'/9,
  'un--dpairname'/0,
  'un--desugarUpdate'/8,
  'un--desugarType'/6,
  'un--desugarTree'/8,
  'un--desugarFnOpt'/6,
  'un--desugarField'/7,
  'un--desugarDecl'/6,
  'un--desugarData'/7,
  'un--desugarClause'/7,
  'un--desugarB'/8,
  'un--desugar'/8,
  'un--bindBangs'/2,
  'un--addNS'/2
]).
'case--desugarDecl-9645'(V0, V1, V2, V3, V4, V5, V6) -> case V0 of {'Idris.Idris.Syntax.Hide', E0} -> (fun (V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Context':'un--hide'(V5, V1, V7, V12)) end end end end} | []]} end end(E0)); {'Idris.Idris.Syntax.Logging', E1} -> (fun (V13) -> fun (V14) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.ILog', {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Options.Log':'un--topics'(V13)), ('Idris.Idris2.Core.Options.Log':'un--verbosity'(V13))}} | []]} end end(E1)); {'Idris.Idris.Syntax.LazyOn', E2} -> (fun (V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Context':'un--lazyActive'(V5, V15, V20)) end end end end} | []]} end end(E2)); {'Idris.Idris.Syntax.UnboundImplicits', E3} -> (fun (V21) -> fun (V22) -> begin (V23 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V5, V21, V22))), case V23 of {'Idris.Prelude.Types.Left', E4} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V25) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V5, V21, V29)) end end end end} | []]} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); {'Idris.Idris.Syntax.PrefixRecordProjections', E6} -> (fun (V30) -> fun (V31) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Context':'un--setPrefixRecordProjections'(V5, V30, V35)) end end end end} | []]} end end(E6)); {'Idris.Idris.Syntax.AmbigDepth', E7} -> (fun (V36) -> fun (V37) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Context':'un--setAmbigLimit'(V5, V36, V41)) end end end end} | []]} end end(E7)); {'Idris.Idris.Syntax.AutoImplicitDepth', E8} -> (fun (V42) -> fun (V43) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Context':'un--setAutoImplicitLimit'(V5, V42, V47)) end end end end} | []]} end end(E8)); {'Idris.Idris.Syntax.PairNames', E9, E10, E11} -> (fun (V48, V49, V50) -> fun (V51) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Context':'un--setPair'(V5, V1, V48, V49, V50, V55)) end end end end} | []]} end end(E9, E10, E11)); {'Idris.Idris.Syntax.RewriteName', E12, E13} -> (fun (V56, V57) -> fun (V58) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.Context':'un--setRewrite'(V5, V1, V56, V57, V62)) end end end end} | []]} end end(E12, E13)); {'Idris.Idris.Syntax.PrimInteger', E14} -> (fun (V63) -> fun (V64) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Core.Context':'un--setFromInteger'(V5, V63, V68)) end end end end} | []]} end end(E14)); {'Idris.Idris.Syntax.PrimString', E15} -> (fun (V69) -> fun (V70) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Context':'un--setFromString'(V5, V69, V74)) end end end end} | []]} end end(E15)); {'Idris.Idris.Syntax.PrimChar', E16} -> (fun (V75) -> fun (V76) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Context':'un--setFromChar'(V5, V75, V80)) end end end end} | []]} end end(E16)); {'Idris.Idris.Syntax.CGAction', E17, E18} -> (fun (V81, V82) -> fun (V83) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Context':'un--addDirective'(V5, V81, V82, V87)) end end end end} | []]} end end(E17, E18)); {'Idris.Idris.Syntax.Names', E19, E20} -> (fun (V88, V89) -> fun (V90) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> ('Idris.Idris2.Core.Context':'un--addNameDirective'(V5, V1, V88, V89, V94)) end end end end} | []]} end end(E19, E20)); {'Idris.Idris.Syntax.StartExpr', E21} -> (fun (V95) -> fun (V96) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"%start not implemented"/utf8>>}, V100)) end end end end} | []]} end end(E21)); {'Idris.Idris.Syntax.Overloadable', E22} -> (fun (V101) -> fun (V102) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Context':'un--setNameFlag'(V5, V1, V101, {'Idris.Core.Context.Overloadable'}, V106)) end end end end} | []]} end end(E22)); {'Idris.Idris.Syntax.Extension', E23} -> (fun (V107) -> fun (V108) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> ('Idris.Idris2.Core.Context':'un--setExtension'(V5, V107, V112)) end end end end} | []]} end end(E23)); {'Idris.Idris.Syntax.DefaultTotality', E24} -> (fun (V113) -> fun (V114) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> ('Idris.Idris2.Core.Context':'un--setDefaultTotalityOption'(V5, V113, V118)) end end end end} | []]} end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarDecl-9586'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> fun (V12) -> begin (V13 = ('un--desugar'(V8, V7, V5, V6, {'Idris.Idris.Desugar.AnyExpr'}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V10, V4)), V0, V12))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.ITransform', V3, {'Idris.Core.Name.UN', V2}, V11, V15} | []]} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarDecl-9462'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Idris.Syntax.MkSyntax', E0, E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Data.StringMap':'un--insert'('erased', V0, {'Idris.Builtin.MkPair', V2, V1}, V10)), V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarDecl-9399'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Idris.Syntax.MkSyntax', E0, E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Idris.Syntax.MkSyntax', V9, ('Idris.Idris2.Data.StringMap':'un--insert'('erased', V0, V1, V10)), V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in desugarDecl-9261'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V19, V20) -> case V20 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V21, V22) -> case V22 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V23, V24) -> V24 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in desugarDecl-9193'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V32, V33, V34)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V35, V36)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V37) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V7, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V15, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V38) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V38)) end, V2)))))), [], V37)) end))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V18) -> case V18 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V19, V20) -> case V20 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V21, V22) -> case V22 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V23, V24) -> V24 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V13)))); 1 -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in case block in desugarDecl-9126'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IRecord', V6, {'Idris.Prelude.Types.Just', V22}, V4, {'Idris.TTImp.TTImp.MkImpRecord', V6, V3, V20, V25, V23}} | []]}.
'case--case block in case block in case block in case block in desugarDecl-9067'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> begin (V26 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> ('nested--14451-8627--in--un--mkConName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V3)) end, fun () -> fun (V25) -> V25 end end, V1))), fun (V27) -> ('case--case block in case block in case block in case block in case block in desugarDecl-9126'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V26, V26, V27)) end end.
'case--case block in case block in case block in desugarDecl-8988'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> begin (V22 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V3))), fun (V23) -> begin (V27 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V24) -> ('un--desugarField'(V11, V10, V9, V8, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V7, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V25) -> ('nested--14451-8626--in--un--fname'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V25)) end, V0)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V26) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V26)) end, V2)))))), ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(V22)), V24)) end, V0, []))(V23))), case V27 of {'Idris.Prelude.Types.Left', E0} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V29) -> (('case--case block in case block in case block in case block in desugarDecl-9067'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V29, V29))(V23)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in case block in desugarDecl-8919'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V21, V22) -> case V22 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V25, V26) -> {'Idris.Builtin.MkPair', V21, {'Idris.Builtin.MkPair', V23, {'Idris.Builtin.MkPair', V25, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V18, V26))}}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in desugarDecl-8869'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> begin (V27 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V20) -> case V20 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V21, V22) -> case V22 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V25, V26) -> {'Idris.Builtin.MkPair', V21, {'Idris.Builtin.MkPair', V23, {'Idris.Builtin.MkPair', V25, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V18, V26))}}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V13))), ('case--case block in case block in case block in desugarDecl-8988'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V27, V27)) end.
'case--case block in desugarDecl-8824'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> begin (V18 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V10, V17))), case V18 of {'Idris.Prelude.Types.Left', E0} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V20) -> begin (V42 = case V20 of 0 -> (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V30, V31, V32)) end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V35, V36, V37)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V38, V39)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V40) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V7, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V15, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V41) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V41)) end, V2)))))), [], V40)) end))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V21) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V22, V23) -> case V23 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V24, V25) -> case V25 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V26, V27) -> V27 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V13)))); 1 -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), (('case--case block in case block in desugarDecl-8869'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V20, V42, V42))(V17)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--desugarDecl-8784'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> begin (V16 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V15) -> ('nested--14451-8626--in--un--fname'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V15)) end, V0))), fun (V17) -> ('case--case block in desugarDecl-8824'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V16, V16, V17)) end end.
'case--desugarDecl-8715'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> case V15 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V18, V19) -> fun (V20) -> begin (V21 = ('un--desugar'(V11, V10, V8, V9, {'Idris.Idris.Desugar.AnyExpr'}, V7, V19, V20))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> begin (V24 = (('nested--14451-8628--in--un--mapDesugarPiInfo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V7, V18))(V20))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V14, {'Idris.Builtin.MkPair', V16, {'Idris.Builtin.MkPair', V26, V23}}}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in desugarDecl-8492'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> case V23 of 0 -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V32, V33, V34)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V35, V36)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V37) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, V11, [], V37)) end))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V24) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V24)) end, V19)))), (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V40, V41, V42)) end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V45, V46, V47)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V48, V49)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V50) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, V11, [], V50)) end))(V21)))); 1 -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in desugarDecl-8367'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> begin (V50 = (('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end, fun () -> fun (V32) -> fun (V33) -> begin (V35 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V34) -> ('un--desugarDecl'(V15, V14, V13, V12, V11, V34)) end, V32, []))(V33))), case V35 of {'Idris.Prelude.Types.Left', E0} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V40, V41, V42)) end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V45, V46, V47)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V48, V49)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V37))}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V0))(V30))), case V50 of {'Idris.Prelude.Types.Left', E2} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V52) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Idris.Elab.Implementation':'un--elabImplementation'(V53, V14, V13, V15, V12, V10, V9, V16, V7, V55, V54, V26, V28, V4, V25, V2, V1, V52)) end end end} | []]} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--case block in case block in case block in case block in desugarDecl-8298'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> case V28 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V29, V30) -> {'Idris.Builtin.MkPair', V29, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V24, V30))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in desugarDecl-8232'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> begin (V31 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V28) -> case V28 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V29, V30) -> {'Idris.Builtin.MkPair', V29, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V24, V30))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V19))), fun (V32) -> ('case--case block in case block in case block in case block in desugarDecl-8367'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V31, V31, V32)) end end.
'case--case block in case block in case block in desugarDecl-8159'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V26 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V27, V28) -> case V28 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V29, V30) -> {'Idris.Builtin.MkPair', V27, {'Idris.Builtin.MkPair', V29, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V24, V30))}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in desugarDecl-8090'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> begin (V24 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V14, V23))), case V24 of {'Idris.Prelude.Types.Left', E0} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V26) -> begin (V54 = case V26 of 0 -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V30, V31, V32)) end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V35, V36, V37)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V38, V39)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V40) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, V11, [], V40)) end))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V27) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V27)) end, V19)))), (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V43, V44, V45)) end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V48, V49, V50)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V51, V52)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V53) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, V11, [], V53)) end))(V21)))); 1 -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V56 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V55) -> ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V54, V55)) end, V21))), begin (V62 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V57) -> case V57 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V58, V59) -> case V59 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V60, V61) -> {'Idris.Builtin.MkPair', V58, {'Idris.Builtin.MkPair', V60, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V54, V61))}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V17))), (('case--case block in case block in case block in desugarDecl-8232'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V26, V54, V56, V62, V62))(V23)) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--case block in desugarDecl-8032'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> begin (V24 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V22) -> fun (V23) -> ('un--desugar'(V15, V14, V12, V13, {'Idris.Idris.Desugar.AnyExpr'}, V11, V22, V23)) end end, V3, []))(V21))), case V24 of {'Idris.Prelude.Types.Left', E0} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V26) -> ('case--case block in case block in desugarDecl-8090'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V26, V26, V21)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--case block in desugarDecl-7972'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V20, V21) -> fun (V22) -> begin (V23 = ('un--desugar'(V15, V14, V12, V13, {'Idris.Idris.Desugar.AnyExpr'}, V11, V21, V22))), case V23 of {'Idris.Prelude.Types.Left', E2} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, V25}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarDecl-7919'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> begin (V27 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V20) -> case V20 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V21, V22) -> fun (V23) -> begin (V24 = ('un--desugar'(V15, V14, V12, V13, {'Idris.Idris.Desugar.AnyExpr'}, V11, V22, V23))), case V24 of {'Idris.Prelude.Types.Left', E2} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V21, V26}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5, []))(V19))), case V27 of {'Idris.Prelude.Types.Left', E4} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V29) -> ('case--case block in desugarDecl-8032'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V29, V29, V19)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--desugarDecl-7855'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V20, V21) -> fun (V22) -> begin (V23 = ('un--desugar'(V15, V14, V12, V13, {'Idris.Idris.Desugar.AnyExpr'}, V11, V21, V22))), case V23 of {'Idris.Prelude.Types.Left', E4} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V18, {'Idris.Builtin.MkPair', V20, V25}}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarDecl-7449'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Idris.Syntax.MkSyntax', E0, E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V14, V15, V16, V17, V18, V19, V20, V21, V22) -> {'Idris.Idris.Syntax.MkSyntax', V14, V15, V16, V17, V18, V19, V20, V9, V22} end(E0, E1, E2, E3, E4, E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarDecl-7414'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V8 of {'Idris.Idris.Syntax.MkSyntax', E0, E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Idris.Syntax.MkSyntax', V11, V12, V13, V14, V15, V16, V17, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V10, V9)), V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarClause-6588'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> fun (V15) -> begin (V16 = ('un--desugar'(V10, V9, V7, V8, {'Idris.Idris.Desugar.AnyExpr'}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V13, V6)), V2, V15))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V4, V14, V18, V1, V11}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in desugarClause-6487'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V10 of [] -> V14; _ -> {'Idris.TTImp.TTImp.ILocal', V3, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V22, V23, V24)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V25, V26)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V10)), V14} end.
'case--desugarClause-6444'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V12, V13) -> fun (V14) -> begin (V15 = ('un--desugar'(V9, V8, V6, V7, {'Idris.Idris.Desugar.AnyExpr'}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V12, V5)), V1, V14))), case V15 of {'Idris.Prelude.Types.Left', E2} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V3, V13, case V10 of [] -> V17; _ -> {'Idris.TTImp.TTImp.ILocal', V3, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V25, V26, V27)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V28, V29)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V10)), V17} end}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--expandDo-6079'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V18, V19) -> fun (V20) -> begin (V21 = (('un--desugarB'(V13, V14, V12, V10, V11, V9, V8, V1))(V20))), case V21 of {'Idris.Prelude.Types.Left', E2} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V23) -> begin (V25 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V24) -> ('un--desugarClause'(V13, V12, V11, V10, V8, 0, V24)) end, V0, []))(V20))), case V25 of {'Idris.Prelude.Types.Left', E4} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V27) -> begin (V28 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V18, V8))), begin (V29 = (('un--expandDo'(V13, V12, V11, V10, V9, V28, V7, V6, V5))(V20))), case V29 of {'Idris.Prelude.Types.Left', E6} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V14))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E8} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V35) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V35 of {'Idris.Idris.Desugar.MkBangData', E10, E11} -> (fun (V36, V37) -> V37 end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.TTImp.TTImp.ICase', V4, V23, V16, [{'Idris.TTImp.TTImp.PatClause', V4, V19, V31} | V27]}))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--expandDo-5907'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> fun (V17) -> begin (V18 = ('un--desugar'(V12, V11, V9, V10, V8, V7, V1, V17))), case V18 of {'Idris.Prelude.Types.Left', E2} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V20) -> begin (V22 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V21) -> ('un--desugarClause'(V12, V11, V10, V9, V7, 0, V21)) end, V0, []))(V17))), case V22 of {'Idris.Prelude.Types.Left', E4} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V24) -> begin (V25 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V15, V7))), begin (V26 = (('un--expandDo'(V12, V11, V10, V9, V8, V25, V6, V5, V4))(V17))), case V26 of {'Idris.Prelude.Types.Left', E6} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V3, {'Idris.TTImp.TTImp.IApp', V3, {'Idris.TTImp.TTImp.IVar', V3, ('un--addNS'(V5, {'Idris.Core.Name.UN', <<">>="/utf8>>}))}, V20}, {'Idris.TTImp.TTImp.ILam', V3, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V3, 1}, {'Idris.TTImp.TTImp.ICase', V3, {'Idris.TTImp.TTImp.IVar', V3, {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V3, 1}, [{'Idris.TTImp.TTImp.PatClause', V3, V16, V28} | V24]}}}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--expandDo-5779'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V11 of {'Idris.TTImp.TTImp.ICase', E0, E1, E2, E3} -> (fun (V13, V14, V15, V16) -> {'Idris.TTImp.TTImp.IVar', V1, {'Idris.Core.Name.UN', <<"Unit"/utf8>>}} end(E0, E1, E2, E3)); _ -> {'Idris.TTImp.TTImp.Implicit', V1, 1} end.
'case--desugarB-5537'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--desugarB'(V9, V8, V7, V6, V5, V4, V3, {'Idris.Idris.Syntax.PApp', V2, {'Idris.Idris.Syntax.PRef', V2, {'Idris.Core.Name.UN', <<"rangeFrom"/utf8>>}}, V1})) end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> ('un--desugarB'(V9, V8, V7, V6, V5, V4, V3, {'Idris.Idris.Syntax.PApp', V2, {'Idris.Idris.Syntax.PApp', V2, {'Idris.Idris.Syntax.PRef', V2, {'Idris.Core.Name.UN', <<"rangeFromThen"/utf8>>}}, V1}, V10})) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarB-5475'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V1 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--desugarB'(V10, V9, V8, V7, V6, V5, V4, {'Idris.Idris.Syntax.PApp', V3, {'Idris.Idris.Syntax.PApp', V3, {'Idris.Idris.Syntax.PRef', V3, {'Idris.Core.Name.UN', <<"rangeFromTo"/utf8>>}}, V2}, V0})) end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> ('un--desugarB'(V10, V9, V8, V7, V6, V5, V4, {'Idris.Idris.Syntax.PApp', V3, {'Idris.Idris.Syntax.PApp', V3, {'Idris.Idris.Syntax.PApp', V3, {'Idris.Idris.Syntax.PRef', V3, {'Idris.Core.Name.UN', <<"rangeFromThenTo"/utf8>>}}, V2}, V11}, V0})) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarB-5103'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V10 of {'Idris.Idris.Desugar.MkBangData', E0, E1} -> (fun (V12, V13) -> {'Idris.Idris.Desugar.MkBangData', ((V12 + 1) rem 9223372036854775808), [{'Idris.Builtin.MkPair', V11, {'Idris.Builtin.MkPair', V1, V9}} | V13]} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarB-4994'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Idris.Syntax.MkSyntax', E0, E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Idris.Syntax.MkSyntax', V11, V12, V13, V14, V15, V16, [{'Idris.Core.Name.UN', V0} | V17], V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarB-4846'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V1, {'Idris.Core.TT.Ch', V0}}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V1, {'Idris.TTImp.TTImp.IVar', V1, V11}, {'Idris.TTImp.TTImp.IPrimVal', V1, {'Idris.Core.TT.Ch', V0}}}} end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarB-4791'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V1, {'Idris.Core.TT.Str', V0}}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V1, {'Idris.TTImp.TTImp.IVar', V1, V11}, {'Idris.TTImp.TTImp.IPrimVal', V1, {'Idris.Core.TT.Str', V0}}}} end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarB-4726'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V1, {'Idris.TTImp.TTImp.UniqueDefault', {'Idris.TTImp.TTImp.IPrimVal', V1, {'Idris.Core.TT.BI', V0}}}, [{'Idris.TTImp.TTImp.IPrimVal', V1, {'Idris.Core.TT.BI', V0}} | [{'Idris.TTImp.TTImp.IPrimVal', V1, {'Idris.Core.TT.I', V0}} | []]]}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V1, {'Idris.TTImp.TTImp.IVar', V1, V11}, {'Idris.TTImp.TTImp.IPrimVal', V1, {'Idris.Core.TT.BI', V0}}}} end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--desugarB-4624'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--desugarB'(V9, V8, V7, V6, V5, V4, V3, {'Idris.Idris.Syntax.PLam', V2, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V2, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V2}, {'Idris.Idris.Syntax.POp', V2, V1, {'Idris.Idris.Syntax.PRef', V2, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, V0}})) end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V12) -> ('un--desugarB'(V9, V8, V7, V6, V5, V4, V3, {'Idris.Idris.Syntax.PPrefixOp', V2, V1, V0})) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toTokList-3784'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V2, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V5, <<"\x{27} is not a prefix operator"/utf8>>))))}, V7)) end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> fun (V9) -> begin (V10 = (('un--toTokList'(V3, V0))(V9))), case V10 of {'Idris.Prelude.Types.Left', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Right', [{'Idris.Utils.Shunting.Op', V2, V1, {'Idris.Utils.Shunting.Prefix', V8}} | V12]} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in toTokList-3636'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> fun (V8) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V3, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Unknown operator \x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V6, <<"\x{27}"/utf8>>))))}, V8)) end; 1 -> fun (V9) -> begin (V10 = (('un--toTokList'(V4, V0))(V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> {'Idris.Prelude.Types.Right', [{'Idris.Utils.Shunting.Expr', V1} | [{'Idris.Utils.Shunting.Op', V3, V2, ('nested--14030-3594--in--un--backtickPrec'(V0, V1, V2, V3, V4))} | V12]]} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toTokList-3611'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('case--case block in toTokList-3636'(V0, V1, V2, V3, V4, V5, V6, (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V15, V16, V17)) end end end end end}, fun (V18) -> ('Idris.Idris2.Parser.Lexer.Source':'un--isOpChar'(V18)) end))(('Idris.Idris2.Prelude.Types':'un--unpack'(V6)))))) end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V20, V21) -> case V20 of {'Idris.Idris.Syntax.Prefix'} -> (fun () -> fun (V22) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V3, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V6, <<"\x{27} is a prefix operator"/utf8>>))))}, V22)) end end()); _ -> fun (V23) -> begin (V24 = (('un--toTokList'(V4, V0))(V23))), case V24 of {'Idris.Prelude.Types.Left', E3} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V26) -> {'Idris.Prelude.Types.Right', [{'Idris.Utils.Shunting.Expr', V1} | [{'Idris.Utils.Shunting.Op', V3, V2, ('un--mkPrec'(V20, V21))} | V26]]} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--extendSyn-3570'(V0, V1, V2) -> case V2 of {'Idris.Idris.Syntax.MkSyntax', E0, E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Data.StringMap':'un--mergeLeft'('erased', case V0 of {'Idris.Idris.Syntax.MkSyntax', E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20) -> V12 end(E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)), ('Idris.Idris2.Data.StringMap':'un--mergeLeft'('erased', case V0 of {'Idris.Idris.Syntax.MkSyntax', E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V22 end(E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)), ('Idris.Idris2.Data.ANameMap':'un--merge'('erased', case V0 of {'Idris.Idris.Syntax.MkSyntax', E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38) -> V32 end(E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5)), V6, ('Idris.Idris2.Data.ANameMap':'un--merge'('erased', case V0 of {'Idris.Idris.Syntax.MkSyntax', E36, E37, E38, E39, E40, E41, E42, E43, E44} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47) -> V43 end(E36, E37, E38, E39, E40, E41, E42, E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V7)), V8, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', case V0 of {'Idris.Idris.Syntax.MkSyntax', E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V48, V49, V50, V51, V52, V53, V54, V55, V56) -> V54 end(E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V9)), V10, V11} end(E0, E1, E2, E3, E4, E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14395-5423--in--un--toPure'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> {'Idris.Idris.Syntax.DoExp', V2, {'Idris.Idris.Syntax.PApp', V2, {'Idris.Idris.Syntax.PRef', V2, {'Idris.Core.Name.UN', <<"pure"/utf8>>}}, V10}}.
'nested--14451-7030--in--un--toIDef'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V8, V9, V10) -> fun (V11) -> begin (V12 = (('nested--14451-7029--in--un--getFn'(V0, V1, V2, V3, V4, V5, V6, V9))(V11))), case V12 of {'Idris.Prelude.Types.Left', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V8, V14, [{'Idris.TTImp.TTImp.PatClause', V8, V9, V10} | []]}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E5, E6, E7, E8, E9} -> (fun (V15, V16, V17, V18, V19) -> fun (V20) -> begin (V21 = (('nested--14451-7029--in--un--getFn'(V0, V1, V2, V3, V4, V5, V6, V16))(V20))), case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V15, V23, [{'Idris.TTImp.TTImp.WithClause', V15, V16, V17, V18, V19} | []]}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6, E7, E8, E9)); {'Idris.TTImp.TTImp.ImpossibleClause', E12, E13} -> (fun (V24, V25) -> fun (V26) -> begin (V27 = (('nested--14451-7029--in--un--getFn'(V0, V1, V2, V3, V4, V5, V6, V25))(V26))), case V27 of {'Idris.Prelude.Types.Left', E14} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V24, V29, [{'Idris.TTImp.TTImp.ImpossibleClause', V24, V25} | []]}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14451-7484--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Idris.Syntax.PPair', E0, E1, E2} -> (fun (V15, V16, V17) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('nested--14451-7484--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V16)), ('nested--14451-7484--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V17)))) end(E0, E1, E2)); _ -> [V14 | []] end.
'nested--14445-6828--in--un--mkRecType'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of [] -> {'Idris.Idris.Syntax.PType', V6}; [E0 | E1] -> (fun (V9, V10) -> case V9 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> {'Idris.Idris.Syntax.PPi', V6, V13, V15, {'Idris.Prelude.Types.Just', V11}, V16, ('nested--14445-6828--in--un--mkRecType'(V0, V1, V2, V3, V4, V5, V6, V7, V10))} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14451-8627--in--un--mkConName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E2} -> (fun (V15) -> {'Idris.Core.Name.NS', V13, {'Idris.Core.Name.DN', V15, {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"__mk"/utf8>>, V15)), 0}}} end(E2)); _ -> {'Idris.Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V12)), {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"__mk"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V12)))), 0}} end end(E0, E1)); _ -> {'Idris.Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V12)), {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"__mk"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V12)))), 0}} end.
'nested--14451-8628--in--un--mapDesugarPiInfo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Implicit'}} end end()); {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Explicit'}} end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.AutoImplicit'}} end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V17) -> fun (V18) -> begin (V19 = ('un--desugar'(V11, V10, V8, V9, {'Idris.Idris.Desugar.AnyExpr'}, V12, V17, V18))), case V19 of {'Idris.Prelude.Types.Left', E1} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.DefImplicit', V21}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14395-5422--in--un--guard'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Idris.Syntax.DoExp', E0, E1} -> (fun (V11, V12) -> {'Idris.Idris.Syntax.DoExp', V11, {'Idris.Idris.Syntax.PApp', V11, {'Idris.Idris.Syntax.PRef', V11, {'Idris.Core.Name.UN', <<"guard"/utf8>>}}, V12}} end(E0, E1)); _ -> V10 end.
'nested--14451-7029--in--un--getFn'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V8, V9) -> fun (V10) -> {'Idris.Prelude.Types.Right', V9} end end(E0, E1)); {'Idris.TTImp.TTImp.IApp', E2, E3, E4} -> (fun (V11, V12, V13) -> ('nested--14451-7029--in--un--getFn'(V0, V1, V2, V3, V4, V5, V6, V12)) end(E2, E3, E4)); {'Idris.TTImp.TTImp.IAutoApp', E5, E6, E7} -> (fun (V14, V15, V16) -> ('nested--14451-7029--in--un--getFn'(V0, V1, V2, V3, V4, V5, V6, V15)) end(E5, E6, E7)); {'Idris.TTImp.TTImp.INamedApp', E8, E9, E10, E11} -> (fun (V17, V18, V19, V20) -> ('nested--14451-7029--in--un--getFn'(V0, V1, V2, V3, V4, V5, V6, V18)) end(E8, E9, E10, E11)); _ -> fun (V21) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V7)), <<" is not a function application"/utf8>>))}, V21)) end end.
'nested--14451-8626--in--un--fname'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Idris.Syntax.MkField', E0, E1, E2, E3, E4, E5} -> (fun (V13, V14, V15, V16, V17, V18) -> V17 end(E0, E1, E2, E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14451-7485--in--un--expandConstraint'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> case V15 of {'Idris.Prelude.Types.Just', E2} -> (fun (V17) -> [{'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', V17}, V16} | []] end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V18) -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Nothing'}, V18} end, ('nested--14451-7484--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V16)))) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14030-3594--in--un--backtickPrec'(V0, V1, V2, V3, V4) -> {'Idris.Utils.Shunting.NonAssoc', (1 + 0)}.
'un--toTokList'(V0, V1) -> case V1 of {'Idris.Idris.Syntax.POp', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> fun (V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V3))), (('case--toTokList-3611'(V5, V4, V3, V2, V0, V10, V11, ('Idris.Idris2.Data.StringMap':'un--lookup'('erased', V11, case V10 of {'Idris.Idris.Syntax.MkSyntax', E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20) -> V12 end(E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V6)) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); {'Idris.Idris.Syntax.PPrefixOp', E15, E16, E17} -> (fun (V21, V22, V23) -> fun (V24) -> begin (V26 = begin (V25 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V25} end), case V26 of {'Idris.Prelude.Types.Left', E18} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V28) -> begin (V29 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V22))), (('case--toTokList-3784'(V23, V22, V21, V0, V28, V29, ('Idris.Idris2.Data.StringMap':'un--lookup'('erased', V29, case V28 of {'Idris.Idris.Syntax.MkSyntax', E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38) -> V31 end(E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V24)) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17)); _ -> fun (V39) -> {'Idris.Prelude.Types.Right', [{'Idris.Utils.Shunting.Expr', V1} | []]} end end.
'un--pairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--builtinNS'()), {'Idris.Core.Name.UN', <<"Pair"/utf8>>}}.
'un--mkpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--builtinNS'()), {'Idris.Core.Name.UN', <<"MkPair"/utf8>>}}.
'un--mkdpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--dpairNS'()), {'Idris.Core.Name.UN', <<"MkDPair"/utf8>>}}.
'un--mkPrec'(V0, V1) -> case V0 of {'Idris.Idris.Syntax.InfixL'} -> (fun () -> {'Idris.Utils.Shunting.AssocL', V1} end()); {'Idris.Idris.Syntax.InfixR'} -> (fun () -> {'Idris.Utils.Shunting.AssocR', V1} end()); {'Idris.Idris.Syntax.Infix'} -> (fun () -> {'Idris.Utils.Shunting.NonAssoc', V1} end()); {'Idris.Idris.Syntax.Prefix'} -> (fun () -> {'Idris.Utils.Shunting.Prefix', V1} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--initBangs'() -> {'Idris.Idris.Desugar.MkBangData', 0, []}.
'un--idiomise'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.TTImp.TTImp.IAlternative', V2, ('Idris.Idris2.TTImp.TTImp':'un--mapAltType'(fun (V5) -> ('un--idiomise'(V2, V5)) end, V3)), ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V8, V9)) end end end end, fun (V10) -> ('un--idiomise'(V2, V10)) end, V4))} end(E0, E1, E2)); {'Idris.TTImp.TTImp.IApp', E3, E4, E5} -> (fun (V11, V12, V13) -> {'Idris.TTImp.TTImp.IApp', V0, {'Idris.TTImp.TTImp.IApp', V0, {'Idris.TTImp.TTImp.IVar', V0, {'Idris.Core.Name.UN', <<"<*>"/utf8>>}}, ('un--idiomise'(V11, V12))}, V13} end(E3, E4, E5)); _ -> {'Idris.TTImp.TTImp.IApp', V0, {'Idris.TTImp.TTImp.IVar', V0, {'Idris.Core.Name.UN', <<"pure"/utf8>>}}, V1} end.
'un--getDecl'(V0, V1) -> case V1 of {'Idris.Idris.Syntax.PImplementation', E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86} -> (fun (V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> {'Idris.Prelude.Types.Just', {'Idris.Idris.Syntax.PImplementation', V2, V3, V4, V0, V6, V7, V8, V9, V10, V11, V12}} end(E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86)); {'Idris.Idris.Syntax.PNamespace', E87, E88, E89} -> (fun (V13, V14, V15) -> {'Idris.Prelude.Types.Just', {'Idris.Idris.Syntax.PNamespace', V13, V14, ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V16) -> ('un--getDecl'(V0, V16)) end, V15))}} end(E87, E88, E89)); _ -> case V0 of {'Idris.Idris.Syntax.AsType'} -> (fun () -> case V1 of {'Idris.Idris.Syntax.PClaim', E6, E7, E8, E9, E10} -> (fun (V17, V18, V19, V20, V21) -> {'Idris.Prelude.Types.Just', V1} end(E6, E7, E8, E9, E10)); {'Idris.Idris.Syntax.PData', E11, E12, E13, E14} -> (fun (V22, V23, V24, V25) -> case V25 of {'Idris.Idris.Syntax.MkPData', E15, E16, E17, E18, E19} -> (fun (V26, V27, V28, V29, V30) -> {'Idris.Prelude.Types.Just', {'Idris.Idris.Syntax.PData', V22, V23, V24, {'Idris.Idris.Syntax.MkPLater', V26, V27, V28}}} end(E15, E16, E17, E18, E19)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E11, E12, E13, E14)); {'Idris.Idris.Syntax.PInterface', E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V31, V32, V33, V34, V35, V36, V37, V38, V39) -> {'Idris.Prelude.Types.Just', V1} end(E20, E21, E22, E23, E24, E25, E26, E27, E28)); {'Idris.Idris.Syntax.PRecord', E29, E30, E31, E32, E33, E34, E35} -> (fun (V40, V41, V42, V43, V44, V45, V46) -> {'Idris.Prelude.Types.Just', {'Idris.Idris.Syntax.PData', V40, V41, V42, {'Idris.Idris.Syntax.MkPLater', V40, V43, ('nested--14445-6828--in--un--mkRecType'(V45, V46, V44, V43, V42, V41, V40, V1, V44))}}} end(E29, E30, E31, E32, E33, E34, E35)); {'Idris.Idris.Syntax.PFixity', E36, E37, E38, E39} -> (fun (V47, V48, V49, V50) -> {'Idris.Prelude.Types.Just', V1} end(E36, E37, E38, E39)); {'Idris.Idris.Syntax.PDirective', E40, E41} -> (fun (V51, V52) -> {'Idris.Prelude.Types.Just', V1} end(E40, E41)); _ -> {'Idris.Prelude.Types.Nothing'} end end()); {'Idris.Idris.Syntax.AsDef'} -> (fun () -> case V1 of {'Idris.Idris.Syntax.PClaim', E42, E43, E44, E45, E46} -> (fun (V53, V54, V55, V56, V57) -> {'Idris.Prelude.Types.Nothing'} end(E42, E43, E44, E45, E46)); {'Idris.Idris.Syntax.PData', E47, E48, E49, E50} -> (fun (V58, V59, V60, V61) -> case V61 of {'Idris.Idris.Syntax.MkPLater', E51, E52, E53} -> (fun (V62, V63, V64) -> {'Idris.Prelude.Types.Just', V1} end(E51, E52, E53)); _ -> {'Idris.Prelude.Types.Just', V1} end end(E47, E48, E49, E50)); {'Idris.Idris.Syntax.PInterface', E54, E55, E56, E57, E58, E59, E60, E61, E62} -> (fun (V65, V66, V67, V68, V69, V70, V71, V72, V73) -> {'Idris.Prelude.Types.Nothing'} end(E54, E55, E56, E57, E58, E59, E60, E61, E62)); {'Idris.Idris.Syntax.PRecord', E63, E64, E65, E66, E67, E68, E69} -> (fun (V74, V75, V76, V77, V78, V79, V80) -> {'Idris.Prelude.Types.Just', V1} end(E63, E64, E65, E66, E67, E68, E69)); {'Idris.Idris.Syntax.PFixity', E70, E71, E72, E73} -> (fun (V81, V82, V83, V84) -> {'Idris.Prelude.Types.Nothing'} end(E70, E71, E72, E73)); {'Idris.Idris.Syntax.PDirective', E74, E75} -> (fun (V85, V86) -> {'Idris.Prelude.Types.Nothing'} end(E74, E75)); _ -> {'Idris.Prelude.Types.Just', V1} end end()); _ -> case V1 of {'Idris.Idris.Syntax.PParameters', E0, E1, E2} -> (fun (V87, V88, V89) -> {'Idris.Prelude.Types.Just', {'Idris.Idris.Syntax.PParameters', V87, V88, ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V90) -> ('un--getDecl'(V0, V90)) end, V89))}} end(E0, E1, E2)); {'Idris.Idris.Syntax.PUsing', E3, E4, E5} -> (fun (V91, V92, V93) -> {'Idris.Prelude.Types.Just', {'Idris.Idris.Syntax.PUsing', V91, V92, ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V94) -> ('un--getDecl'(V0, V94)) end, V93))}} end(E3, E4, E5)); _ -> case V0 of {'Idris.Idris.Syntax.Single'} -> (fun () -> {'Idris.Prelude.Types.Just', V1} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--extendSyn'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V61 = ('erlang':'put'(V0, case V6 of {'Idris.Idris.Syntax.MkSyntax', E2, E3, E4, E5, E6, E7, E8, E9, E10} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Data.StringMap':'un--mergeLeft'('erased', case V1 of {'Idris.Idris.Syntax.MkSyntax', E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V16 end(E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V7)), ('Idris.Idris2.Data.StringMap':'un--mergeLeft'('erased', case V1 of {'Idris.Idris.Syntax.MkSyntax', E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V26 end(E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V8)), ('Idris.Idris2.Data.ANameMap':'un--merge'('erased', case V1 of {'Idris.Idris.Syntax.MkSyntax', E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V34, V35, V36, V37, V38, V39, V40, V41, V42) -> V36 end(E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V9)), V10, ('Idris.Idris2.Data.ANameMap':'un--merge'('erased', case V1 of {'Idris.Idris.Syntax.MkSyntax', E38, E39, E40, E41, E42, E43, E44, E45, E46} -> (fun (V43, V44, V45, V46, V47, V48, V49, V50, V51) -> V47 end(E38, E39, E40, E41, E42, E43, E44, E45, E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V11)), V12, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', case V1 of {'Idris.Idris.Syntax.MkSyntax', E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V52, V53, V54, V55, V56, V57, V58, V59, V60) -> V58 end(E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V13)), V14, V15} end(E2, E3, E4, E5, E6, E7, E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V61} end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--expandList'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of [] -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V7, {'Idris.Core.Name.UN', <<"Nil"/utf8>>}}} end; [E0 | E1] -> (fun (V10, V11) -> fun (V12) -> begin (V13 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V10))(V12))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V16 = (('un--expandList'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V12))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V7, {'Idris.Core.Name.UN', <<"::"/utf8>>}}, [V15 | [V18 | []]]))} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of [] -> fun (V9) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V6, <<"Do block cannot be empty"/utf8>>}, V9)) end; [E0 | E1] -> (fun (V10, V11) -> case V10 of {'Idris.Idris.Syntax.DoExp', E91, E92} -> (fun (V12, V13) -> case V11 of [] -> fun (V14) -> ('un--desugar'(V0, V1, V3, V2, V4, V5, V13, V14)) end; _ -> case V11 of [] -> fun (V15) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Idris.Syntax':'un--getLoc'(V10)), <<"Last statement in do block must be an expression"/utf8>>}, V15)) end; _ -> case V10 of {'Idris.Idris.Syntax.DoExp', E93, E94} -> (fun (V16, V17) -> fun (V18) -> begin (V19 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V17, V18))), case V19 of {'Idris.Prelude.Types.Left', E95} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V21) -> begin (V22 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V18))), case V22 of {'Idris.Prelude.Types.Left', E97} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V24) -> begin (V29 = case V21 of {'Idris.TTImp.TTImp.ICase', E99, E100, E101, E102} -> (fun (V25, V26, V27, V28) -> {'Idris.TTImp.TTImp.IVar', V16, {'Idris.Core.Name.UN', <<"Unit"/utf8>>}} end(E99, E100, E101, E102)); _ -> {'Idris.TTImp.TTImp.Implicit', V16, 1} end), begin (V31 = begin (V30 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V30} end), case V31 of {'Idris.Prelude.Types.Left', E103} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V16, {'Idris.TTImp.TTImp.IApp', V16, {'Idris.TTImp.TTImp.IVar', V16, ('un--addNS'(V7, {'Idris.Core.Name.UN', <<">>="/utf8>>}))}, V21}, {'Idris.TTImp.TTImp.ILam', V16, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Nothing'}, V29, V24}}} end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E93, E94)); {'Idris.Idris.Syntax.DoBind', E105, E106, E107} -> (fun (V34, V35, V36) -> fun (V37) -> begin (V38 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V36, V37))), case V38 of {'Idris.Prelude.Types.Left', E108} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V40) -> begin (V41 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V37))), case V41 of {'Idris.Prelude.Types.Left', E110} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V43) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V34, {'Idris.TTImp.TTImp.IApp', V34, {'Idris.TTImp.TTImp.IVar', V34, ('un--addNS'(V7, {'Idris.Core.Name.UN', <<">>="/utf8>>}))}, V40}, {'Idris.TTImp.TTImp.ILam', V34, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V35}, {'Idris.TTImp.TTImp.Implicit', V34, 1}, V43}}} end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E105, E106, E107)); {'Idris.Idris.Syntax.DoBindPat', E112, E113, E114, E115} -> (fun (V44, V45, V46, V47) -> fun (V48) -> begin (V49 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.LHS'}, V5, V45, V48))), case V49 of {'Idris.Prelude.Types.Left', E116} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V51) -> begin (V52 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V51, V48))), case V52 of {'Idris.Prelude.Types.Left', E118} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V54) -> case V54 of {'Idris.Builtin.MkPair', E120, E121} -> (fun (V55, V56) -> begin (V57 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V46, V48))), case V57 of {'Idris.Prelude.Types.Left', E122} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V59) -> begin (V61 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V60) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 0, V60)) end, V47, []))(V48))), case V61 of {'Idris.Prelude.Types.Left', E124} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V63) -> begin (V64 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V55, V5))), begin (V65 = (('un--expandDo'(V0, V1, V2, V3, V4, V64, V6, V7, V11))(V48))), case V65 of {'Idris.Prelude.Types.Left', E126} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V67) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V44, {'Idris.TTImp.TTImp.IApp', V44, {'Idris.TTImp.TTImp.IVar', V44, ('un--addNS'(V7, {'Idris.Core.Name.UN', <<">>="/utf8>>}))}, V59}, {'Idris.TTImp.TTImp.ILam', V44, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V44, 1}, {'Idris.TTImp.TTImp.ICase', V44, {'Idris.TTImp.TTImp.IVar', V44, {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V44, 1}, [{'Idris.TTImp.TTImp.PatClause', V44, V56, V67} | V63]}}}} end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E120, E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E112, E113, E114, E115)); {'Idris.Idris.Syntax.DoLet', E128, E129, E130, E131, E132} -> (fun (V68, V69, V70, V71, V72) -> fun (V73) -> begin (V74 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V73))), case V74 of {'Idris.Prelude.Types.Left', E133} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V76) -> begin (V77 = (('un--desugarB'(V0, V76, V1, V3, V2, V4, V5, V72))(V73))), case V77 of {'Idris.Prelude.Types.Left', E135} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V79) -> begin (V80 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V71, V73))), case V80 of {'Idris.Prelude.Types.Left', E137} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V82) -> begin (V83 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V73))), case V83 of {'Idris.Prelude.Types.Left', E139} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V85) -> begin (V86 = {'Idris.TTImp.TTImp.ILet', V68, V70, V69, V82, V79, V85}), begin (V88 = begin (V87 = ('erlang':'get'(V76))), {'Idris.Prelude.Types.Right', V87} end), case V88 of {'Idris.Prelude.Types.Left', E141} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V90) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V90 of {'Idris.Idris.Desugar.MkBangData', E143, E144} -> (fun (V91, V92) -> V92 end(E143, E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V86))} end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E128, E129, E130, E131, E132)); {'Idris.Idris.Syntax.DoLetPat', E145, E146, E147, E148, E149} -> (fun (V93, V94, V95, V96, V97) -> fun (V98) -> begin (V99 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V98))), case V99 of {'Idris.Prelude.Types.Left', E150} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V101) -> begin (V102 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.LHS'}, V5, V94, V98))), case V102 of {'Idris.Prelude.Types.Left', E152} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V104) -> begin (V105 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V95, V98))), case V105 of {'Idris.Prelude.Types.Left', E154} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V107) -> begin (V108 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V104, V98))), case V108 of {'Idris.Prelude.Types.Left', E156} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V110) -> case V110 of {'Idris.Builtin.MkPair', E158, E159} -> (fun (V111, V112) -> begin (V113 = (('un--desugarB'(V0, V101, V1, V3, V2, V4, V5, V96))(V98))), case V113 of {'Idris.Prelude.Types.Left', E160} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V115) -> begin (V117 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V116) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 0, V116)) end, V97, []))(V98))), case V117 of {'Idris.Prelude.Types.Left', E162} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V119) -> begin (V120 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V111, V5))), begin (V121 = (('un--expandDo'(V0, V1, V2, V3, V4, V120, V6, V7, V11))(V98))), case V121 of {'Idris.Prelude.Types.Left', E164} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V123) -> begin (V125 = begin (V124 = ('erlang':'get'(V101))), {'Idris.Prelude.Types.Right', V124} end), case V125 of {'Idris.Prelude.Types.Left', E166} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V127) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V127 of {'Idris.Idris.Desugar.MkBangData', E168, E169} -> (fun (V128, V129) -> V129 end(E168, E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.TTImp.TTImp.ICase', V93, V115, V107, [{'Idris.TTImp.TTImp.PatClause', V93, V112, V123} | V119]}))} end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E158, E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E145, E146, E147, E148, E149)); {'Idris.Idris.Syntax.DoLetLocal', E170, E171} -> (fun (V130, V131) -> fun (V132) -> begin (V133 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V132))), case V133 of {'Idris.Prelude.Types.Left', E172} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V135) -> begin (V137 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V136) -> ('un--desugarDecl'(V0, V1, V2, V3, V5, V136)) end, V131, []))(V132))), case V137 of {'Idris.Prelude.Types.Left', E174} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V139) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V130, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V142, V143, V144)) end end end end end, fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V147, V148, V149)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V150) -> fun (V151) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V150, V151)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V139)), V135}} end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E170, E171)); {'Idris.Idris.Syntax.DoRewrite', E176, E177} -> (fun (V152, V153) -> fun (V154) -> begin (V155 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V154))), case V155 of {'Idris.Prelude.Types.Left', E178} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V157) -> begin (V158 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V153, V154))), case V158 of {'Idris.Prelude.Types.Left', E180} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V160) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V152, V160, V157}} end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E176, E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E91, E92)); _ -> case V11 of [] -> fun (V161) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Idris.Syntax':'un--getLoc'(V10)), <<"Last statement in do block must be an expression"/utf8>>}, V161)) end; _ -> case V10 of {'Idris.Idris.Syntax.DoExp', E2, E3} -> (fun (V162, V163) -> fun (V164) -> begin (V165 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V163, V164))), case V165 of {'Idris.Prelude.Types.Left', E4} -> (fun (V166) -> {'Idris.Prelude.Types.Left', V166} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V167) -> begin (V168 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V164))), case V168 of {'Idris.Prelude.Types.Left', E6} -> (fun (V169) -> {'Idris.Prelude.Types.Left', V169} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V170) -> begin (V175 = case V167 of {'Idris.TTImp.TTImp.ICase', E8, E9, E10, E11} -> (fun (V171, V172, V173, V174) -> {'Idris.TTImp.TTImp.IVar', V162, {'Idris.Core.Name.UN', <<"Unit"/utf8>>}} end(E8, E9, E10, E11)); _ -> {'Idris.TTImp.TTImp.Implicit', V162, 1} end), begin (V177 = begin (V176 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V176} end), case V177 of {'Idris.Prelude.Types.Left', E12} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V179) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V162, {'Idris.TTImp.TTImp.IApp', V162, {'Idris.TTImp.TTImp.IVar', V162, ('un--addNS'(V7, {'Idris.Core.Name.UN', <<">>="/utf8>>}))}, V167}, {'Idris.TTImp.TTImp.ILam', V162, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Nothing'}, V175, V170}}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); {'Idris.Idris.Syntax.DoBind', E14, E15, E16} -> (fun (V180, V181, V182) -> fun (V183) -> begin (V184 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V182, V183))), case V184 of {'Idris.Prelude.Types.Left', E17} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V186) -> begin (V187 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V183))), case V187 of {'Idris.Prelude.Types.Left', E19} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V189) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V180, {'Idris.TTImp.TTImp.IApp', V180, {'Idris.TTImp.TTImp.IVar', V180, ('un--addNS'(V7, {'Idris.Core.Name.UN', <<">>="/utf8>>}))}, V186}, {'Idris.TTImp.TTImp.ILam', V180, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V181}, {'Idris.TTImp.TTImp.Implicit', V180, 1}, V189}}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14, E15, E16)); {'Idris.Idris.Syntax.DoBindPat', E21, E22, E23, E24} -> (fun (V190, V191, V192, V193) -> fun (V194) -> begin (V195 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.LHS'}, V5, V191, V194))), case V195 of {'Idris.Prelude.Types.Left', E25} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V197) -> begin (V198 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V197, V194))), case V198 of {'Idris.Prelude.Types.Left', E27} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V200) -> case V200 of {'Idris.Builtin.MkPair', E29, E30} -> (fun (V201, V202) -> begin (V203 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V192, V194))), case V203 of {'Idris.Prelude.Types.Left', E31} -> (fun (V204) -> {'Idris.Prelude.Types.Left', V204} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V205) -> begin (V207 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V206) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 0, V206)) end, V193, []))(V194))), case V207 of {'Idris.Prelude.Types.Left', E33} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V209) -> begin (V210 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V201, V5))), begin (V211 = (('un--expandDo'(V0, V1, V2, V3, V4, V210, V6, V7, V11))(V194))), case V211 of {'Idris.Prelude.Types.Left', E35} -> (fun (V212) -> {'Idris.Prelude.Types.Left', V212} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V213) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V190, {'Idris.TTImp.TTImp.IApp', V190, {'Idris.TTImp.TTImp.IVar', V190, ('un--addNS'(V7, {'Idris.Core.Name.UN', <<">>="/utf8>>}))}, V205}, {'Idris.TTImp.TTImp.ILam', V190, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V190, 1}, {'Idris.TTImp.TTImp.ICase', V190, {'Idris.TTImp.TTImp.IVar', V190, {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V190, 1}, [{'Idris.TTImp.TTImp.PatClause', V190, V202, V213} | V209]}}}} end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21, E22, E23, E24)); {'Idris.Idris.Syntax.DoLet', E37, E38, E39, E40, E41} -> (fun (V214, V215, V216, V217, V218) -> fun (V219) -> begin (V220 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V219))), case V220 of {'Idris.Prelude.Types.Left', E42} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V222) -> begin (V223 = (('un--desugarB'(V0, V222, V1, V3, V2, V4, V5, V218))(V219))), case V223 of {'Idris.Prelude.Types.Left', E44} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V225) -> begin (V226 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V217, V219))), case V226 of {'Idris.Prelude.Types.Left', E46} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V228) -> begin (V229 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V219))), case V229 of {'Idris.Prelude.Types.Left', E48} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V231) -> begin (V232 = {'Idris.TTImp.TTImp.ILet', V214, V216, V215, V228, V225, V231}), begin (V234 = begin (V233 = ('erlang':'get'(V222))), {'Idris.Prelude.Types.Right', V233} end), case V234 of {'Idris.Prelude.Types.Left', E50} -> (fun (V235) -> {'Idris.Prelude.Types.Left', V235} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V236) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V236 of {'Idris.Idris.Desugar.MkBangData', E52, E53} -> (fun (V237, V238) -> V238 end(E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V232))} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E37, E38, E39, E40, E41)); {'Idris.Idris.Syntax.DoLetPat', E54, E55, E56, E57, E58} -> (fun (V239, V240, V241, V242, V243) -> fun (V244) -> begin (V245 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V244))), case V245 of {'Idris.Prelude.Types.Left', E59} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V247) -> begin (V248 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.LHS'}, V5, V240, V244))), case V248 of {'Idris.Prelude.Types.Left', E61} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V250) -> begin (V251 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V241, V244))), case V251 of {'Idris.Prelude.Types.Left', E63} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V253) -> begin (V254 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V250, V244))), case V254 of {'Idris.Prelude.Types.Left', E65} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V256) -> case V256 of {'Idris.Builtin.MkPair', E67, E68} -> (fun (V257, V258) -> begin (V259 = (('un--desugarB'(V0, V247, V1, V3, V2, V4, V5, V242))(V244))), case V259 of {'Idris.Prelude.Types.Left', E69} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V261) -> begin (V263 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V262) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 0, V262)) end, V243, []))(V244))), case V263 of {'Idris.Prelude.Types.Left', E71} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V265) -> begin (V266 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V257, V5))), begin (V267 = (('un--expandDo'(V0, V1, V2, V3, V4, V266, V6, V7, V11))(V244))), case V267 of {'Idris.Prelude.Types.Left', E73} -> (fun (V268) -> {'Idris.Prelude.Types.Left', V268} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V269) -> begin (V271 = begin (V270 = ('erlang':'get'(V247))), {'Idris.Prelude.Types.Right', V270} end), case V271 of {'Idris.Prelude.Types.Left', E75} -> (fun (V272) -> {'Idris.Prelude.Types.Left', V272} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V273) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V273 of {'Idris.Idris.Desugar.MkBangData', E77, E78} -> (fun (V274, V275) -> V275 end(E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.TTImp.TTImp.ICase', V239, V261, V253, [{'Idris.TTImp.TTImp.PatClause', V239, V258, V269} | V265]}))} end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67, E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E54, E55, E56, E57, E58)); {'Idris.Idris.Syntax.DoLetLocal', E79, E80} -> (fun (V276, V277) -> fun (V278) -> begin (V279 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V278))), case V279 of {'Idris.Prelude.Types.Left', E81} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V281) -> begin (V283 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V282) -> ('un--desugarDecl'(V0, V1, V2, V3, V5, V282)) end, V277, []))(V278))), case V283 of {'Idris.Prelude.Types.Left', E83} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V285) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V276, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V286) -> fun (V287) -> fun (V288) -> fun (V289) -> fun (V290) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V288, V289, V290)) end end end end end, fun (V291) -> fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V293, V294, V295)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V296) -> fun (V297) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V296, V297)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V285)), V281}} end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E79, E80)); {'Idris.Idris.Syntax.DoRewrite', E85, E86} -> (fun (V298, V299) -> fun (V300) -> begin (V301 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V300))), case V301 of {'Idris.Prelude.Types.Left', E87} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V303) -> begin (V304 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V299, V300))), case V304 of {'Idris.Prelude.Types.Left', E89} -> (fun (V305) -> {'Idris.Prelude.Types.Left', V305} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V306) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V298, V306, V303}} end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85, E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--dpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--dpairNS'()), {'Idris.Core.Name.UN', <<"DPair"/utf8>>}}.
'un--desugarUpdate'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Idris.Syntax.PSetField', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V11 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V9))(V10))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V8, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.Idris.Syntax.PSetFieldApp', E4, E5} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V15))(V16))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V14, V19}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarType'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.MkPTy', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> fun (V10) -> begin (V11 = ('Idris.Idris2.Idris.DocString':'un--addDocString'(V1, V0, V7, V8, V10))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V9, V10))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V30 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, case V17 of {'Idris.Idris.Syntax.MkSyntax', E10, E11, E12, E13, E14, E15, E16, E17, E18} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V28 end(E10, E11, E12, E13, E14, E15, E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V20, V10))), case V30 of {'Idris.Prelude.Types.Left', E19} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V6, V7, V32}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Utils.Shunting.Infix', E0, E1, E2, E3} -> (fun (V8, V9, V10, V11) -> case V9 of {'Idris.Core.Name.UN', E8} -> (fun (V12) -> case V12 of <<"="/utf8>> -> fun (V13) -> begin (V14 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V10))(V13))), case V14 of {'Idris.Prelude.Types.Left', E13} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V16) -> begin (V17 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V13))), case V17 of {'Idris.Prelude.Types.Left', E15} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V8, {'Idris.TTImp.TTImp.FirstSuccess'}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V8, {'Idris.Core.Name.UN', <<"==="/utf8>>}}, [V16 | [V19 | []]])) | [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V8, {'Idris.Core.Name.UN', <<"~=~"/utf8>>}}, [V16 | [V19 | []]])) | []]]}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; <<"$"/utf8>> -> fun (V20) -> begin (V21 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V10))(V20))), case V21 of {'Idris.Prelude.Types.Left', E17} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V23) -> begin (V24 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V20))), case V24 of {'Idris.Prelude.Types.Left', E19} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, V23, V26}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V27) -> begin (V28 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V10))(V27))), case V28 of {'Idris.Prelude.Types.Left', E9} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V30) -> begin (V31 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V27))), case V31 of {'Idris.Prelude.Types.Left', E11} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V8, V9}, V30}, V33}} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E8)); _ -> fun (V34) -> begin (V35 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V10))(V34))), case V35 of {'Idris.Prelude.Types.Left', E4} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V37) -> begin (V38 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V34))), case V38 of {'Idris.Prelude.Types.Left', E6} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V8, V9}, V37}, V40}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1, E2, E3)); {'Idris.Utils.Shunting.Pre', E21, E22, E23} -> (fun (V41, V42, V43) -> case V42 of {'Idris.Core.Name.UN', E26} -> (fun (V44) -> case V44 of <<"-"/utf8>> -> fun (V45) -> begin (V46 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V43))(V45))), case V46 of {'Idris.Prelude.Types.Left', E29} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V48) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V41, {'Idris.TTImp.TTImp.IVar', V41, {'Idris.Core.Name.UN', <<"negate"/utf8>>}}, V48}} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V49) -> begin (V50 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V43))(V49))), case V50 of {'Idris.Prelude.Types.Left', E27} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V52) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V41, {'Idris.TTImp.TTImp.IVar', V41, V42}, V52}} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E26)); _ -> fun (V53) -> begin (V54 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V43))(V53))), case V54 of {'Idris.Prelude.Types.Left', E24} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V56) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V41, {'Idris.TTImp.TTImp.IVar', V41, V42}, V56}} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E21, E22, E23)); {'Idris.Utils.Shunting.Leaf', E31} -> (fun (V57) -> ('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V57)) end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarFnOpt'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.IFnOpt', E0} -> (fun (V6) -> fun (V7) -> {'Idris.Prelude.Types.Right', V6} end end(E0)); {'Idris.Idris.Syntax.PForeign', E1} -> (fun (V8) -> fun (V9) -> begin (V12 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V10) -> fun (V11) -> ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V10, V11)) end end, V8, []))(V9))), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V14}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarField'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Idris.Syntax.MkField', E0, E1, E2, E3, E4, E5} -> (fun (V7, V8, V9, V10, V11, V12) -> fun (V13) -> begin (V14 = ('Idris.Idris2.Idris.DocString':'un--addDocStringNS'(V1, V0, V5, V11, V8, V13))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V23 = (('Idris.Idris2.Core.Core.PiInfo':'un--traverse'('erased', 'erased', fun (V21) -> fun (V22) -> ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V21, V22)) end end, V10))(V13))), case V23 of {'Idris.Prelude.Types.Left', E10} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V25) -> begin (V26 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V12, V13))), case V26 of {'Idris.Prelude.Types.Left', E12} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V28) -> begin (V38 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, case V20 of {'Idris.Idris.Syntax.MkSyntax', E14, E15, E16, E17, E18, E19, E20, E21, E22} -> (fun (V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V36 end(E14, E15, E16, E17, E18, E19, E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V28, V13))), case V38 of {'Idris.Prelude.Types.Left', E23} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V7, V9, V25, V11, V40}} end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarDecl'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.PClaim', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V13 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V12) -> ('un--desugarFnOpt'(V0, V1, V2, V3, V4, V12)) end, V9, []))(V11))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V16 = (('un--desugarType'(V0, V1, V2, V3, V4, V10))(V11))), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IClaim', V6, V7, V8, V15, V18} | []]} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.Idris.Syntax.PDef', E9, E10} -> (fun (V19, V20) -> fun (V21) -> begin (V23 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V22) -> ('un--desugarClause'(V0, V1, V2, V3, V4, 1, V22)) end, V20, []))(V21))), case V23 of {'Idris.Prelude.Types.Left', E11} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V25) -> begin (V27 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V26) -> ('nested--14451-7030--in--un--toIDef'(V20, V19, V4, V3, V2, V1, V0, V26)) end, V25, []))(V21))), case V27 of {'Idris.Prelude.Types.Left', E13} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V29) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.Parser':'un--collectDefs'(V29))} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10)); {'Idris.Idris.Syntax.PData', E15, E16, E17, E18} -> (fun (V30, V31, V32, V33) -> fun (V34) -> begin (V35 = (('un--desugarData'(V0, V1, V2, V3, V4, V31, V33))(V34))), case V35 of {'Idris.Prelude.Types.Left', E19} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V37) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IData', V30, V32, V37} | []]} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17, E18)); {'Idris.Idris.Syntax.PParameters', E21, E22, E23} -> (fun (V38, V39, V40) -> fun (V41) -> begin (V44 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V42) -> ('un--desugarDecl'(V0, V1, V2, V3, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V4, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V43) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V43)) end, V39)))), V42)) end, V40, []))(V41))), case V44 of {'Idris.Prelude.Types.Left', E24} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V46) -> begin (V52 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V47) -> fun (V48) -> begin (V49 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V47)), V48))), case V49 of {'Idris.Prelude.Types.Left', E26} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V51) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V47)), V51}} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V39, []))(V41))), case V52 of {'Idris.Prelude.Types.Left', E28} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V54) -> begin (V55 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V41))), case V55 of {'Idris.Prelude.Types.Left', E30} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V57) -> begin (V73 = ('Idris.Idris2.Prelude.Basics':'un--ifThenElse'('erased', V57, fun () -> (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V61, V62, V63)) end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V66, V67, V68)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V69, V70)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V71) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V4, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V72) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V72)) end, V39)))), [], V71)) end))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V58) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V58)) end, V54)))) end, fun () -> [] end))), begin (V75 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V74) -> {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V74)), ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V73, ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V74))))} end, V54))), {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IParameters', V38, V75, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V78, V79, V80)) end end end end end, fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V83, V84, V85)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V86, V87)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V46))} | []]} end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21, E22, E23)); {'Idris.Idris.Syntax.PUsing', E32, E33, E34} -> (fun (V88, V89, V90) -> fun (V91) -> begin (V93 = begin (V92 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V92} end), case V93 of {'Idris.Prelude.Types.Left', E35} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V95) -> begin (V105 = case V95 of {'Idris.Idris.Syntax.MkSyntax', E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V96, V97, V98, V99, V100, V101, V102, V103, V104) -> V103 end(E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V114 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V106) -> fun (V107) -> begin (V108 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V106)), V107))), case V108 of {'Idris.Prelude.Types.Left', E46} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V110) -> begin (V111 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V105, V4, V110, V107))), case V111 of {'Idris.Prelude.Types.Left', E48} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V113) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V106)), V113}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V89, []))(V91))), case V114 of {'Idris.Prelude.Types.Left', E50} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V116) -> begin (V127 = begin (V126 = ('erlang':'put'(V0, case V95 of {'Idris.Idris.Syntax.MkSyntax', E52, E53, E54, E55, E56, E57, E58, E59, E60} -> (fun (V117, V118, V119, V120, V121, V122, V123, V124, V125) -> {'Idris.Idris.Syntax.MkSyntax', V117, V118, V119, V120, V121, V122, V123, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V116, V105)), V125} end(E52, E53, E54, E55, E56, E57, E58, E59, E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V126} end), case V127 of {'Idris.Prelude.Types.Left', E61} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V129) -> begin (V131 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V130) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V130)) end, V90, []))(V91))), case V131 of {'Idris.Prelude.Types.Left', E63} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V133) -> begin (V135 = begin (V134 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V134} end), case V135 of {'Idris.Prelude.Types.Left', E65} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V137) -> begin (V148 = begin (V147 = ('erlang':'put'(V0, case V137 of {'Idris.Idris.Syntax.MkSyntax', E67, E68, E69, E70, E71, E72, E73, E74, E75} -> (fun (V138, V139, V140, V141, V142, V143, V144, V145, V146) -> {'Idris.Idris.Syntax.MkSyntax', V138, V139, V140, V141, V142, V143, V144, V105, V146} end(E67, E68, E69, E70, E71, E72, E73, E74, E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V147} end), case V148 of {'Idris.Prelude.Types.Left', E76} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V150) -> {'Idris.Prelude.Types.Right', (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V153, V154, V155)) end end end end end, fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V158, V159, V160)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V161) -> fun (V162) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V161, V162)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V133))} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33, E34)); {'Idris.Idris.Syntax.PReflect', E78, E79} -> (fun (V163, V164) -> fun (V165) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V163, <<"Reflection not implemented yet"/utf8>>}, V165)) end end(E78, E79)); {'Idris.Idris.Syntax.PInterface', E80, E81, E82, E83, E84, E85, E86, E87, E88} -> (fun (V166, V167, V168, V169, V170, V171, V172, V173, V174) -> fun (V175) -> begin (V176 = ('Idris.Idris2.Idris.DocString':'un--addDocString'(V1, V0, V169, V170, V175))), case V176 of {'Idris.Prelude.Types.Left', E89} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V178) -> begin (V192 = (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V181, V182, V183)) end end end end end, fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V186, V187, V188)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V189) -> fun (V190) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V189, V190)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V191) -> ('nested--14451-7485--in--un--expandConstraint'(V174, V173, V172, V171, V170, V169, V168, V167, V166, V4, V3, V2, V1, V0, V191)) end))(V168))), begin (V199 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V193) -> fun (V194) -> begin (V196 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V4, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V195) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V195)) end, V171)))), ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V193)), V194))), case V196 of {'Idris.Prelude.Types.Left', E91} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V198) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V193)), V198}} end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V192, []))(V175))), case V199 of {'Idris.Prelude.Types.Left', E93} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V201) -> begin (V207 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V202) -> fun (V203) -> begin (V204 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V202)), V203))), case V204 of {'Idris.Prelude.Types.Left', E95} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V206) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V202)), V206}} end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V171, []))(V175))), case V207 of {'Idris.Prelude.Types.Left', E97} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V209) -> begin (V211 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V210) -> ('Idris.Idris2.Core.Name':'un--dropNS'(V210)) end, ('Idris.Idris2.Idris.Syntax':'un--definedIn'(V174))))), begin (V212 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V175))), case V212 of {'Idris.Prelude.Types.Left', E99} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V214) -> begin (V245 = ('Idris.Idris2.Prelude.Basics':'un--ifThenElse'('erased', V214, fun () -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V218, V219, V220)) end end end end end, fun (V221) -> fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V223, V224, V225)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V226) -> fun (V227) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V226, V227)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V228) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V4, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V211, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V229) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V229)) end, V171)))))), [], V228)) end))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V215) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V215)) end, V201)))), (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V233, V234, V235)) end end end end end, fun (V236) -> fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V238, V239, V240)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V241) -> fun (V242) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V241, V242)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}, fun (V243) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(0, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V4, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V211, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V244) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V244)) end, V171)))))), [], V243)) end))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V230) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V230)) end, V209)))))) end, fun () -> [] end))), begin (V247 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V246) -> {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V246)), ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V245, ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V246))))} end, V209))), begin (V249 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V248) -> {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V248)), ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V245, ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V248))))} end, V201))), begin (V252 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V250) -> ('un--desugarDecl'(V0, V1, V2, V3, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V4, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V211, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V251) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V251)) end, V171)))))), V250)) end, V174, []))(V175))), case V252 of {'Idris.Prelude.Types.Left', E101} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V254) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V255) -> fun (V256) -> fun (V257) -> fun (V258) -> ('Idris.Idris2.Idris.Elab.Interface':'un--elabInterface'(V255, V1, V2, V0, V3, V166, V167, V257, V256, V249, V169, V247, V172, V173, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> fun (V263) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V261, V262, V263)) end end end end end, fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V266, V267, V268)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V269) -> fun (V270) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V269, V270)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V254)), V258)) end end end end} | []]} end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E80, E81, E82, E83, E84, E85, E86, E87, E88)); {'Idris.Idris.Syntax.PImplementation', E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113} -> (fun (V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281) -> fun (V282) -> begin (V284 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V283) -> ('un--desugarFnOpt'(V0, V1, V2, V3, V4, V283)) end, V273, []))(V282))), case V284 of {'Idris.Prelude.Types.Left', E114} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V286) -> begin (V296 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V287) -> case V287 of {'Idris.Builtin.MkPair', E116, E117} -> (fun (V288, V289) -> case V289 of {'Idris.Builtin.MkPair', E118, E119} -> (fun (V290, V291) -> fun (V292) -> begin (V293 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V291, V292))), case V293 of {'Idris.Prelude.Types.Left', E120} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V295) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V288, {'Idris.Builtin.MkPair', V290, V295}}} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E118, E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E116, E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V275, []))(V282))), case V296 of {'Idris.Prelude.Types.Left', E122} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V298) -> ('case--desugarDecl-7919'(V281, V280, V279, V278, V277, V276, V275, V274, V273, V272, V271, V4, V3, V2, V1, V0, V286, V298, V298, V282)) end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113)); {'Idris.Idris.Syntax.PRecord', E124, E125, E126, E127, E128, E129, E130} -> (fun (V299, V300, V301, V302, V303, V304, V305) -> fun (V306) -> begin (V307 = ('Idris.Idris2.Idris.DocString':'un--addDocString'(V1, V0, V302, V300, V306))), case V307 of {'Idris.Prelude.Types.Left', E131} -> (fun (V308) -> {'Idris.Prelude.Types.Left', V308} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V309) -> begin (V324 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V310) -> case V310 of {'Idris.Builtin.MkPair', E133, E134} -> (fun (V311, V312) -> case V312 of {'Idris.Builtin.MkPair', E135, E136} -> (fun (V313, V314) -> case V314 of {'Idris.Builtin.MkPair', E137, E138} -> (fun (V315, V316) -> fun (V317) -> begin (V318 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V316, V317))), case V318 of {'Idris.Prelude.Types.Left', E139} -> (fun (V319) -> {'Idris.Prelude.Types.Left', V319} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V320) -> begin (V321 = (('nested--14451-8628--in--un--mapDesugarPiInfo'(V305, V304, V303, V302, V301, V300, V299, V4, V3, V2, V1, V0, V4, V315))(V317))), case V321 of {'Idris.Prelude.Types.Left', E141} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V323) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V311, {'Idris.Builtin.MkPair', V313, {'Idris.Builtin.MkPair', V323, V320}}}} end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E137, E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E135, E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E133, E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V303, []))(V306))), case V324 of {'Idris.Prelude.Types.Left', E143} -> (fun (V325) -> {'Idris.Prelude.Types.Left', V325} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V326) -> (('case--desugarDecl-8784'(V305, V304, V303, V302, V301, V300, V299, V4, V3, V2, V1, V0, V309, V326, V326))(V306)) end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E124, E125, E126, E127, E128, E129, E130)); {'Idris.Idris.Syntax.PFixity', E145, E146, E147, E148} -> (fun (V327, V328, V329, V330) -> case V328 of {'Idris.Idris.Syntax.Prefix'} -> (fun () -> case V330 of {'Idris.Core.Name.UN', E177} -> (fun (V331) -> fun (V332) -> begin (V334 = begin (V333 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V333} end), case V334 of {'Idris.Prelude.Types.Left', E178} -> (fun (V335) -> {'Idris.Prelude.Types.Left', V335} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V336) -> begin (V347 = begin (V346 = ('erlang':'put'(V0, case V336 of {'Idris.Idris.Syntax.MkSyntax', E180, E181, E182, E183, E184, E185, E186, E187, E188} -> (fun (V337, V338, V339, V340, V341, V342, V343, V344, V345) -> {'Idris.Idris.Syntax.MkSyntax', V337, ('Idris.Idris2.Data.StringMap':'un--insert'('erased', V331, V329, V338)), V339, V340, V341, V342, V343, V344, V345} end(E180, E181, E182, E183, E184, E185, E186, E187, E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V346} end), case V347 of {'Idris.Prelude.Types.Left', E189} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V349) -> {'Idris.Prelude.Types.Right', []} end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E177)); _ -> case V330 of {'Idris.Core.Name.UN', E163} -> (fun (V350) -> fun (V351) -> begin (V353 = begin (V352 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V352} end), case V353 of {'Idris.Prelude.Types.Left', E164} -> (fun (V354) -> {'Idris.Prelude.Types.Left', V354} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V355) -> begin (V366 = begin (V365 = ('erlang':'put'(V0, case V355 of {'Idris.Idris.Syntax.MkSyntax', E166, E167, E168, E169, E170, E171, E172, E173, E174} -> (fun (V356, V357, V358, V359, V360, V361, V362, V363, V364) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Data.StringMap':'un--insert'('erased', V350, {'Idris.Builtin.MkPair', V328, V329}, V356)), V357, V358, V359, V360, V361, V362, V363, V364} end(E166, E167, E168, E169, E170, E171, E172, E173, E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V365} end), case V366 of {'Idris.Prelude.Types.Left', E175} -> (fun (V367) -> {'Idris.Prelude.Types.Left', V367} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V368) -> {'Idris.Prelude.Types.Right', []} end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E163)); _ -> fun (V369) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V327, <<"Fixity declarations must be for unqualified names"/utf8>>}, V369)) end end end end()); _ -> case V330 of {'Idris.Core.Name.UN', E149} -> (fun (V370) -> fun (V371) -> begin (V373 = begin (V372 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V372} end), case V373 of {'Idris.Prelude.Types.Left', E150} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V375) -> begin (V386 = begin (V385 = ('erlang':'put'(V0, case V375 of {'Idris.Idris.Syntax.MkSyntax', E152, E153, E154, E155, E156, E157, E158, E159, E160} -> (fun (V376, V377, V378, V379, V380, V381, V382, V383, V384) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Data.StringMap':'un--insert'('erased', V370, {'Idris.Builtin.MkPair', V328, V329}, V376)), V377, V378, V379, V380, V381, V382, V383, V384} end(E152, E153, E154, E155, E156, E157, E158, E159, E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V385} end), case V386 of {'Idris.Prelude.Types.Left', E161} -> (fun (V387) -> {'Idris.Prelude.Types.Left', V387} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V388) -> {'Idris.Prelude.Types.Right', []} end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E149)); _ -> fun (V389) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V327, <<"Fixity declarations must be for unqualified names"/utf8>>}, V389)) end end end end(E145, E146, E147, E148)); {'Idris.Idris.Syntax.PMutual', E191, E192} -> (fun (V390, V391) -> begin (V394 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V392) -> ('un--getDecl'({'Idris.Idris.Syntax.AsType'}, V392)) end, V391)), ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V393) -> ('un--getDecl'({'Idris.Idris.Syntax.AsDef'}, V393)) end, V391))))), fun (V395) -> begin (V397 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V396) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V396)) end, V394, []))(V395))), case V397 of {'Idris.Prelude.Types.Left', E193} -> (fun (V398) -> {'Idris.Prelude.Types.Left', V398} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V399) -> {'Idris.Prelude.Types.Right', (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V402, V403, V404)) end end end end end, fun (V405) -> fun (V406) -> fun (V407) -> fun (V408) -> fun (V409) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V407, V408, V409)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V410) -> fun (V411) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V410, V411)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V399))} end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E191, E192)); {'Idris.Idris.Syntax.PNamespace', E195, E196, E197} -> (fun (V412, V413, V414) -> fun (V415) -> begin (V417 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V416) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V416)) end, V414, []))(V415))), case V417 of {'Idris.Prelude.Types.Left', E198} -> (fun (V418) -> {'Idris.Prelude.Types.Left', V418} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V419) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.INamespace', V412, V413, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> fun (V424) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V422, V423, V424)) end end end end end, fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> fun (V429) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V427, V428, V429)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V430) -> fun (V431) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V430, V431)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V419))} | []]} end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E195, E196, E197)); {'Idris.Idris.Syntax.PTransform', E200, E201, E202, E203} -> (fun (V432, V433, V434, V435) -> fun (V436) -> begin (V440 = begin (V437 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.LHS'}, V4, V434, V436))), case V437 of {'Idris.Prelude.Types.Left', E204} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V439) -> ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V439, V436)) end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V440 of {'Idris.Prelude.Types.Left', E206} -> (fun (V441) -> {'Idris.Prelude.Types.Left', V441} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V442) -> case V442 of {'Idris.Builtin.MkPair', E208, E209} -> (fun (V443, V444) -> begin (V445 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V443, V4)), V435, V436))), case V445 of {'Idris.Prelude.Types.Left', E210} -> (fun (V446) -> {'Idris.Prelude.Types.Left', V446} end(E210)); {'Idris.Prelude.Types.Right', E211} -> (fun (V447) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.ITransform', V432, {'Idris.Core.Name.UN', V433}, V444, V447} | []]} end(E211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E208, E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E200, E201, E202, E203)); {'Idris.Idris.Syntax.PRunElabDecl', E212, E213} -> (fun (V448, V449) -> fun (V450) -> begin (V451 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V449, V450))), case V451 of {'Idris.Prelude.Types.Left', E214} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E214)); {'Idris.Prelude.Types.Right', E215} -> (fun (V453) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IRunElabDecl', V448, V453} | []]} end(E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E212, E213)); {'Idris.Idris.Syntax.PDirective', E216, E217} -> (fun (V454, V455) -> case V455 of {'Idris.Idris.Syntax.Hide', E218} -> (fun (V456) -> fun (V457) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V458) -> fun (V459) -> fun (V460) -> fun (V461) -> ('Idris.Idris2.Core.Context':'un--hide'(V1, V454, V456, V461)) end end end end} | []]} end end(E218)); {'Idris.Idris.Syntax.Logging', E219} -> (fun (V462) -> fun (V463) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.ILog', {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Options.Log':'un--topics'(V462)), ('Idris.Idris2.Core.Options.Log':'un--verbosity'(V462))}} | []]} end end(E219)); {'Idris.Idris.Syntax.LazyOn', E220} -> (fun (V464) -> fun (V465) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V466) -> fun (V467) -> fun (V468) -> fun (V469) -> ('Idris.Idris2.Core.Context':'un--lazyActive'(V1, V464, V469)) end end end end} | []]} end end(E220)); {'Idris.Idris.Syntax.UnboundImplicits', E221} -> (fun (V470) -> fun (V471) -> begin (V472 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V470, V471))), case V472 of {'Idris.Prelude.Types.Left', E222} -> (fun (V473) -> {'Idris.Prelude.Types.Left', V473} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V474) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V475) -> fun (V476) -> fun (V477) -> fun (V478) -> ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V470, V478)) end end end end} | []]} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E221)); {'Idris.Idris.Syntax.PrefixRecordProjections', E224} -> (fun (V479) -> fun (V480) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V481) -> fun (V482) -> fun (V483) -> fun (V484) -> ('Idris.Idris2.Core.Context':'un--setPrefixRecordProjections'(V1, V479, V484)) end end end end} | []]} end end(E224)); {'Idris.Idris.Syntax.AmbigDepth', E225} -> (fun (V485) -> fun (V486) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> ('Idris.Idris2.Core.Context':'un--setAmbigLimit'(V1, V485, V490)) end end end end} | []]} end end(E225)); {'Idris.Idris.Syntax.AutoImplicitDepth', E226} -> (fun (V491) -> fun (V492) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> ('Idris.Idris2.Core.Context':'un--setAutoImplicitLimit'(V1, V491, V496)) end end end end} | []]} end end(E226)); {'Idris.Idris.Syntax.PairNames', E227, E228, E229} -> (fun (V497, V498, V499) -> fun (V500) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V501) -> fun (V502) -> fun (V503) -> fun (V504) -> ('Idris.Idris2.Core.Context':'un--setPair'(V1, V454, V497, V498, V499, V504)) end end end end} | []]} end end(E227, E228, E229)); {'Idris.Idris.Syntax.RewriteName', E230, E231} -> (fun (V505, V506) -> fun (V507) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V508) -> fun (V509) -> fun (V510) -> fun (V511) -> ('Idris.Idris2.Core.Context':'un--setRewrite'(V1, V454, V505, V506, V511)) end end end end} | []]} end end(E230, E231)); {'Idris.Idris.Syntax.PrimInteger', E232} -> (fun (V512) -> fun (V513) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V514) -> fun (V515) -> fun (V516) -> fun (V517) -> ('Idris.Idris2.Core.Context':'un--setFromInteger'(V1, V512, V517)) end end end end} | []]} end end(E232)); {'Idris.Idris.Syntax.PrimString', E233} -> (fun (V518) -> fun (V519) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V520) -> fun (V521) -> fun (V522) -> fun (V523) -> ('Idris.Idris2.Core.Context':'un--setFromString'(V1, V518, V523)) end end end end} | []]} end end(E233)); {'Idris.Idris.Syntax.PrimChar', E234} -> (fun (V524) -> fun (V525) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V526) -> fun (V527) -> fun (V528) -> fun (V529) -> ('Idris.Idris2.Core.Context':'un--setFromChar'(V1, V524, V529)) end end end end} | []]} end end(E234)); {'Idris.Idris.Syntax.CGAction', E235, E236} -> (fun (V530, V531) -> fun (V532) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V533) -> fun (V534) -> fun (V535) -> fun (V536) -> ('Idris.Idris2.Core.Context':'un--addDirective'(V1, V530, V531, V536)) end end end end} | []]} end end(E235, E236)); {'Idris.Idris.Syntax.Names', E237, E238} -> (fun (V537, V538) -> fun (V539) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V540) -> fun (V541) -> fun (V542) -> fun (V543) -> ('Idris.Idris2.Core.Context':'un--addNameDirective'(V1, V454, V537, V538, V543)) end end end end} | []]} end end(E237, E238)); {'Idris.Idris.Syntax.StartExpr', E239} -> (fun (V544) -> fun (V545) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V546) -> fun (V547) -> fun (V548) -> fun (V549) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"%start not implemented"/utf8>>}, V549)) end end end end} | []]} end end(E239)); {'Idris.Idris.Syntax.Overloadable', E240} -> (fun (V550) -> fun (V551) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V552) -> fun (V553) -> fun (V554) -> fun (V555) -> ('Idris.Idris2.Core.Context':'un--setNameFlag'(V1, V454, V550, {'Idris.Core.Context.Overloadable'}, V555)) end end end end} | []]} end end(E240)); {'Idris.Idris.Syntax.Extension', E241} -> (fun (V556) -> fun (V557) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V558) -> fun (V559) -> fun (V560) -> fun (V561) -> ('Idris.Idris2.Core.Context':'un--setExtension'(V1, V556, V561)) end end end end} | []]} end end(E241)); {'Idris.Idris.Syntax.DefaultTotality', E242} -> (fun (V562) -> fun (V563) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', fun (V564) -> fun (V565) -> fun (V566) -> fun (V567) -> ('Idris.Idris2.Core.Context':'un--setDefaultTotalityOption'(V1, V562, V567)) end end end end} | []]} end end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E216, E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarData'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Idris.Syntax.MkPData', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> fun (V12) -> begin (V13 = ('Idris.Idris2.Idris.DocString':'un--addDocString'(V1, V0, V8, V5, V12))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> begin (V20 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V9, V12))), case V20 of {'Idris.Prelude.Types.Left', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V22) -> begin (V32 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, case V19 of {'Idris.Idris.Syntax.MkSyntax', E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31) -> V30 end(E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V22, V12))), case V32 of {'Idris.Prelude.Types.Left', E20} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V34) -> begin (V36 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V35) -> ('un--desugarType'(V0, V1, V2, V3, V4, V35)) end, V11, []))(V12))), case V36 of {'Idris.Prelude.Types.Left', E22} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V7, V8, V34, V10, V38}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.Idris.Syntax.MkPLater', E24, E25, E26} -> (fun (V39, V40, V41) -> fun (V42) -> begin (V43 = ('Idris.Idris2.Idris.DocString':'un--addDocString'(V1, V0, V40, V5, V42))), case V43 of {'Idris.Prelude.Types.Left', E27} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V45) -> begin (V47 = begin (V46 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E29} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V49) -> begin (V50 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, V4, V41, V42))), case V50 of {'Idris.Prelude.Types.Left', E31} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V52) -> begin (V62 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, case V49 of {'Idris.Idris.Syntax.MkSyntax', E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V60 end(E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V52, V42))), case V62 of {'Idris.Prelude.Types.Left', E42} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V39, V40, V64}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarClause'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Idris.Syntax.MkPatClause', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> fun (V11) -> begin (V13 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V12) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V12)) end, V10, []))(V11))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V19 = begin (V16 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.LHS'}, V4, V8, V11))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, V5, V18, V11)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> case V21 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V22, V23) -> begin (V24 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V22, V4)), V9, V11))), case V24 of {'Idris.Prelude.Types.Left', E12} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V7, V23, case V15 of [] -> V26; _ -> {'Idris.TTImp.TTImp.ILocal', V7, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V29, V30, V31)) end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V34, V35, V36)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V37, V38)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V15)), V26} end}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); {'Idris.Idris.Syntax.MkWithClause', E14, E15, E16, E17, E18} -> (fun (V39, V40, V41, V42, V43) -> fun (V44) -> begin (V46 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V45) -> ('un--desugarClause'(V0, V1, V2, V3, V4, V5, V45)) end, V43, []))(V44))), case V46 of {'Idris.Prelude.Types.Left', E19} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V48) -> begin (V52 = begin (V49 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.LHS'}, V4, V40, V44))), case V49 of {'Idris.Prelude.Types.Left', E21} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V51) -> ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, V5, V51, V44)) end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E23} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V54) -> case V54 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V55, V56) -> begin (V57 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.AnyExpr'}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V55, V4)), V41, V44))), case V57 of {'Idris.Prelude.Types.Left', E27} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V39, V56, V59, V42, V48}} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14, E15, E16, E17, E18)); {'Idris.Idris.Syntax.MkImpossible', E29, E30} -> (fun (V60, V61) -> fun (V62) -> begin (V63 = ('un--desugar'(V0, V1, V3, V2, {'Idris.Idris.Desugar.LHS'}, V4, V61, V62))), case V63 of {'Idris.Prelude.Types.Left', E31} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V65) -> begin (V66 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, V5, V65, V62))), case V66 of {'Idris.Prelude.Types.Left', E33} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V60, ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V68))}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Idris.Syntax.PRef', E0, E1} -> (fun (V8, V9) -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V8, V9}} end end(E0, E1)); {'Idris.Idris.Syntax.PPi', E2, E3, E4, E5, E6, E7} -> (fun (V11, V12, V13, V14, V15, V16) -> begin (V18 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> V6 end, fun () -> fun (V17) -> [V17 | V6] end end, V14))), fun (V19) -> begin (V22 = (('Idris.Idris2.Core.Core.PiInfo':'un--traverse'('erased', 'erased', fun (V20) -> fun (V21) -> ('un--desugar'(V0, V2, V3, V4, V5, V18, V20, V21)) end end, V13))(V19))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> begin (V25 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V15))(V19))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> begin (V28 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V18, V16))(V19))), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V11, V12, V24, V14, V27, V30}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3, E4, E5, E6, E7)); {'Idris.Idris.Syntax.PLam', E14, E15, E16, E17, E18, E19} -> (fun (V31, V32, V33, V34, V35, V36) -> case V34 of {'Idris.Idris.Syntax.PRef', E26, E27} -> (fun (V37, V38) -> case V38 of {'Idris.Core.Name.UN', E34} -> (fun (V39) -> fun (V40) -> begin (V43 = (('Idris.Idris2.Core.Core.PiInfo':'un--traverse'('erased', 'erased', fun (V41) -> fun (V42) -> ('un--desugar'(V0, V2, V3, V4, V5, V6, V41, V42)) end end, V33))(V40))), case V43 of {'Idris.Prelude.Types.Left', E35} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V45) -> begin (V46 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V35))(V40))), case V46 of {'Idris.Prelude.Types.Left', E37} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V48) -> begin (V49 = ('un--desugar'(V0, V2, V3, V4, V5, [V38 | V6], V36, V40))), case V49 of {'Idris.Prelude.Types.Left', E39} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V51) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V45, {'Idris.Prelude.Types.Just', V38}, V48, V51}} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E34)); {'Idris.Core.Name.MN', E41, E42} -> (fun (V52, V53) -> fun (V54) -> begin (V57 = (('Idris.Idris2.Core.Core.PiInfo':'un--traverse'('erased', 'erased', fun (V55) -> fun (V56) -> ('un--desugar'(V0, V2, V3, V4, V5, V6, V55, V56)) end end, V33))(V54))), case V57 of {'Idris.Prelude.Types.Left', E43} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V59) -> begin (V60 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V35))(V54))), case V60 of {'Idris.Prelude.Types.Left', E45} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V62) -> begin (V63 = ('un--desugar'(V0, V2, V3, V4, V5, [V38 | V6], V36, V54))), case V63 of {'Idris.Prelude.Types.Left', E47} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V65) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V59, {'Idris.Prelude.Types.Just', V38}, V62, V65}} end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E41, E42)); _ -> fun (V66) -> begin (V69 = (('Idris.Idris2.Core.Core.PiInfo':'un--traverse'('erased', 'erased', fun (V67) -> fun (V68) -> ('un--desugar'(V0, V2, V3, V4, V5, V6, V67, V68)) end end, V33))(V66))), case V69 of {'Idris.Prelude.Types.Left', E28} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V71) -> begin (V72 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V35))(V66))), case V72 of {'Idris.Prelude.Types.Left', E30} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V74) -> begin (V75 = (('un--desugarClause'(V0, V2, V4, V3, V6, 0, {'Idris.Idris.Syntax.MkPatClause', V31, V34, V36, []}))(V66))), case V75 of {'Idris.Prelude.Types.Left', E32} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V77) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V71, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, V74, {'Idris.TTImp.TTImp.ICase', V31, {'Idris.TTImp.TTImp.IVar', V31, {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V31, 1}, [V77 | []]}}} end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E26, E27)); {'Idris.Idris.Syntax.PImplicit', E49} -> (fun (V78) -> fun (V79) -> begin (V82 = (('Idris.Idris2.Core.Core.PiInfo':'un--traverse'('erased', 'erased', fun (V80) -> fun (V81) -> ('un--desugar'(V0, V2, V3, V4, V5, V6, V80, V81)) end end, V33))(V79))), case V82 of {'Idris.Prelude.Types.Left', E50} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V84) -> begin (V85 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V35))(V79))), case V85 of {'Idris.Prelude.Types.Left', E52} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V87) -> begin (V88 = ('un--desugar'(V0, V2, V3, V4, V5, V6, V36, V79))), case V88 of {'Idris.Prelude.Types.Left', E54} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V90) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V84, {'Idris.Prelude.Types.Nothing'}, V87, V90}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E49)); _ -> fun (V91) -> begin (V94 = (('Idris.Idris2.Core.Core.PiInfo':'un--traverse'('erased', 'erased', fun (V92) -> fun (V93) -> ('un--desugar'(V0, V2, V3, V4, V5, V6, V92, V93)) end end, V33))(V91))), case V94 of {'Idris.Prelude.Types.Left', E20} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V96) -> begin (V97 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V35))(V91))), case V97 of {'Idris.Prelude.Types.Left', E22} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V99) -> begin (V100 = (('un--desugarClause'(V0, V2, V4, V3, V6, 0, {'Idris.Idris.Syntax.MkPatClause', V31, V34, V36, []}))(V91))), case V100 of {'Idris.Prelude.Types.Left', E24} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V102) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V96, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, V99, {'Idris.TTImp.TTImp.ICase', V31, {'Idris.TTImp.TTImp.IVar', V31, {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V31, 1}, [V102 | []]}}} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E14, E15, E16, E17, E18, E19)); {'Idris.Idris.Syntax.PLet', E56, E57, E58, E59, E60, E61, E62} -> (fun (V103, V104, V105, V106, V107, V108, V109) -> case V105 of {'Idris.Idris.Syntax.PRef', E69, E70} -> (fun (V110, V111) -> case V109 of [] -> fun (V112) -> begin (V113 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V106))(V112))), case V113 of {'Idris.Prelude.Types.Left', E77} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V115) -> begin (V116 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V107))(V112))), case V116 of {'Idris.Prelude.Types.Left', E79} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V118) -> begin (V119 = ('un--desugar'(V0, V2, V3, V4, V5, [V111 | V6], V108, V112))), case V119 of {'Idris.Prelude.Types.Left', E81} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V121) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V103, V104, V111, V115, V118, V121}} end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V122) -> begin (V123 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V107))(V122))), case V123 of {'Idris.Prelude.Types.Left', E71} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V125) -> begin (V126 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V106))(V122))), case V126 of {'Idris.Prelude.Types.Left', E73} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V128) -> begin (V130 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V129) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 0, V129)) end, [{'Idris.Idris.Syntax.MkPatClause', V103, V105, V108, []} | V109], []))(V122))), case V130 of {'Idris.Prelude.Types.Left', E75} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V132) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V103, V125, V128, V132}} end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E69, E70)); _ -> fun (V133) -> begin (V134 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V107))(V133))), case V134 of {'Idris.Prelude.Types.Left', E63} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V136) -> begin (V137 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V106))(V133))), case V137 of {'Idris.Prelude.Types.Left', E65} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V139) -> begin (V141 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V140) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 0, V140)) end, [{'Idris.Idris.Syntax.MkPatClause', V103, V105, V108, []} | V109], []))(V133))), case V141 of {'Idris.Prelude.Types.Left', E67} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V143) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V103, V136, V139, V143}} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E56, E57, E58, E59, E60, E61, E62)); {'Idris.Idris.Syntax.PCase', E83, E84, E85} -> (fun (V144, V145, V146) -> fun (V147) -> begin (V148 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V145))(V147))), case V148 of {'Idris.Prelude.Types.Left', E86} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V150) -> begin (V152 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V151) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 0, V151)) end, V146, []))(V147))), case V152 of {'Idris.Prelude.Types.Left', E88} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V154) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V144, V150, {'Idris.TTImp.TTImp.Implicit', V144, 1}, V154}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E83, E84, E85)); {'Idris.Idris.Syntax.PLocal', E90, E91, E92} -> (fun (V155, V156, V157) -> begin (V158 = ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Idris.Syntax':'un--definedIn'(V156)), V6))), fun (V159) -> begin (V161 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V160) -> ('un--desugarDecl'(V0, V2, V4, V3, V158, V160)) end, V156, []))(V159))), case V161 of {'Idris.Prelude.Types.Left', E93} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V163) -> begin (V164 = ('un--desugar'(V0, V2, V3, V4, V5, V158, V157, V159))), case V164 of {'Idris.Prelude.Types.Left', E95} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V166) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V155, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V169, V170, V171)) end end end end end, fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V174, V175, V176)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V177) -> fun (V178) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V177, V178)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V163)), V166}} end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E90, E91, E92)); {'Idris.Idris.Syntax.PApp', E97, E98, E99} -> (fun (V179, V180, V181) -> case V180 of {'Idris.Idris.Syntax.PUpdate', E104, E105} -> (fun (V182, V183) -> fun (V184) -> begin (V186 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V185) -> ('un--desugarUpdate'(V0, V1, V2, V4, V3, V5, V6, V185)) end, V183, []))(V184))), case V186 of {'Idris.Prelude.Types.Left', E106} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V188) -> begin (V189 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V181))(V184))), case V189 of {'Idris.Prelude.Types.Left', E108} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V191) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V179, V188, V191}} end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E104, E105)); _ -> fun (V192) -> begin (V193 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V180))(V192))), case V193 of {'Idris.Prelude.Types.Left', E100} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V195) -> begin (V196 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V181))(V192))), case V196 of {'Idris.Prelude.Types.Left', E102} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V198) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V179, V195, V198}} end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E97, E98, E99)); {'Idris.Idris.Syntax.PUpdate', E110, E111} -> (fun (V199, V200) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V199, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V199, {'Idris.Core.Name.MN', <<"rec"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V199}, {'Idris.Idris.Syntax.PApp', V199, {'Idris.Idris.Syntax.PUpdate', V199, V200}, {'Idris.Idris.Syntax.PRef', V199, {'Idris.Core.Name.MN', <<"rec"/utf8>>, 0}}}})) end(E110, E111)); {'Idris.Idris.Syntax.PAutoApp', E112, E113, E114} -> (fun (V201, V202, V203) -> fun (V204) -> begin (V205 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V202))(V204))), case V205 of {'Idris.Prelude.Types.Left', E115} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V207) -> begin (V208 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V203))(V204))), case V208 of {'Idris.Prelude.Types.Left', E117} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V210) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V201, V207, V210}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E112, E113, E114)); {'Idris.Idris.Syntax.PWithApp', E119, E120, E121} -> (fun (V211, V212, V213) -> fun (V214) -> begin (V215 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V212))(V214))), case V215 of {'Idris.Prelude.Types.Left', E122} -> (fun (V216) -> {'Idris.Prelude.Types.Left', V216} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V217) -> begin (V218 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V213))(V214))), case V218 of {'Idris.Prelude.Types.Left', E124} -> (fun (V219) -> {'Idris.Prelude.Types.Left', V219} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V220) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V211, V217, V220}} end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E119, E120, E121)); {'Idris.Idris.Syntax.PNamedApp', E126, E127, E128, E129} -> (fun (V221, V222, V223, V224) -> fun (V225) -> begin (V226 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V222))(V225))), case V226 of {'Idris.Prelude.Types.Left', E130} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V228) -> begin (V229 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V224))(V225))), case V229 of {'Idris.Prelude.Types.Left', E132} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V231) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V221, V228, V223, V231}} end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E126, E127, E128, E129)); {'Idris.Idris.Syntax.PDelayed', E134, E135, E136} -> (fun (V232, V233, V234) -> fun (V235) -> begin (V236 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V234))(V235))), case V236 of {'Idris.Prelude.Types.Left', E137} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V238) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V232, V233, V238}} end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E134, E135, E136)); {'Idris.Idris.Syntax.PDelay', E139, E140} -> (fun (V239, V240) -> fun (V241) -> begin (V242 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V240))(V241))), case V242 of {'Idris.Prelude.Types.Left', E141} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V244) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V239, V244}} end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E139, E140)); {'Idris.Idris.Syntax.PForce', E143, E144} -> (fun (V245, V246) -> fun (V247) -> begin (V248 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V246))(V247))), case V248 of {'Idris.Prelude.Types.Left', E145} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V250) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V245, V250}} end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E143, E144)); {'Idris.Idris.Syntax.PEq', E147, E148, E149} -> (fun (V251, V252, V253) -> fun (V254) -> begin (V255 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V252))(V254))), case V255 of {'Idris.Prelude.Types.Left', E150} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V257) -> begin (V258 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V253))(V254))), case V258 of {'Idris.Prelude.Types.Left', E152} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V260) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V251, {'Idris.TTImp.TTImp.FirstSuccess'}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V251, {'Idris.Core.Name.UN', <<"==="/utf8>>}}, [V257 | [V260 | []]])) | [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V251, {'Idris.Core.Name.UN', <<"~=~"/utf8>>}}, [V257 | [V260 | []]])) | []]]}} end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E147, E148, E149)); {'Idris.Idris.Syntax.PBracketed', E154, E155} -> (fun (V261, V262) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V262)) end(E154, E155)); {'Idris.Idris.Syntax.POp', E156, E157, E158, E159} -> (fun (V263, V264, V265, V266) -> fun (V267) -> begin (V268 = (('un--toTokList'(V0, {'Idris.Idris.Syntax.POp', V263, V264, V265, V266}))(V267))), case V268 of {'Idris.Prelude.Types.Left', E160} -> (fun (V269) -> {'Idris.Prelude.Types.Left', V269} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V270) -> begin (V274 = ('Idris.Idris2.Utils.Shunting':'un--parseOps'('erased', 'erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V271) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V271)) end, fun (V272) -> fun (V273) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V272, V273)) end end}, V270, V267))), case V274 of {'Idris.Prelude.Types.Left', E162} -> (fun (V275) -> {'Idris.Prelude.Types.Left', V275} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V276) -> (('un--desugarTree'(V0, V1, V2, V4, V3, V5, V6, V276))(V267)) end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E156, E157, E158, E159)); {'Idris.Idris.Syntax.PPrefixOp', E164, E165, E166} -> (fun (V277, V278, V279) -> fun (V280) -> begin (V281 = (('un--toTokList'(V0, {'Idris.Idris.Syntax.PPrefixOp', V277, V278, V279}))(V280))), case V281 of {'Idris.Prelude.Types.Left', E167} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V283) -> begin (V287 = ('Idris.Idris2.Utils.Shunting':'un--parseOps'('erased', 'erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V284) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V284)) end, fun (V285) -> fun (V286) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V285, V286)) end end}, V283, V280))), case V287 of {'Idris.Prelude.Types.Left', E169} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V289) -> (('un--desugarTree'(V0, V1, V2, V4, V3, V5, V6, V289))(V280)) end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E164, E165, E166)); {'Idris.Idris.Syntax.PSectionL', E171, E172, E173} -> (fun (V290, V291, V292) -> fun (V293) -> begin (V295 = begin (V294 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V294} end), case V295 of {'Idris.Prelude.Types.Left', E174} -> (fun (V296) -> {'Idris.Prelude.Types.Left', V296} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V297) -> (('case--desugarB-4624'(V292, V291, V290, V6, V5, V4, V3, V2, V1, V0, V297, ('Idris.Idris2.Data.StringMap':'un--lookup'('erased', ('Idris.Idris2.Core.Name':'un--nameRoot'(V291)), case V297 of {'Idris.Idris.Syntax.MkSyntax', E176, E177, E178, E179, E180, E181, E182, E183, E184} -> (fun (V298, V299, V300, V301, V302, V303, V304, V305, V306) -> V299 end(E176, E177, E178, E179, E180, E181, E182, E183, E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V293)) end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E171, E172, E173)); {'Idris.Idris.Syntax.PSectionR', E185, E186, E187} -> (fun (V307, V308, V309) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V307, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V307, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V307}, {'Idris.Idris.Syntax.POp', V307, V309, V308, {'Idris.Idris.Syntax.PRef', V307, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}}})) end(E185, E186, E187)); {'Idris.Idris.Syntax.PSearch', E188, E189} -> (fun (V310, V311) -> fun (V312) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V310, V311}} end end(E188, E189)); {'Idris.Idris.Syntax.PPrimVal', E190, E191} -> (fun (V313, V314) -> case V314 of {'Idris.Core.TT.BI', E192} -> (fun (V315) -> fun (V316) -> begin (V317 = ('Idris.Idris2.Core.Context':'un--fromIntegerName'(V2, V316))), case V317 of {'Idris.Prelude.Types.Left', E193} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V319) -> case V319 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V313, {'Idris.TTImp.TTImp.UniqueDefault', {'Idris.TTImp.TTImp.IPrimVal', V313, {'Idris.Core.TT.BI', V315}}}, [{'Idris.TTImp.TTImp.IPrimVal', V313, {'Idris.Core.TT.BI', V315}} | [{'Idris.TTImp.TTImp.IPrimVal', V313, {'Idris.Core.TT.I', V315}} | []]]}} end()); {'Idris.Prelude.Types.Just', E195} -> (fun (V320) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V313, {'Idris.TTImp.TTImp.IVar', V313, V320}, {'Idris.TTImp.TTImp.IPrimVal', V313, {'Idris.Core.TT.BI', V315}}}} end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E192)); {'Idris.Core.TT.Str', E196} -> (fun (V321) -> fun (V322) -> begin (V323 = ('Idris.Idris2.Core.Context':'un--fromStringName'(V2, V322))), case V323 of {'Idris.Prelude.Types.Left', E197} -> (fun (V324) -> {'Idris.Prelude.Types.Left', V324} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V325) -> case V325 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V313, {'Idris.Core.TT.Str', V321}}} end()); {'Idris.Prelude.Types.Just', E199} -> (fun (V326) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V313, {'Idris.TTImp.TTImp.IVar', V313, V326}, {'Idris.TTImp.TTImp.IPrimVal', V313, {'Idris.Core.TT.Str', V321}}}} end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E196)); {'Idris.Core.TT.Ch', E200} -> (fun (V327) -> fun (V328) -> begin (V329 = ('Idris.Idris2.Core.Context':'un--fromCharName'(V2, V328))), case V329 of {'Idris.Prelude.Types.Left', E201} -> (fun (V330) -> {'Idris.Prelude.Types.Left', V330} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V331) -> case V331 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V313, {'Idris.Core.TT.Ch', V327}}} end()); {'Idris.Prelude.Types.Just', E203} -> (fun (V332) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V313, {'Idris.TTImp.TTImp.IVar', V313, V332}, {'Idris.TTImp.TTImp.IPrimVal', V313, {'Idris.Core.TT.Ch', V327}}}} end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E200)); _ -> fun (V333) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V313, V314}} end end end(E190, E191)); {'Idris.Idris.Syntax.PQuote', E204, E205} -> (fun (V334, V335) -> fun (V336) -> begin (V337 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V335))(V336))), case V337 of {'Idris.Prelude.Types.Left', E206} -> (fun (V338) -> {'Idris.Prelude.Types.Left', V338} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V339) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V334, V339}} end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E204, E205)); {'Idris.Idris.Syntax.PQuoteName', E208, E209} -> (fun (V340, V341) -> fun (V342) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V340, V341}} end end(E208, E209)); {'Idris.Idris.Syntax.PQuoteDecl', E210, E211} -> (fun (V343, V344) -> fun (V345) -> begin (V347 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V346) -> ('un--desugarDecl'(V0, V2, V4, V3, V6, V346)) end, V344, []))(V345))), case V347 of {'Idris.Prelude.Types.Left', E212} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E212)); {'Idris.Prelude.Types.Right', E213} -> (fun (V349) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V343, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V350) -> fun (V351) -> fun (V352) -> fun (V353) -> fun (V354) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V352, V353, V354)) end end end end end, fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> fun (V359) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V357, V358, V359)) end end end end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V360) -> fun (V361) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup__(List $a)'('erased', V360, V361)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid__(List $a)'('erased'))}}))(V349))}} end(E213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E210, E211)); {'Idris.Idris.Syntax.PUnquote', E214, E215} -> (fun (V362, V363) -> fun (V364) -> begin (V365 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V363))(V364))), case V365 of {'Idris.Prelude.Types.Left', E216} -> (fun (V366) -> {'Idris.Prelude.Types.Left', V366} end(E216)); {'Idris.Prelude.Types.Right', E217} -> (fun (V367) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V362, V367}} end(E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E214, E215)); {'Idris.Idris.Syntax.PRunElab', E218, E219} -> (fun (V368, V369) -> fun (V370) -> begin (V371 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V369))(V370))), case V371 of {'Idris.Prelude.Types.Left', E220} -> (fun (V372) -> {'Idris.Prelude.Types.Left', V372} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V373) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRunElab', V368, V373}} end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E218, E219)); {'Idris.Idris.Syntax.PHole', E222, E223, E224} -> (fun (V374, V375, V376) -> fun (V377) -> begin (V392 = case V375 of 0 -> begin (V379 = begin (V378 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V378} end), case V379 of {'Idris.Prelude.Types.Left', E225} -> (fun (V380) -> {'Idris.Prelude.Types.Left', V380} end(E225)); {'Idris.Prelude.Types.Right', E226} -> (fun (V381) -> begin (V391 = ('erlang':'put'(V0, case V381 of {'Idris.Idris.Syntax.MkSyntax', E227, E228, E229, E230, E231, E232, E233, E234, E235} -> (fun (V382, V383, V384, V385, V386, V387, V388, V389, V390) -> {'Idris.Idris.Syntax.MkSyntax', V382, V383, V384, V385, V386, V387, [{'Idris.Core.Name.UN', V376} | V388], V389, V390} end(E227, E228, E229, E230, E231, E232, E233, E234, E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V391} end end(E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V392 of {'Idris.Prelude.Types.Left', E236} -> (fun (V393) -> {'Idris.Prelude.Types.Left', V393} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V394) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V374, V376}} end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E222, E223, E224)); {'Idris.Idris.Syntax.PType', E238} -> (fun (V395) -> fun (V396) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V395}} end end(E238)); {'Idris.Idris.Syntax.PAs', E239, E240, E241} -> (fun (V397, V398, V399) -> fun (V400) -> begin (V401 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V399))(V400))), case V401 of {'Idris.Prelude.Types.Left', E242} -> (fun (V402) -> {'Idris.Prelude.Types.Left', V402} end(E242)); {'Idris.Prelude.Types.Right', E243} -> (fun (V403) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V397, {'Idris.Core.TT.UseRight'}, V398, V403}} end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E239, E240, E241)); {'Idris.Idris.Syntax.PDotted', E244, E245} -> (fun (V404, V405) -> fun (V406) -> begin (V407 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V405))(V406))), case V407 of {'Idris.Prelude.Types.Left', E246} -> (fun (V408) -> {'Idris.Prelude.Types.Left', V408} end(E246)); {'Idris.Prelude.Types.Right', E247} -> (fun (V409) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V404, {'Idris.Core.Core.UserDotted'}, V409}} end(E247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E244, E245)); {'Idris.Idris.Syntax.PImplicit', E248} -> (fun (V410) -> fun (V411) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V410, 0}} end end(E248)); {'Idris.Idris.Syntax.PInfer', E249} -> (fun (V412) -> fun (V413) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V412, 1}} end end(E249)); {'Idris.Idris.Syntax.PDoBlock', E250, E251, E252} -> (fun (V414, V415, V416) -> ('un--expandDo'(V0, V2, V4, V3, V5, V6, V414, V415, V416)) end(E250, E251, E252)); {'Idris.Idris.Syntax.PBang', E253, E254} -> (fun (V417, V418) -> fun (V419) -> begin (V420 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V418))(V419))), case V420 of {'Idris.Prelude.Types.Left', E255} -> (fun (V421) -> {'Idris.Prelude.Types.Left', V421} end(E255)); {'Idris.Prelude.Types.Right', E256} -> (fun (V422) -> begin (V424 = begin (V423 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V423} end), case V424 of {'Idris.Prelude.Types.Left', E257} -> (fun (V425) -> {'Idris.Prelude.Types.Left', V425} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V426) -> begin (V429 = {'Idris.Core.Name.MN', <<"bind"/utf8>>, case V426 of {'Idris.Idris.Desugar.MkBangData', E259, E260} -> (fun (V427, V428) -> V427 end(E259, E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}), begin (V433 = begin (V432 = ('erlang':'put'(V1, case V426 of {'Idris.Idris.Desugar.MkBangData', E261, E262} -> (fun (V430, V431) -> {'Idris.Idris.Desugar.MkBangData', ((V430 + 1) rem 9223372036854775808), [{'Idris.Builtin.MkPair', V429, {'Idris.Builtin.MkPair', V417, V422}} | V431]} end(E261, E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V432} end), case V433 of {'Idris.Prelude.Types.Left', E263} -> (fun (V434) -> {'Idris.Prelude.Types.Left', V434} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V435) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V417, V429}} end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E253, E254)); {'Idris.Idris.Syntax.PIdiom', E265, E266} -> (fun (V436, V437) -> fun (V438) -> begin (V439 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V437))(V438))), case V439 of {'Idris.Prelude.Types.Left', E267} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E267)); {'Idris.Prelude.Types.Right', E268} -> (fun (V441) -> begin (V442 = ('Idris.Idris2.TTImp.TTImp':'un--logRaw'(V2, <<"desugar.idiom"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Desugaring idiom for"/utf8>> end, V441, V438))), case V442 of {'Idris.Prelude.Types.Left', E269} -> (fun (V443) -> {'Idris.Prelude.Types.Left', V443} end(E269)); {'Idris.Prelude.Types.Right', E270} -> (fun (V444) -> begin (V445 = ('un--idiomise'(V436, V441))), begin (V446 = ('Idris.Idris2.TTImp.TTImp':'un--logRaw'(V2, <<"desugar.idiom"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Desugared to"/utf8>> end, V445, V438))), case V446 of {'Idris.Prelude.Types.Left', E271} -> (fun (V447) -> {'Idris.Prelude.Types.Left', V447} end(E271)); {'Idris.Prelude.Types.Right', E272} -> (fun (V448) -> {'Idris.Prelude.Types.Right', V445} end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E265, E266)); {'Idris.Idris.Syntax.PList', E273, E274} -> (fun (V449, V450) -> ('un--expandList'(V0, V1, V2, V4, V3, V5, V6, V449, V450)) end(E273, E274)); {'Idris.Idris.Syntax.PPair', E275, E276, E277} -> (fun (V451, V452, V453) -> fun (V454) -> begin (V455 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V452))(V454))), case V455 of {'Idris.Prelude.Types.Left', E278} -> (fun (V456) -> {'Idris.Prelude.Types.Left', V456} end(E278)); {'Idris.Prelude.Types.Right', E279} -> (fun (V457) -> begin (V458 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V453))(V454))), case V458 of {'Idris.Prelude.Types.Left', E280} -> (fun (V459) -> {'Idris.Prelude.Types.Left', V459} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V460) -> begin (V461 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V451, ('un--mkpairname'())}, [V457 | [V460 | []]]))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V451, {'Idris.TTImp.TTImp.UniqueDefault', V461}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V451, ('un--pairname'())}, [V457 | [V460 | []]])) | [V461 | []]]}} end end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E275, E276, E277)); {'Idris.Idris.Syntax.PDPair', E282, E283, E284, E285} -> (fun (V462, V463, V464, V465) -> case V463 of {'Idris.Idris.Syntax.PRef', E291, E292} -> (fun (V466, V467) -> case V467 of {'Idris.Core.Name.UN', E298} -> (fun (V468) -> case V464 of {'Idris.Idris.Syntax.PImplicit', E303} -> (fun (V469) -> fun (V470) -> begin (V471 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V465))(V470))), case V471 of {'Idris.Prelude.Types.Left', E304} -> (fun (V472) -> {'Idris.Prelude.Types.Left', V472} end(E304)); {'Idris.Prelude.Types.Right', E305} -> (fun (V473) -> begin (V474 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V462, ('un--mkdpairname'())}, [{'Idris.TTImp.TTImp.IVar', V466, {'Idris.Core.Name.UN', V468}} | [V473 | []]]))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V462, {'Idris.TTImp.TTImp.UniqueDefault', V474}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V462, ('un--dpairname'())}, [{'Idris.TTImp.TTImp.Implicit', V466, 1} | [{'Idris.TTImp.TTImp.ILam', V466, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.UN', V468}}, {'Idris.TTImp.TTImp.Implicit', V466, 1}, V473} | []]])) | [V474 | []]]}} end end(E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E303)); _ -> fun (V475) -> begin (V476 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V464))(V475))), case V476 of {'Idris.Prelude.Types.Left', E299} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E299)); {'Idris.Prelude.Types.Right', E300} -> (fun (V478) -> begin (V479 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V465))(V475))), case V479 of {'Idris.Prelude.Types.Left', E301} -> (fun (V480) -> {'Idris.Prelude.Types.Left', V480} end(E301)); {'Idris.Prelude.Types.Right', E302} -> (fun (V481) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V462, ('un--dpairname'())}, [V478 | [{'Idris.TTImp.TTImp.ILam', V466, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.UN', V468}}, V478, V481} | []]]))} end(E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E298)); _ -> case V464 of {'Idris.Idris.Syntax.PImplicit', E293} -> (fun (V482) -> fun (V483) -> begin (V484 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V463))(V483))), case V484 of {'Idris.Prelude.Types.Left', E294} -> (fun (V485) -> {'Idris.Prelude.Types.Left', V485} end(E294)); {'Idris.Prelude.Types.Right', E295} -> (fun (V486) -> begin (V487 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V465))(V483))), case V487 of {'Idris.Prelude.Types.Left', E296} -> (fun (V488) -> {'Idris.Prelude.Types.Left', V488} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V489) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V462, ('un--mkdpairname'())}, [V486 | [V489 | []]]))} end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E293)); _ -> fun (V490) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V462, <<"Invalid dependent pair type"/utf8>>}, V490)) end end end end(E291, E292)); _ -> case V464 of {'Idris.Idris.Syntax.PImplicit', E286} -> (fun (V491) -> fun (V492) -> begin (V493 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V463))(V492))), case V493 of {'Idris.Prelude.Types.Left', E287} -> (fun (V494) -> {'Idris.Prelude.Types.Left', V494} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V495) -> begin (V496 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V465))(V492))), case V496 of {'Idris.Prelude.Types.Left', E289} -> (fun (V497) -> {'Idris.Prelude.Types.Left', V497} end(E289)); {'Idris.Prelude.Types.Right', E290} -> (fun (V498) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V462, ('un--mkdpairname'())}, [V495 | [V498 | []]]))} end(E290)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E286)); _ -> fun (V499) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V462, <<"Invalid dependent pair type"/utf8>>}, V499)) end end end end(E282, E283, E284, E285)); {'Idris.Idris.Syntax.PUnit', E306} -> (fun (V500) -> fun (V501) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V500, {'Idris.TTImp.TTImp.UniqueDefault', {'Idris.TTImp.TTImp.IVar', V500, {'Idris.Core.Name.UN', <<"MkUnit"/utf8>>}}}, [{'Idris.TTImp.TTImp.IVar', V500, {'Idris.Core.Name.UN', <<"Unit"/utf8>>}} | [{'Idris.TTImp.TTImp.IVar', V500, {'Idris.Core.Name.UN', <<"MkUnit"/utf8>>}} | []]]}} end end(E306)); {'Idris.Idris.Syntax.PIfThenElse', E307, E308, E309, E310} -> (fun (V502, V503, V504, V505) -> fun (V506) -> begin (V507 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V503))(V506))), case V507 of {'Idris.Prelude.Types.Left', E311} -> (fun (V508) -> {'Idris.Prelude.Types.Left', V508} end(E311)); {'Idris.Prelude.Types.Right', E312} -> (fun (V509) -> begin (V510 = ('un--desugar'(V0, V2, V3, V4, V5, V6, V504, V506))), case V510 of {'Idris.Prelude.Types.Left', E313} -> (fun (V511) -> {'Idris.Prelude.Types.Left', V511} end(E313)); {'Idris.Prelude.Types.Right', E314} -> (fun (V512) -> begin (V513 = ('un--desugar'(V0, V2, V3, V4, V5, V6, V505, V506))), case V513 of {'Idris.Prelude.Types.Left', E315} -> (fun (V514) -> {'Idris.Prelude.Types.Left', V514} end(E315)); {'Idris.Prelude.Types.Right', E316} -> (fun (V515) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V502, V509, {'Idris.TTImp.TTImp.IVar', V502, {'Idris.Core.Name.UN', <<"Bool"/utf8>>}}, [{'Idris.TTImp.TTImp.PatClause', V502, {'Idris.TTImp.TTImp.IVar', V502, {'Idris.Core.Name.UN', <<"True"/utf8>>}}, V512} | [{'Idris.TTImp.TTImp.PatClause', V502, {'Idris.TTImp.TTImp.IVar', V502, {'Idris.Core.Name.UN', <<"False"/utf8>>}}, V515} | []]]}} end(E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E314)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E312)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E307, E308, E309, E310)); {'Idris.Idris.Syntax.PComprehension', E317, E318, E319} -> (fun (V516, V517, V518) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PDoBlock', V516, {'Idris.Prelude.Types.Nothing'}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V519) -> ('nested--14395-5422--in--un--guard'(V518, V517, V516, V6, V5, V4, V3, V2, V1, V0, V519)) end, V518)), [('nested--14395-5423--in--un--toPure'(V518, V517, V516, V6, V5, V4, V3, V2, V1, V0, V517)) | []]))})) end(E317, E318, E319)); {'Idris.Idris.Syntax.PRewrite', E320, E321, E322} -> (fun (V520, V521, V522) -> fun (V523) -> begin (V524 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V521))(V523))), case V524 of {'Idris.Prelude.Types.Left', E323} -> (fun (V525) -> {'Idris.Prelude.Types.Left', V525} end(E323)); {'Idris.Prelude.Types.Right', E324} -> (fun (V526) -> begin (V527 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V522))(V523))), case V527 of {'Idris.Prelude.Types.Left', E325} -> (fun (V528) -> {'Idris.Prelude.Types.Left', V528} end(E325)); {'Idris.Prelude.Types.Right', E326} -> (fun (V529) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V520, V526, V529}} end(E326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E320, E321, E322)); {'Idris.Idris.Syntax.PRange', E327, E328, E329, E330} -> (fun (V530, V531, V532, V533) -> case V532 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PApp', V530, {'Idris.Idris.Syntax.PApp', V530, {'Idris.Idris.Syntax.PRef', V530, {'Idris.Core.Name.UN', <<"rangeFromTo"/utf8>>}}, V531}, V533})) end()); {'Idris.Prelude.Types.Just', E331} -> (fun (V534) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PApp', V530, {'Idris.Idris.Syntax.PApp', V530, {'Idris.Idris.Syntax.PApp', V530, {'Idris.Idris.Syntax.PRef', V530, {'Idris.Core.Name.UN', <<"rangeFromThenTo"/utf8>>}}, V531}, V534}, V533})) end(E331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E327, E328, E329, E330)); {'Idris.Idris.Syntax.PRangeStream', E332, E333, E334} -> (fun (V535, V536, V537) -> case V537 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PApp', V535, {'Idris.Idris.Syntax.PRef', V535, {'Idris.Core.Name.UN', <<"rangeFrom"/utf8>>}}, V536})) end()); {'Idris.Prelude.Types.Just', E335} -> (fun (V538) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PApp', V535, {'Idris.Idris.Syntax.PApp', V535, {'Idris.Idris.Syntax.PRef', V535, {'Idris.Core.Name.UN', <<"rangeFromThen"/utf8>>}}, V536}, V538})) end(E335)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E332, E333, E334)); {'Idris.Idris.Syntax.PUnifyLog', E336, E337, E338} -> (fun (V539, V540, V541) -> fun (V542) -> begin (V543 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V541))(V542))), case V543 of {'Idris.Prelude.Types.Left', E339} -> (fun (V544) -> {'Idris.Prelude.Types.Left', V544} end(E339)); {'Idris.Prelude.Types.Right', E340} -> (fun (V545) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnifyLog', V539, V540, V545}} end(E340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E336, E337, E338)); {'Idris.Idris.Syntax.PPostfixApp', E341, E342, E343} -> (fun (V546, V547, V548) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', fun (V549) -> fun (V550) -> {'Idris.Idris.Syntax.PApp', V546, {'Idris.Idris.Syntax.PRef', V546, V550}, V549} end end, V547, V548)))) end(E341, E342, E343)); {'Idris.Idris.Syntax.PPostfixAppPartial', E344, E345} -> (fun (V551, V552) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V551, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V551, {'Idris.Core.Name.MN', <<"paRoot"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V551}, ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', fun (V553) -> fun (V554) -> {'Idris.Idris.Syntax.PApp', V551, {'Idris.Idris.Syntax.PRef', V551, V554}, V553} end end, {'Idris.Idris.Syntax.PRef', V551, {'Idris.Core.Name.MN', <<"paRoot"/utf8>>, 0}}, V552))})) end(E344, E345)); {'Idris.Idris.Syntax.PWithUnambigNames', E346, E347, E348} -> (fun (V555, V556, V557) -> fun (V558) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V559) -> case V559 of {'Idris.Prelude.Types.Left', E349} -> (fun (V560) -> {'Idris.Prelude.Types.Left', V560} end(E349)); {'Idris.Prelude.Types.Right', E350} -> (fun (V561) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V555, V556, V561}} end(E350)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V557)), V558)) end end(E346, E347, E348)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugar'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = (('un--desugarB'(V0, V10, V1, V2, V3, V4, V5, V6))(V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V10))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V17 of {'Idris.Idris.Desugar.MkBangData', E6, E7} -> (fun (V18, V19) -> V19 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V13))} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--bindBangs'(V0, V1) -> case V0 of [] -> V1; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V6, V7) -> ('un--bindBangs'(V3, {'Idris.TTImp.TTImp.IApp', V6, {'Idris.TTImp.TTImp.IApp', V6, {'Idris.TTImp.TTImp.IVar', V6, {'Idris.Core.Name.UN', <<">>="/utf8>>}}, V7}, {'Idris.TTImp.TTImp.ILam', V6, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V4}, {'Idris.TTImp.TTImp.Implicit', V6, 1}, V1}})) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addNS'(V0, V1) -> case V0 of {'Idris.Prelude.Types.Just', E0} -> (fun (V2) -> case V1 of {'Idris.Core.Name.NS', E1, E2} -> (fun (V3, V4) -> V1 end(E1, E2)); _ -> {'Idris.Core.Name.NS', V2, V1} end end(E0)); _ -> V1 end.
