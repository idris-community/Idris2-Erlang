-module('Idris.Idris2.Compiler.Inline').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--compileAndInlineAll,nonErased-4813'/4,
  'case--case block in mergeLamDef-4751'/6,
  'case--mergeLamDef-4739'/4,
  'case--case block in fixArityDef-4678'/6,
  'case--fixArityDef-4666'/4,
  'case--case block in inlineDef-4605'/6,
  'case--inlineDef-4593'/4,
  'case--mergeLam-4559'/4,
  'case--mergeLambdas-4404'/5,
  'case--case block in fixArityTm-3852'/9,
  'case--fixArityTm-3834'/7,
  'case--pickConstAlt-3728'/14,
  'case--case block in pickAlt-3539'/18,
  'case--pickAlt-3498'/18,
  'case--evalAlt-3368'/13,
  'case--extendLoc-3323'/9,
  'case--eval-3171'/13,
  'case--eval-3060'/13,
  'case--eval-2959'/10,
  'case--eval-2721'/13,
  'case--case block in case block in case block in eval-2454'/17,
  'case--case block in case block in eval-2411'/15,
  'case--case block in eval-2381'/13,
  'case--eval-2251'/10,
  'case--tryApply-2128'/10,
  'case--evalLocal-2040'/11,
  'case--usedCon-1896'/9,
  'case--used-1576'/10,
  'case--used-1483'/9,
  'case--largest-1430'/6,
  'case--takeFromStack-1317'/8,
  'nested--10124-4021--in--un--traverseArgs'/9,
  'nested--11181-4795--in--un--nonErased'/3,
  'nested--8082-3461--in--un--matches'/21,
  'nested--10124-4195--in--un--fixArityConstAlt'/8,
  'nested--10124-4137--in--un--fixArityAlt'/8,
  'un--usedConst'/5,
  'un--usedCon'/5,
  'un--used'/5,
  'un--unloadApp'/4,
  'un--unload'/3,
  'un--tryApply'/8,
  'un--takeFromStack'/5,
  'un--refToLocal'/4,
  'un--pickConstAlt'/10,
  'un--pickAlt'/10,
  'un--mkBounds'/1,
  'un--mergeLambdas'/2,
  'un--mergeLamDef'/3,
  'un--mergeLam'/2,
  'un--largest'/4,
  'un--inlineDef'/3,
  'un--inline'/3,
  'un--getNewArgs'/3,
  'un--getLams'/5,
  'un--getArity'/1,
  'un--genName'/3,
  'un--fixArityTm'/4,
  'un--fixArityExp'/3,
  'un--fixArityDef'/3,
  'un--fixArity'/2,
  'un--extendLoc'/6,
  'un--extend'/6,
  'un--evalLocal'/11,
  'un--evalConstAlt'/8,
  'un--evalAlt'/9,
  'un--eval'/8,
  'un--doEval'/5,
  'un--compileAndInlineAll'/2,
  'un--Stack'/1
]).
'case--compileAndInlineAll,nonErased-4813'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq__ZeroOneOmega'(case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V13 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Algebra.Semiring':'un--erased'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V27) -> fun (V28) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V27, V28)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V29) -> fun (V30) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V29, V30)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())}))))} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V31) -> {'Idris.Prelude.Types.Right', 1} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in mergeLamDef-4751'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = (('un--mergeLam'(V1, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V1, V0, V10, V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeLamDef-4739'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> begin (V5 = {'Idris.Prelude.Types.Just', V4}), ('case--case block in mergeLamDef-4751'(V0, V1, V2, V4, V5, case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V24 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in fixArityDef-4678'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = (('un--fixArity'(V1, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V1, V0, V10, V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fixArityDef-4666'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> begin (V5 = {'Idris.Prelude.Types.Just', V4}), ('case--case block in fixArityDef-4678'(V0, V1, V2, V4, V5, case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V24 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in inlineDef-4605'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = (('un--inline'(V1, V0, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V1, V0, V10, V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--inlineDef-4593'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> begin (V5 = {'Idris.Prelude.Types.Just', V4}), ('case--case block in inlineDef-4605'(V0, V1, V2, V4, V5, case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V24 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeLam-4559'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V4, V5) -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V4, V5}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeLambdas-4404'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> begin (V9 = ('Idris.Idris2.Core.CompileExpr':'un--substs'(V5, V1, V7, V8))), begin (V10 = ('Idris.Idris2.Data.List':'un--reverse'('erased', ('un--getNewArgs'('erased', V5, V7))))), begin (V11 = ('Idris.Idris2.Core.CompileExpr':'un--mkLocals'('erased', 'erased', 'erased', ('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'('erased', V1)), ('un--mkBounds'(V10)), V9))), {'Idris.Builtin.DPair.MkDPair', ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V1, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V10, [])))), V11} end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in fixArityTm-3852'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> begin (V10 = ('un--getArity'(V9))), fun (V11) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, V10, {'Idris.Core.CompileExpr.CApp', V2, {'Idris.Core.CompileExpr.CRef', V2, V1}, []}, V3))} end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V3, {'Idris.Core.CompileExpr.CRef', V2, V1}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fixArityTm-3834'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> begin (V8 = {'Idris.Prelude.Types.Just', V7}), ('case--case block in fixArityTm-3852'(V0, V1, V2, V3, V4, V5, V7, V8, case V7 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V27 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V30) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V3, {'Idris.Core.CompileExpr.CRef', V2, V1}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--pickConstAlt-3728'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V15) -> case V15 of {'Idris.Prelude.Types.Left', E0} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V4, V3, V0, V12, V11, V10, V9, V5)), V14)) end; 1 -> ('un--pickConstAlt'(V4, V3, V0, V12, V11, V10, V9, {'Idris.Core.CompileExpr.CPrimVal', V2, V1}, V7, V8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in pickAlt-3539'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V19) -> begin (V20 = ('un--extend'('erased', 'erased', V13, V1, V5, V19))), fun (V21) -> begin (V22 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V5, V6)), V0, V16, V15, V14, V20, V12, V7))(V21))), case V22 of {'Idris.Prelude.Types.Left', E1} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V24}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--pickAlt-3498'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> ('case--case block in pickAlt-3539'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, ('Idris.Idris2.Data.LengthMatch':'un--checkLengthMatch'('erased', 'erased', V1, V5)))); 1 -> ('un--pickAlt'(V6, V0, V16, V15, V14, V13, V12, {'Idris.Core.CompileExpr.CCon', V4, V3, V2, V1}, V10, V11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--evalAlt-3368'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> fun (V15) -> begin (V16 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V2)), V1, V11, V10, V8, V14, V6, V3))(V15))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConAlt', V5, V4, V0, ('Idris.Idris2.Core.CompileExpr':'un--refsToLocals'('erased', 'erased', V13, V18))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--extendLoc-3323'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.TT.Bounds.Add', V2, V7, V9}, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V5, V7}, V10}}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-3171'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V13) -> begin (V18 = case V2 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V15) -> case V15 of {'Idris.Prelude.Types.Left', E1} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V10, V9, V8, V7, V6, V14)), V13)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> begin (V22 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V21) -> ('un--evalConstAlt'(V0, V1, V10, V9, V8, V7, V6, V21)) end, V3, []))(V13))), case V22 of {'Idris.Prelude.Types.Left', E5} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V5, V11, V24, V20}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E7} -> (fun (V25) -> fun (V26) -> {'Idris.Prelude.Types.Right', V25} end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-3060'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V13) -> begin (V18 = case V2 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V15) -> case V15 of {'Idris.Prelude.Types.Left', E1} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V10, V9, V8, V7, V6, V14)), V13)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> begin (V22 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V21) -> ('un--evalAlt'(V0, V1, V10, V9, V5, V8, V7, V6, V21)) end, V3, []))(V13))), case V22 of {'Idris.Prelude.Types.Left', E5} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConCase', V5, V11, V24, V20}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E7} -> (fun (V25) -> fun (V26) -> {'Idris.Prelude.Types.Right', V25} end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-2959'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Core.CompileExpr.CDelay', E0, E1} -> (fun (V10, V11) -> ('un--eval'([], V1, V8, V7, V6, {'Idris.Compiler.Inline.Nil'}, V4, V11)) end(E0, E1)); _ -> fun (V12) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CForce', V3, V9}))} end end.
'case--eval-2721'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of 0 -> fun (V13) -> begin (V14 = (('un--eval'(V2, V1, V10, V9, V8, V7, [], V4))(V13))), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> (('un--eval'([V0 | V2], V1, V10, V9, V8, {'Idris.Compiler.Inline.::', V16, V7}, V6, V3))(V13)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V17) -> begin (V18 = ('un--genName'(V9, <<"letv"/utf8>>, V17))), case V18 of {'Idris.Prelude.Types.Left', E2} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V20) -> begin (V21 = (('un--eval'([V0 | V2], V1, V10, V9, V8, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V5, V20}, V7}, V6, V3))(V17))), case V21 of {'Idris.Prelude.Types.Left', E4} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V23) -> begin (V24 = (('un--eval'(V2, V1, V10, V9, V8, V7, [], V4))(V17))), case V24 of {'Idris.Prelude.Types.Left', E6} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V5, V0, 0, V26, ('un--refToLocal'('erased', V20, V0, V23))}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in eval-2454'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of 0 -> fun (V17) -> begin (V18 = (('un--tryApply'(V0, V1, V8, V7, [V2 | V6], V4, V5, V14))(V17))), case V18 of {'Idris.Prelude.Types.Left', E0} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V20) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'('erased', fun () -> ('un--unloadApp'('erased', V15, V4, {'Idris.Core.CompileExpr.CRef', V3, V2})) end, V20))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V21) -> {'Idris.Prelude.Types.Right', ('un--unloadApp'('erased', V15, V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in eval-2411'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Prelude.Types.Just', E0} -> (fun (V15) -> begin (V16 = ('un--getArity'(V15))), ('case--case block in case block in case block in eval-2454'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V15, V16, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Context':'dn--un--==_Eq__DefFlag'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Context':'dn--un--/=_Eq__DefFlag'(V19, V20)) end end}, {'Idris.Core.Context.Inline'}, case V12 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V32 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--not'(('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V42, V43)) end end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq__Name'(V44, V45)) end end}, V2, V6)))) end)))) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V46) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in eval-2381'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Just', E0} -> (fun (V13) -> begin (V14 = {'Idris.Prelude.Types.Just', V13}), ('case--case block in case block in eval-2411'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V13, V14, case V13 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V33 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V36) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-2251'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> case V10 of 0 -> case V11 of [E106 | E107] -> (fun (V12, V13) -> case V13 of [E160 | E161] -> (fun (V14, V15) -> case V15 of [E214 | E215] -> (fun (V16, V17) -> case V17 of [E268 | E269] -> (fun (V18, V19) -> case V19 of [E322 | E323] -> (fun (V20, V21) -> fun (V22) -> begin (V23 = ('un--genName'(V7, <<"act"/utf8>>, V22))), case V23 of {'Idris.Prelude.Types.Left', E324} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E324)); {'Idris.Prelude.Types.Right', E325} -> (fun (V25) -> begin (V26 = (('un--eval'([], V1, V8, V7, V6, {'Idris.Compiler.Inline.Nil'}, [], {'Idris.Core.CompileExpr.CApp', V3, V18, [{'Idris.Core.CompileExpr.CRef', V3, V25} | [V20 | []]]}))(V22))), case V26 of {'Idris.Prelude.Types.Left', E326} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E326)); {'Idris.Prelude.Types.Right', E327} -> (fun (V28) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V21, {'Idris.Core.CompileExpr.CLet', V3, V25, 1, {'Idris.Core.CompileExpr.CApp', V3, V16, [V20 | []]}, ('un--refToLocal'('erased', V25, V25, V28))}))} end(E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E325)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E322, E323)); _ -> fun (V29) -> begin (V31 = begin (V30 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V30} end), case V31 of {'Idris.Prelude.Types.Left', E270} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V33) -> begin (V60 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V33 of {'Idris.Core.Context.MkDefs', E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297} -> (fun (V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V34 end(E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V29))), case V60 of {'Idris.Prelude.Types.Left', E298} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E298)); {'Idris.Prelude.Types.Right', E299} -> (fun (V62) -> case V62 of {'Idris.Prelude.Types.Just', E300} -> (fun (V63) -> begin (V64 = {'Idris.Prelude.Types.Just', V63}), (('case--case block in case block in eval-2411'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V33, V63, V64, case V63 of {'Idris.Core.Context.MkGlobalDef', E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321} -> (fun (V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85) -> V83 end(E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V29)) end end(E300)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E268, E269)); _ -> fun (V86) -> begin (V88 = begin (V87 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V87} end), case V88 of {'Idris.Prelude.Types.Left', E216} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E216)); {'Idris.Prelude.Types.Right', E217} -> (fun (V90) -> begin (V117 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V90 of {'Idris.Core.Context.MkDefs', E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243} -> (fun (V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116) -> V91 end(E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V86))), case V117 of {'Idris.Prelude.Types.Left', E244} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E244)); {'Idris.Prelude.Types.Right', E245} -> (fun (V119) -> case V119 of {'Idris.Prelude.Types.Just', E246} -> (fun (V120) -> begin (V121 = {'Idris.Prelude.Types.Just', V120}), (('case--case block in case block in eval-2411'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V90, V120, V121, case V120 of {'Idris.Core.Context.MkGlobalDef', E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267} -> (fun (V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142) -> V140 end(E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V86)) end end(E246)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E214, E215)); _ -> fun (V143) -> begin (V145 = begin (V144 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V144} end), case V145 of {'Idris.Prelude.Types.Left', E162} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V147) -> begin (V174 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V147 of {'Idris.Core.Context.MkDefs', E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189} -> (fun (V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173) -> V148 end(E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V143))), case V174 of {'Idris.Prelude.Types.Left', E190} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V176) -> case V176 of {'Idris.Prelude.Types.Just', E192} -> (fun (V177) -> begin (V178 = {'Idris.Prelude.Types.Just', V177}), (('case--case block in case block in eval-2411'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V147, V177, V178, case V177 of {'Idris.Core.Context.MkGlobalDef', E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213} -> (fun (V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199) -> V197 end(E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V143)) end end(E192)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E160, E161)); _ -> fun (V200) -> begin (V202 = begin (V201 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V201} end), case V202 of {'Idris.Prelude.Types.Left', E108} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V204) -> begin (V231 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V204 of {'Idris.Core.Context.MkDefs', E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135} -> (fun (V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230) -> V205 end(E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V200))), case V231 of {'Idris.Prelude.Types.Left', E136} -> (fun (V232) -> {'Idris.Prelude.Types.Left', V232} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V233) -> case V233 of {'Idris.Prelude.Types.Just', E138} -> (fun (V234) -> begin (V235 = {'Idris.Prelude.Types.Just', V234}), (('case--case block in case block in eval-2411'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V204, V234, V235, case V234 of {'Idris.Core.Context.MkGlobalDef', E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159} -> (fun (V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256) -> V254 end(E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V200)) end end(E138)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E106, E107)); _ -> fun (V257) -> begin (V259 = begin (V258 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V258} end), case V259 of {'Idris.Prelude.Types.Left', E54} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V261) -> begin (V288 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V261 of {'Idris.Core.Context.MkDefs', E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81} -> (fun (V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287) -> V262 end(E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V257))), case V288 of {'Idris.Prelude.Types.Left', E82} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V290) -> case V290 of {'Idris.Prelude.Types.Just', E84} -> (fun (V291) -> begin (V292 = {'Idris.Prelude.Types.Just', V291}), (('case--case block in case block in eval-2411'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V261, V291, V292, case V291 of {'Idris.Core.Context.MkGlobalDef', E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105} -> (fun (V293, V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313) -> V311 end(E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V257)) end end(E84)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V314) -> begin (V316 = begin (V315 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V315} end), case V316 of {'Idris.Prelude.Types.Left', E2} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V318) -> begin (V345 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V318 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V319, V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344) -> V319 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V314))), case V345 of {'Idris.Prelude.Types.Left', E30} -> (fun (V346) -> {'Idris.Prelude.Types.Left', V346} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V347) -> case V347 of {'Idris.Prelude.Types.Just', E32} -> (fun (V348) -> begin (V349 = {'Idris.Prelude.Types.Just', V348}), (('case--case block in case block in eval-2411'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V318, V348, V349, case V348 of {'Idris.Core.Context.MkGlobalDef', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370) -> V368 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V314)) end end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--tryApply-2128'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> case V10 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V11, V12) -> fun (V13) -> begin (V14 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V3)), V2, V8, V7, V6, V11, V12, ('Idris.Idris2.Core.CompileExpr':'un--embed'('erased', 'erased', V1))))(V13))), case V14 of {'Idris.Prelude.Types.Left', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V16}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--evalLocal-2040'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V6 of [] -> fun (V11) -> {'Idris.Prelude.Types.Right', V4} end; _ -> ('un--eval'(V2, V0, V10, V9, V7, V3, V6, ('Idris.Idris2.Core.CompileExpr':'dn--un--weakenNs_Weaken__CExp'('erased', 'erased', ('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'('erased', V2)), V4)))) end.
'case--usedCon-1896'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> ('un--used'('erased', ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V5, V1)), V8, 'erased', V6)).
'case--used-1576'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> 1000; 1 -> V8; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--used-1483'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of 0 -> 1; 1 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--largest-1430'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--largest'('erased', V1, V2, V3)); 1 -> ('un--largest'('erased', V1, V4, V3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--takeFromStack-1317'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative__Maybe'('erased', {'Idris.Builtin.MkPair', {'Idris.Compiler.Inline.::', V2, V8}, V9})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10124-4021--in--un--traverseArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Data.Vect.Nil'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Data.Vect.Nil'}} end end()); {'Idris.Data.Vect.::', E0, E1} -> (fun (V10, V11) -> fun (V12) -> begin (V13 = (('un--fixArityTm'(V7, V5, V10, []))(V12))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V16 = (('nested--10124-4021--in--un--traverseArgs'(V0, V1, V2, V3, V4, V5, 'erased', V7, V11))(V12))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Data.Vect.::', V15, V18}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11181-4795--in--un--nonErased'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V33 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V33 of {'Idris.Prelude.Types.Left', E28} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V35) -> case V35 of {'Idris.Prelude.Types.Just', E30} -> (fun (V36) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq__ZeroOneOmega'(case V36 of {'Idris.Core.Context.MkGlobalDef', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57) -> V44 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Algebra.Semiring':'un--erased'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V58) -> fun (V59) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V58, V59)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V60) -> fun (V61) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V60, V61)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())}))))} end(E30)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 1} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--8082-3461--in--un--matches'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V18 of {'Idris.Prelude.Types.Just', E0} -> (fun (V21) -> case V20 of {'Idris.Prelude.Types.Just', E1} -> (fun (V22) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Int'(V21, V22)) end(E1)); _ -> 1 end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V20 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V17, V19)) end()); _ -> 1 end end()); _ -> 1 end.
'nested--10124-4195--in--un--fixArityConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V11 = (('un--fixArityTm'(V0, V6, V9, []))(V10))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConstAlt', V8, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10124-4137--in--un--fixArityAlt'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V8, V9, V10, V11) -> fun (V12) -> begin (V13 = (('un--fixArityTm'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V10, V0)), V6, V11, []))(V12))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConAlt', V8, V9, V10, V15}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedConst'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V5, V6) -> ('un--used'('erased', V1, V2, 'erased', V6)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedCon'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> ('case--usedCon-1896'('erased', V1, V2, V5, V6, V7, V8, 'erased', ('Idris.Idris2.Core.TT':'dn--un--weakenNs_Weaken__Var'('erased', 'erased', ('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'('erased', V7)), V2)))) end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--used'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.CLocal', E0, E1} -> (fun (V5, V6) -> ('case--used-1483'('erased', V1, 'erased', V6, V5, 'erased', V2, 'erased', ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq__Nat'(V2, V5)))) end(E0, E1)); {'Idris.Core.CompileExpr.CLam', E2, E3, E4} -> (fun (V7, V8, V9) -> ('un--used'('erased', [V8 | V1], (1 + V2), 'erased', V9)) end(E2, E3, E4)); {'Idris.Core.CompileExpr.CLet', E5, E6, E7, E8, E9} -> (fun (V10, V11, V12, V13, V14) -> case V12 of 1 -> begin (V15 = ((('un--used'('erased', V1, V2, 'erased', V13)) + ('un--used'('erased', [V11 | V1], (1 + V2), 'erased', V14))) rem 9223372036854775808)), ('case--used-1576'('erased', V1, V2, V10, V11, V14, V13, 'erased', V15, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord__Int'(V15, 0)))) end; 0 -> ((('un--used'('erased', V1, V2, 'erased', V13)) + ('un--used'('erased', [V11 | V1], (1 + V2), 'erased', V14))) rem 9223372036854775808); _ -> 0 end end(E5, E6, E7, E8, E9)); {'Idris.Core.CompileExpr.CApp', E10, E11, E12} -> (fun (V16, V17, V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', fun (V19) -> fun (V20) -> ((V19 + V20) rem 9223372036854775808) end end, ('un--used'('erased', V1, V2, 'erased', V17)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V21) -> ('un--used'('erased', V1, V2, 'erased', V21)) end, V18)))) end(E10, E11, E12)); {'Idris.Core.CompileExpr.CCon', E13, E14, E15, E16} -> (fun (V22, V23, V24, V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', fun (V26) -> fun (V27) -> ((V26 + V27) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V28) -> ('un--used'('erased', V1, V2, 'erased', V28)) end, V25)))) end(E13, E14, E15, E16)); {'Idris.Core.CompileExpr.COp', E17, E18, E19, E20} -> (fun (V29, V30, V31, V32) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable__(Vect $n)'('erased', 'erased', 'erased', fun (V33) -> fun (V34) -> ((V33 + V34) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor__(Vect $n)'('erased', 'erased', 'erased', fun (V35) -> ('un--used'('erased', V1, V2, 'erased', V35)) end, V32)))) end(E17, E18, E19, E20)); {'Idris.Core.CompileExpr.CExtPrim', E21, E22, E23} -> (fun (V36, V37, V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', fun (V39) -> fun (V40) -> ((V39 + V40) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V41) -> ('un--used'('erased', V1, V2, 'erased', V41)) end, V38)))) end(E21, E22, E23)); {'Idris.Core.CompileExpr.CForce', E24, E25} -> (fun (V42, V43) -> ('un--used'('erased', V1, V2, 'erased', V43)) end(E24, E25)); {'Idris.Core.CompileExpr.CDelay', E26, E27} -> (fun (V44, V45) -> ('un--used'('erased', V1, V2, 'erased', V45)) end(E26, E27)); {'Idris.Core.CompileExpr.CConCase', E28, E29, E30, E31} -> (fun (V46, V47, V48, V49) -> ((('un--used'('erased', V1, V2, 'erased', V47)) + ('un--largest'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkOrd', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Int'(V50, V51)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(V52, V53)) end end}, fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord__Int'(V54, V55)) end end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord__Int'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord__Int'(V58, V59)) end end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord__Int'(V60, V61)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord__Int'(V62, V63)) end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord__Int'(V64, V65)) end end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord__Int'(V66, V67)) end end}, ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> 0 end, fun () -> fun (V68) -> ('un--used'('erased', V1, V2, 'erased', V68)) end end, V49)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V69) -> ('un--usedCon'('erased', V1, V2, 'erased', V69)) end, V48))))) rem 9223372036854775808) end(E28, E29, E30, E31)); {'Idris.Core.CompileExpr.CConstCase', E32, E33, E34, E35} -> (fun (V70, V71, V72, V73) -> ((('un--used'('erased', V1, V2, 'erased', V71)) + ('un--largest'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkOrd', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Int'(V74, V75)) end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__Int'(V76, V77)) end end}, fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord__Int'(V78, V79)) end end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord__Int'(V80, V81)) end end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord__Int'(V82, V83)) end end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord__Int'(V84, V85)) end end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord__Int'(V86, V87)) end end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord__Int'(V88, V89)) end end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord__Int'(V90, V91)) end end}, ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> 0 end, fun () -> fun (V92) -> ('un--used'('erased', V1, V2, 'erased', V92)) end end, V73)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V93) -> ('un--usedConst'('erased', V1, V2, 'erased', V93)) end, V72))))) rem 9223372036854775808) end(E32, E33, E34, E35)); _ -> 0 end.
'un--unloadApp'(V0, V1, V2, V3) -> ('un--unload'('erased', ('Idris.Idris2.Data.List':'un--drop'('erased', V1, V2)), {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V3)), V3, ('Idris.Idris2.Data.List':'un--take'('erased', V1, V2))})).
'un--unload'(V0, V1, V2) -> case V1 of [] -> V2; [E0 | E1] -> (fun (V3, V4) -> ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V2)), V2, [V3 | []]})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--tryApply'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V8, V9) -> ('case--tryApply-2128'(V8, V9, V1, V0, V6, V5, V4, V3, V2, ('un--takeFromStack'('erased', 'erased', V6, V5, V8)))) end(E0, E1)); _ -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--takeFromStack'(V0, V1, V2, V3, V4) -> case V3 of [E0 | E1] -> (fun (V5, V6) -> case V4 of [E2 | E3] -> (fun (V7, V8) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad__Maybe'('erased', 'erased', ('un--takeFromStack'('erased', 'erased', V2, V6, V8)), fun (V9) -> case V9 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V10, V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative__Maybe'('erased', {'Idris.Builtin.MkPair', {'Idris.Compiler.Inline.::', V5, V10}, V11})) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E2, E3)); _ -> case V4 of [] -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative__Maybe'('erased', {'Idris.Builtin.MkPair', V2, V3})); _ -> case V3 of [] -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> case V4 of [] -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative__Maybe'('erased', {'Idris.Builtin.MkPair', V2, V3})); _ -> case V3 of [] -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--refToLocal'(V0, V1, V2, V3) -> ('Idris.Idris2.Core.CompileExpr':'un--refsToLocals'('erased', 'erased', {'Idris.Core.TT.Bounds.Add', V2, V1, {'Idris.Core.TT.Bounds.None'}}, V3)).
'un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of {'Idris.Core.CompileExpr.CPrimVal', E0, E1} -> (fun (V10, V11) -> case V8 of [] -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V15) -> case V15 of {'Idris.Prelude.Types.Left', E3} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V13)), V14)) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E5 | E6] -> (fun (V18, V19) -> case V18 of {'Idris.Core.CompileExpr.MkConstAlt', E7, E8} -> (fun (V20, V21) -> ('case--pickConstAlt-3728'(V2, V11, V10, V1, V0, V21, V20, V19, V9, V6, V5, V4, V3, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V11, V20)))) end(E7, E8)); _ -> fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E5, E6)); _ -> fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E0, E1)); _ -> fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of {'Idris.Core.CompileExpr.CCon', E0, E1, E2, E3} -> (fun (V10, V11, V12, V13) -> case V8 of [] -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); {'Idris.Prelude.Types.Just', E4} -> (fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V17) -> case V17 of {'Idris.Prelude.Types.Left', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V19}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V15)), V16)) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E7 | E8] -> (fun (V20, V21) -> case V20 of {'Idris.Core.CompileExpr.MkConAlt', E9, E10, E11, E12} -> (fun (V22, V23, V24, V25) -> ('case--pickAlt-3498'(V1, V13, V12, V11, V10, V24, V0, V25, V23, V22, V21, V9, V6, V5, V4, V3, V2, ('nested--8082-3461--in--un--matches'(V1, V13, V12, V11, V10, V24, V0, V25, V23, V22, V21, V9, V6, V5, V4, V3, V2, V11, V12, V22, V23)))) end(E9, E10, E11, E12)); _ -> fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E7, E8)); _ -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E0, E1, E2, E3)); _ -> fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--mkBounds'(V0) -> case V0 of [] -> {'Idris.Core.TT.Bounds.None'}; [E0 | E1] -> (fun (V1, V2) -> {'Idris.Core.TT.Bounds.Add', V1, V1, ('un--mkBounds'(V2))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mergeLambdas'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V2, V3, V4) -> ('case--mergeLambdas-4404'(V3, V0, V4, V2, ('un--getLams'('erased', [], 0, {'Idris.Core.CompileExpr.SubstCEnv.Nil'}, {'Idris.Core.CompileExpr.CLam', V2, V3, V4})))) end(E0, E1, E2)); _ -> {'Idris.Builtin.DPair.MkDPair', V0, V1} end.
'un--mergeLamDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V33 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V33 of {'Idris.Prelude.Types.Left', E28} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V35) -> case V35 of {'Idris.Prelude.Types.Just', E30} -> (fun (V36) -> begin (V37 = {'Idris.Prelude.Types.Just', V36}), (('case--case block in mergeLamDef-4751'(V1, V0, V6, V36, V37, case V36 of {'Idris.Core.Context.MkGlobalDef', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58) -> V56 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E30)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--mergeLam'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V2, V3) -> ('case--mergeLam-4559'(V2, V3, V0, ('un--mergeLambdas'(V2, V3)))) end(E0, E1)); _ -> fun (V4) -> {'Idris.Prelude.Types.Right', V1} end end.
'un--largest'(V0, V1, V2, V3) -> case V3 of [] -> V2; [E0 | E1] -> (fun (V4, V5) -> ('case--largest-1430'('erased', V1, V4, V5, V2, case V1 of {'Idris.Prelude.EqOrd.dn--un--__mkOrd', E2, E3, E4, E5, E6, E7, E8, E9} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13) -> ((V9(V4))(V2)) end(E2, E3, E4, E5, E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--inlineDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V33 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V33 of {'Idris.Prelude.Types.Left', E28} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V35) -> case V35 of {'Idris.Prelude.Types.Just', E30} -> (fun (V36) -> begin (V37 = {'Idris.Prelude.Types.Just', V36}), (('case--case block in inlineDef-4605'(V1, V0, V6, V36, V37, case V36 of {'Idris.Core.Context.MkGlobalDef', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58) -> V56 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E30)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inline'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V3, V4) -> fun (V5) -> begin (V6 = ('un--doEval'(V3, V0, V1, V4, V5))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V3, V8}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> fun (V9) -> {'Idris.Prelude.Types.Right', V2} end end.
'un--getNewArgs'(V0, V1, V2) -> case V1 of [] -> case V2 of {'Idris.Core.CompileExpr.SubstCEnv.Nil'} -> (fun () -> [] end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E0 | E1] -> (fun (V3, V4) -> case V2 of {'Idris.Core.CompileExpr.SubstCEnv.::', E2, E3} -> (fun (V5, V6) -> case V5 of {'Idris.Core.CompileExpr.CRef', E4, E5} -> (fun (V7, V8) -> [V8 | ('un--getNewArgs'('erased', V4, V6))] end(E4, E5)); _ -> [V3 | ('un--getNewArgs'('erased', V4, V6))] end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getLams'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V5, V6, V7) -> ('un--getLams'('erased', [V6 | V1], ((V2 + 1) rem 9223372036854775808), {'Idris.Core.CompileExpr.SubstCEnv.::', {'Idris.Core.CompileExpr.CRef', V5, {'Idris.Core.Name.MN', <<"ext"/utf8>>, V2}}, V3}, V7)) end(E0, E1, E2)); _ -> {'Idris.Builtin.DPair.MkDPair', V1, {'Idris.Builtin.MkPair', V3, V4}} end.
'un--getArity'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V1)) end(E0, E1)); {'Idris.Core.CompileExpr.MkCon', E2, E3, E4} -> (fun (V3, V4, V5) -> V4 end(E2, E3, E4)); {'Idris.Core.CompileExpr.MkForeign', E5, E6, E7} -> (fun (V6, V7, V8) -> ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V7)) end(E5, E6, E7)); {'Idris.Core.CompileExpr.MkError', E8} -> (fun (V9) -> 0 end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--genName'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V8 = begin (V7 = ('erlang':'put'(V0, ((V6 + 1) rem 9223372036854775808)))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Name.MN', V1, V6}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--fixArityTm'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.CRef', E0, E1} -> (fun (V4, V5) -> fun (V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V5, case V10 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V11 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6))), case V37 of {'Idris.Prelude.Types.Left', E30} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E32} -> (fun (V40) -> begin (V41 = {'Idris.Prelude.Types.Just', V40}), (('case--case block in fixArityTm-3852'(V0, V5, V4, V3, V1, V10, V40, V41, case V40 of {'Idris.Core.Context.MkGlobalDef', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62) -> V60 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6)) end end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V3, {'Idris.Core.CompileExpr.CRef', V4, V5}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.Core.CompileExpr.CLam', E54, E55, E56} -> (fun (V63, V64, V65) -> fun (V66) -> begin (V67 = (('un--fixArityTm'([V64 | V0], V1, V65, []))(V66))), case V67 of {'Idris.Prelude.Types.Left', E57} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V69) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CLam', V63, V64, V69}, V3))} end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E54, E55, E56)); {'Idris.Core.CompileExpr.CLet', E59, E60, E61, E62, E63} -> (fun (V70, V71, V72, V73, V74) -> fun (V75) -> begin (V76 = (('un--fixArityTm'(V0, V1, V73, []))(V75))), case V76 of {'Idris.Prelude.Types.Left', E64} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V78) -> begin (V79 = (('un--fixArityTm'([V71 | V0], V1, V74, []))(V75))), case V79 of {'Idris.Prelude.Types.Left', E66} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V81) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CLet', V70, V71, V72, V78, V81}, V3))} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E59, E60, E61, E62, E63)); {'Idris.Core.CompileExpr.CApp', E68, E69, E70} -> (fun (V82, V83, V84) -> fun (V85) -> begin (V87 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V86) -> ('un--fixArityTm'(V0, V1, V86, [])) end, V84, []))(V85))), case V87 of {'Idris.Prelude.Types.Left', E71} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V89) -> (('un--fixArityTm'(V0, V1, V83, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V89, V3))))(V85)) end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E68, E69, E70)); {'Idris.Core.CompileExpr.CCon', E73, E74, E75, E76} -> (fun (V90, V91, V92, V93) -> case V3 of [] -> fun (V94) -> begin (V96 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V95) -> ('un--fixArityTm'(V0, V1, V95, [])) end, V93, []))(V94))), case V96 of {'Idris.Prelude.Types.Left', E77} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V98) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V90, V91, V92, V98}} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V3 of [] -> fun (V99) -> {'Idris.Prelude.Types.Right', V2} end; _ -> fun (V100) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E73, E74, E75, E76)); {'Idris.Core.CompileExpr.COp', E79, E80, E81, E82} -> (fun (V101, V102, V103, V104) -> case V3 of [] -> fun (V105) -> begin (V106 = (('nested--10124-4021--in--un--traverseArgs'(V0, V101, V104, V103, V102, V1, 'erased', V0, V104))(V105))), case V106 of {'Idris.Prelude.Types.Left', E83} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V108) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.COp', V101, V102, V103, V108}} end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V3 of [] -> fun (V109) -> {'Idris.Prelude.Types.Right', V2} end; _ -> fun (V110) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E79, E80, E81, E82)); {'Idris.Core.CompileExpr.CExtPrim', E85, E86, E87} -> (fun (V111, V112, V113) -> case V3 of [] -> fun (V114) -> begin (V116 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V115) -> ('un--fixArityTm'(V0, V1, V115, [])) end, V113, []))(V114))), case V116 of {'Idris.Prelude.Types.Left', E88} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V118) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CExtPrim', V111, V112, V118}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V3 of [] -> fun (V119) -> {'Idris.Prelude.Types.Right', V2} end; _ -> fun (V120) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E85, E86, E87)); {'Idris.Core.CompileExpr.CForce', E90, E91} -> (fun (V121, V122) -> fun (V123) -> begin (V124 = (('un--fixArityTm'(V0, V1, V122, []))(V123))), case V124 of {'Idris.Prelude.Types.Left', E92} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V126) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CForce', V121, V126}, V3))} end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E90, E91)); {'Idris.Core.CompileExpr.CDelay', E94, E95} -> (fun (V127, V128) -> fun (V129) -> begin (V130 = (('un--fixArityTm'(V0, V1, V128, []))(V129))), case V130 of {'Idris.Prelude.Types.Left', E96} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V132) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CDelay', V127, V132}, V3))} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E94, E95)); {'Idris.Core.CompileExpr.CConCase', E98, E99, E100, E101} -> (fun (V133, V134, V135, V136) -> fun (V137) -> begin (V138 = (('un--fixArityTm'(V0, V1, V134, []))(V137))), case V138 of {'Idris.Prelude.Types.Left', E102} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V140) -> begin (V142 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V141) -> ('nested--10124-4137--in--un--fixArityAlt'(V0, V136, V135, V134, V133, V3, V1, V141)) end, V135, []))(V137))), case V142 of {'Idris.Prelude.Types.Left', E104} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V144) -> begin (V149 = case V136 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E106} -> (fun (V145) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V146) -> case V146 of {'Idris.Prelude.Types.Left', E107} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V148) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V148}} end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--fixArityTm'(V0, V1, V145, [])), V137)) end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V149 of {'Idris.Prelude.Types.Left', E109} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V151) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CConCase', V133, V140, V144, V151}, V3))} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E98, E99, E100, E101)); {'Idris.Core.CompileExpr.CConstCase', E111, E112, E113, E114} -> (fun (V152, V153, V154, V155) -> fun (V156) -> begin (V157 = (('un--fixArityTm'(V0, V1, V153, []))(V156))), case V157 of {'Idris.Prelude.Types.Left', E115} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V159) -> begin (V161 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V160) -> ('nested--10124-4195--in--un--fixArityConstAlt'(V0, V155, V154, V153, V152, V3, V1, V160)) end, V154, []))(V156))), case V161 of {'Idris.Prelude.Types.Left', E117} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V163) -> begin (V168 = case V155 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E119} -> (fun (V164) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V165) -> case V165 of {'Idris.Prelude.Types.Left', E120} -> (fun (V166) -> {'Idris.Prelude.Types.Left', V166} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V167) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V167}} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--fixArityTm'(V0, V1, V164, [])), V156)) end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V168 of {'Idris.Prelude.Types.Left', E122} -> (fun (V169) -> {'Idris.Prelude.Types.Left', V169} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V170) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CConstCase', V152, V159, V163, V170}, V3))} end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E111, E112, E113, E114)); _ -> case V3 of [] -> fun (V171) -> {'Idris.Prelude.Types.Right', V2} end; _ -> fun (V172) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end.
'un--fixArityExp'(V0, V1, V2) -> ('un--fixArityTm'(V0, V1, V2, [])).
'un--fixArityDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V33 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V33 of {'Idris.Prelude.Types.Left', E28} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V35) -> case V35 of {'Idris.Prelude.Types.Just', E30} -> (fun (V36) -> begin (V37 = {'Idris.Prelude.Types.Just', V36}), (('case--case block in fixArityDef-4678'(V1, V0, V6, V36, V37, case V36 of {'Idris.Core.Context.MkGlobalDef', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58) -> V56 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E30)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--fixArity'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V2, V3) -> fun (V4) -> begin (V5 = (('un--fixArityTm'(V2, V0, V3, []))(V4))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V2, V7}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.Core.CompileExpr.MkError', E4} -> (fun (V8) -> fun (V9) -> begin (V10 = (('un--fixArityTm'([], V0, V8, []))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', V12}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4)); _ -> fun (V13) -> {'Idris.Prelude.Types.Right', V1} end end.
'un--extendLoc'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.TT.Bounds.None'}, V4}} end; [E0 | E1] -> (fun (V7, V8) -> fun (V9) -> begin (V10 = ('un--genName'(V2, <<"cv"/utf8>>, V9))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V13 = (('un--extendLoc'('erased', 'erased', V2, V3, V4, V8))(V9))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> case V15 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V16, V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.TT.Bounds.Add', V7, V12, V16}, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V3, V12}, V17}}} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--extend'(V0, V1, V2, V3, V4, V5) -> case V3 of [] -> case V4 of [] -> case V5 of {'Idris.Data.LengthMatch.NilMatch'} -> (fun () -> V2 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E0 | E1] -> (fun (V6, V7) -> case V4 of [E2 | E3] -> (fun (V8, V9) -> case V5 of {'Idris.Data.LengthMatch.ConsMatch', E4} -> (fun (V10) -> {'Idris.Compiler.Inline.::', V6, ('un--extend'('erased', 'erased', V2, V7, V9, V10))} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V1 of [] -> fun (V11) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V7, {'Idris.Core.CompileExpr.CLocal', V9, V5}))} end; [E0 | E1] -> (fun (V12, V13) -> case V8 of {'Idris.Compiler.Inline.::', E2, E3} -> (fun (V14, V15) -> case V9 of 0 -> case V7 of [] -> fun (V16) -> {'Idris.Prelude.Types.Right', V14} end; _ -> ('un--eval'(V13, V2, V3, V4, V6, V15, V7, ('Idris.Idris2.Core.CompileExpr':'dn--un--weakenNs_Weaken__CExp'('erased', 'erased', ('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'('erased', V13)), V14)))) end; _ -> begin (V17 = (V9 - 1)), ('un--evalLocal'('erased', V13, V2, V3, V4, V5, V6, V7, V15, V17, 'erased')) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V8, V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V11) -> case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConstAlt', V8, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V9)), V10)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V9, V10, V11, V12) -> fun (V13) -> begin (V14 = (('un--extendLoc'('erased', 'erased', V3, V4, V6, V11))(V13))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V17, V18) -> begin (V19 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V11, V0)), V1, V2, V3, V5, V18, V7, V12))(V13))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConAlt', V9, V10, V11, ('Idris.Idris2.Core.CompileExpr':'un--refsToLocals'('erased', 'erased', V17, V21))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--eval'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.CLocal', E252, E253} -> (fun (V8, V9) -> ('un--evalLocal'('erased', V0, V1, V2, V3, V9, V4, V6, V5, V8, 'erased')) end(E252, E253)); {'Idris.Core.CompileExpr.CRef', E254, E255} -> (fun (V10, V11) -> ('case--eval-2251'(V0, V1, V11, V10, V6, V5, V4, V3, V2, {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V11, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', <<"io_bind"/utf8>>}})), V6})) end(E254, E255)); _ -> case V6 of [] -> case V7 of {'Idris.Core.CompileExpr.CLam', E160, E161, E162} -> (fun (V12, V13, V14) -> fun (V15) -> begin (V16 = ('un--genName'(V3, <<"lamv"/utf8>>, V15))), case V16 of {'Idris.Prelude.Types.Left', E163} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V18) -> begin (V19 = (('un--eval'([V13 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V12, V18}, V5}, [], V14))(V15))), case V19 of {'Idris.Prelude.Types.Left', E165} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLam', V12, V13, ('un--refToLocal'('erased', V18, V13, V21))}} end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E160, E161, E162)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E80, E81, E82, E83, E84} -> (fun (V22, V23, V24, V25, V26) -> case V24 of 1 -> fun (V27) -> begin (V28 = ('un--genName'(V3, <<"letv"/utf8>>, V27))), case V28 of {'Idris.Prelude.Types.Left', E85} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V30) -> begin (V31 = (('un--eval'([V23 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V22, V30}, V5}, [], V26))(V27))), case V31 of {'Idris.Prelude.Types.Left', E87} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V33) -> begin (V34 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V25))(V27))), case V34 of {'Idris.Prelude.Types.Left', E89} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V36) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CLet', V22, V23, 1, V36, ('un--refToLocal'('erased', V30, V23, V33))}))} end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> begin (V37 = ('un--used'('erased', [V23 | ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1))], 0, 'erased', V26))), ('case--eval-2721'(V23, V1, V0, V26, V25, V22, V6, V5, V4, V3, V2, V37, ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord__Int'(V37, 1)))) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E80, E81, E82, E83, E84)); {'Idris.Core.CompileExpr.CApp', E91, E92, E93} -> (fun (V38, V39, V40) -> fun (V41) -> begin (V43 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V42) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V42)) end, V40, []))(V41))), case V43 of {'Idris.Prelude.Types.Left', E94} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V45) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V45, V6)), V39))(V41)) end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E91, E92, E93)); {'Idris.Core.CompileExpr.CCon', E96, E97, E98, E99} -> (fun (V46, V47, V48, V49) -> fun (V50) -> begin (V52 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V51) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V51)) end, V49, []))(V50))), case V52 of {'Idris.Prelude.Types.Left', E100} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V54) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCon', V46, V47, V48, V54}))} end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E96, E97, E98, E99)); {'Idris.Core.CompileExpr.COp', E102, E103, E104, E105} -> (fun (V55, V56, V57, V58) -> fun (V59) -> begin (V61 = (('Idris.Idris2.Core.Core':'un--traverseVect'('erased', 'erased', 'erased', fun (V60) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V60)) end, V58))(V59))), case V61 of {'Idris.Prelude.Types.Left', E106} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V63) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.COp', V55, V56, V57, V63}))} end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E102, E103, E104, E105)); {'Idris.Core.CompileExpr.CExtPrim', E108, E109, E110} -> (fun (V64, V65, V66) -> fun (V67) -> begin (V69 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V68) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V68)) end, V66, []))(V67))), case V69 of {'Idris.Prelude.Types.Left', E111} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V71) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CExtPrim', V64, V65, V71}))} end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E108, E109, E110)); {'Idris.Core.CompileExpr.CForce', E113, E114} -> (fun (V72, V73) -> fun (V74) -> begin (V75 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V73))(V74))), case V75 of {'Idris.Prelude.Types.Left', E115} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V77) -> case V77 of {'Idris.Core.CompileExpr.CDelay', E117, E118} -> (fun (V78, V79) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V79))(V74)) end(E117, E118)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CForce', V72, V77}))} end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E113, E114)); {'Idris.Core.CompileExpr.CDelay', E119, E120} -> (fun (V80, V81) -> fun (V82) -> begin (V83 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V81))(V82))), case V83 of {'Idris.Prelude.Types.Left', E121} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V85) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CDelay', V80, V85}))} end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E119, E120)); {'Idris.Core.CompileExpr.CConCase', E123, E124, E125, E126} -> (fun (V86, V87, V88, V89) -> fun (V90) -> begin (V91 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V87))(V90))), case V91 of {'Idris.Prelude.Types.Left', E127} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V93) -> begin (V94 = (('un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V93, V88, V89))(V90))), case V94 of {'Idris.Prelude.Types.Left', E129} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V96) -> case V96 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V101 = case V89 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E131} -> (fun (V97) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V98) -> case V98 of {'Idris.Prelude.Types.Left', E132} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V100) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V100}} end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V97)), V90)) end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V101 of {'Idris.Prelude.Types.Left', E134} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V103) -> begin (V105 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V104) -> ('un--evalAlt'(V0, V1, V2, V3, V86, V4, V5, V6, V104)) end, V88, []))(V90))), case V105 of {'Idris.Prelude.Types.Left', E136} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V107) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConCase', V86, V93, V107, V103}} end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E138} -> (fun (V108) -> {'Idris.Prelude.Types.Right', V108} end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E123, E124, E125, E126)); {'Idris.Core.CompileExpr.CConstCase', E139, E140, E141, E142} -> (fun (V109, V110, V111, V112) -> fun (V113) -> begin (V114 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V110))(V113))), case V114 of {'Idris.Prelude.Types.Left', E143} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V116) -> begin (V117 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V116, V111, V112))(V113))), case V117 of {'Idris.Prelude.Types.Left', E145} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V119) -> case V119 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V124 = case V112 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E147} -> (fun (V120) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V121) -> case V121 of {'Idris.Prelude.Types.Left', E148} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V123) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V123}} end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V120)), V113)) end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V124 of {'Idris.Prelude.Types.Left', E150} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V126) -> begin (V128 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V127) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V127)) end, V111, []))(V113))), case V128 of {'Idris.Prelude.Types.Left', E152} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V130) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V109, V116, V130, V126}} end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E154} -> (fun (V131) -> {'Idris.Prelude.Types.Right', V131} end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E139, E140, E141, E142)); {'Idris.Core.CompileExpr.CPrimVal', E155, E156} -> (fun (V132, V133) -> fun (V134) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CPrimVal', V132, V133}))} end end(E155, E156)); {'Idris.Core.CompileExpr.CErased', E157} -> (fun (V135) -> fun (V136) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CErased', V135}))} end end(E157)); {'Idris.Core.CompileExpr.CCrash', E158, E159} -> (fun (V137, V138) -> fun (V139) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCrash', V137, V138}))} end end(E158, E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; [E167 | E168] -> (fun (V140, V141) -> case V7 of {'Idris.Core.CompileExpr.CLam', E249, E250, E251} -> (fun (V142, V143, V144) -> ('un--eval'([V143 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', V140, V5}, V141, V144)) end(E249, E250, E251)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E169, E170, E171, E172, E173} -> (fun (V145, V146, V147, V148, V149) -> case V147 of 1 -> fun (V150) -> begin (V151 = ('un--genName'(V3, <<"letv"/utf8>>, V150))), case V151 of {'Idris.Prelude.Types.Left', E174} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V153) -> begin (V154 = (('un--eval'([V146 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V145, V153}, V5}, [], V149))(V150))), case V154 of {'Idris.Prelude.Types.Left', E176} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V156) -> begin (V157 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V148))(V150))), case V157 of {'Idris.Prelude.Types.Left', E178} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V159) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CLet', V145, V146, 1, V159, ('un--refToLocal'('erased', V153, V146, V156))}))} end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> begin (V160 = ('un--used'('erased', [V146 | ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1))], 0, 'erased', V149))), ('case--eval-2721'(V146, V1, V0, V149, V148, V145, V6, V5, V4, V3, V2, V160, ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord__Int'(V160, 1)))) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E169, E170, E171, E172, E173)); {'Idris.Core.CompileExpr.CApp', E180, E181, E182} -> (fun (V161, V162, V163) -> fun (V164) -> begin (V166 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V165) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V165)) end, V163, []))(V164))), case V166 of {'Idris.Prelude.Types.Left', E183} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E183)); {'Idris.Prelude.Types.Right', E184} -> (fun (V168) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V168, V6)), V162))(V164)) end(E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E180, E181, E182)); {'Idris.Core.CompileExpr.CCon', E185, E186, E187, E188} -> (fun (V169, V170, V171, V172) -> fun (V173) -> begin (V175 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V174) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V174)) end, V172, []))(V173))), case V175 of {'Idris.Prelude.Types.Left', E189} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V177) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCon', V169, V170, V171, V177}))} end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E185, E186, E187, E188)); {'Idris.Core.CompileExpr.COp', E191, E192, E193, E194} -> (fun (V178, V179, V180, V181) -> fun (V182) -> begin (V184 = (('Idris.Idris2.Core.Core':'un--traverseVect'('erased', 'erased', 'erased', fun (V183) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V183)) end, V181))(V182))), case V184 of {'Idris.Prelude.Types.Left', E195} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V186) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.COp', V178, V179, V180, V186}))} end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E191, E192, E193, E194)); {'Idris.Core.CompileExpr.CExtPrim', E197, E198, E199} -> (fun (V187, V188, V189) -> fun (V190) -> begin (V192 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V191) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V191)) end, V189, []))(V190))), case V192 of {'Idris.Prelude.Types.Left', E200} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V194) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CExtPrim', V187, V188, V194}))} end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E197, E198, E199)); {'Idris.Core.CompileExpr.CForce', E202, E203} -> (fun (V195, V196) -> fun (V197) -> begin (V198 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V196))(V197))), case V198 of {'Idris.Prelude.Types.Left', E204} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V200) -> case V200 of {'Idris.Core.CompileExpr.CDelay', E206, E207} -> (fun (V201, V202) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V202))(V197)) end(E206, E207)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CForce', V195, V200}))} end end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E202, E203)); {'Idris.Core.CompileExpr.CDelay', E208, E209} -> (fun (V203, V204) -> fun (V205) -> begin (V206 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V204))(V205))), case V206 of {'Idris.Prelude.Types.Left', E210} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E210)); {'Idris.Prelude.Types.Right', E211} -> (fun (V208) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CDelay', V203, V208}))} end(E211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E208, E209)); {'Idris.Core.CompileExpr.CConCase', E212, E213, E214, E215} -> (fun (V209, V210, V211, V212) -> fun (V213) -> begin (V214 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V210))(V213))), case V214 of {'Idris.Prelude.Types.Left', E216} -> (fun (V215) -> {'Idris.Prelude.Types.Left', V215} end(E216)); {'Idris.Prelude.Types.Right', E217} -> (fun (V216) -> begin (V217 = (('un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V216, V211, V212))(V213))), case V217 of {'Idris.Prelude.Types.Left', E218} -> (fun (V218) -> {'Idris.Prelude.Types.Left', V218} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V219) -> case V219 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V224 = case V212 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E220} -> (fun (V220) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V221) -> case V221 of {'Idris.Prelude.Types.Left', E221} -> (fun (V222) -> {'Idris.Prelude.Types.Left', V222} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V223) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V223}} end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V220)), V213)) end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V224 of {'Idris.Prelude.Types.Left', E223} -> (fun (V225) -> {'Idris.Prelude.Types.Left', V225} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V226) -> begin (V228 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V227) -> ('un--evalAlt'(V0, V1, V2, V3, V209, V4, V5, V6, V227)) end, V211, []))(V213))), case V228 of {'Idris.Prelude.Types.Left', E225} -> (fun (V229) -> {'Idris.Prelude.Types.Left', V229} end(E225)); {'Idris.Prelude.Types.Right', E226} -> (fun (V230) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConCase', V209, V216, V230, V226}} end(E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E227} -> (fun (V231) -> {'Idris.Prelude.Types.Right', V231} end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E212, E213, E214, E215)); {'Idris.Core.CompileExpr.CConstCase', E228, E229, E230, E231} -> (fun (V232, V233, V234, V235) -> fun (V236) -> begin (V237 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V233))(V236))), case V237 of {'Idris.Prelude.Types.Left', E232} -> (fun (V238) -> {'Idris.Prelude.Types.Left', V238} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V239) -> begin (V240 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V239, V234, V235))(V236))), case V240 of {'Idris.Prelude.Types.Left', E234} -> (fun (V241) -> {'Idris.Prelude.Types.Left', V241} end(E234)); {'Idris.Prelude.Types.Right', E235} -> (fun (V242) -> case V242 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V247 = case V235 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E236} -> (fun (V243) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V244) -> case V244 of {'Idris.Prelude.Types.Left', E237} -> (fun (V245) -> {'Idris.Prelude.Types.Left', V245} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V246) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V246}} end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V243)), V236)) end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V247 of {'Idris.Prelude.Types.Left', E239} -> (fun (V248) -> {'Idris.Prelude.Types.Left', V248} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V249) -> begin (V251 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V250) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V250)) end, V234, []))(V236))), case V251 of {'Idris.Prelude.Types.Left', E241} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V253) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V232, V239, V253, V249}} end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E243} -> (fun (V254) -> {'Idris.Prelude.Types.Right', V254} end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E228, E229, E230, E231)); {'Idris.Core.CompileExpr.CPrimVal', E244, E245} -> (fun (V255, V256) -> fun (V257) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CPrimVal', V255, V256}))} end end(E244, E245)); {'Idris.Core.CompileExpr.CErased', E246} -> (fun (V258) -> fun (V259) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CErased', V258}))} end end(E246)); {'Idris.Core.CompileExpr.CCrash', E247, E248} -> (fun (V260, V261) -> fun (V262) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCrash', V260, V261}))} end end(E247, E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167, E168)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E0, E1, E2, E3, E4} -> (fun (V263, V264, V265, V266, V267) -> case V265 of 1 -> fun (V268) -> begin (V269 = ('un--genName'(V3, <<"letv"/utf8>>, V268))), case V269 of {'Idris.Prelude.Types.Left', E5} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V271) -> begin (V272 = (('un--eval'([V264 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V263, V271}, V5}, [], V267))(V268))), case V272 of {'Idris.Prelude.Types.Left', E7} -> (fun (V273) -> {'Idris.Prelude.Types.Left', V273} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V274) -> begin (V275 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V266))(V268))), case V275 of {'Idris.Prelude.Types.Left', E9} -> (fun (V276) -> {'Idris.Prelude.Types.Left', V276} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V277) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CLet', V263, V264, 1, V277, ('un--refToLocal'('erased', V271, V264, V274))}))} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> begin (V278 = ('un--used'('erased', [V264 | ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1))], 0, 'erased', V267))), ('case--eval-2721'(V264, V1, V0, V267, V266, V263, V6, V5, V4, V3, V2, V278, ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord__Int'(V278, 1)))) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3, E4)); {'Idris.Core.CompileExpr.CApp', E11, E12, E13} -> (fun (V279, V280, V281) -> fun (V282) -> begin (V284 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V283) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V283)) end, V281, []))(V282))), case V284 of {'Idris.Prelude.Types.Left', E14} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V286) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V286, V6)), V280))(V282)) end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E11, E12, E13)); {'Idris.Core.CompileExpr.CCon', E16, E17, E18, E19} -> (fun (V287, V288, V289, V290) -> fun (V291) -> begin (V293 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V292) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V292)) end, V290, []))(V291))), case V293 of {'Idris.Prelude.Types.Left', E20} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V295) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCon', V287, V288, V289, V295}))} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E16, E17, E18, E19)); {'Idris.Core.CompileExpr.COp', E22, E23, E24, E25} -> (fun (V296, V297, V298, V299) -> fun (V300) -> begin (V302 = (('Idris.Idris2.Core.Core':'un--traverseVect'('erased', 'erased', 'erased', fun (V301) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V301)) end, V299))(V300))), case V302 of {'Idris.Prelude.Types.Left', E26} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V304) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.COp', V296, V297, V298, V304}))} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E22, E23, E24, E25)); {'Idris.Core.CompileExpr.CExtPrim', E28, E29, E30} -> (fun (V305, V306, V307) -> fun (V308) -> begin (V310 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V309) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V309)) end, V307, []))(V308))), case V310 of {'Idris.Prelude.Types.Left', E31} -> (fun (V311) -> {'Idris.Prelude.Types.Left', V311} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V312) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CExtPrim', V305, V306, V312}))} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E28, E29, E30)); {'Idris.Core.CompileExpr.CForce', E33, E34} -> (fun (V313, V314) -> fun (V315) -> begin (V316 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V314))(V315))), case V316 of {'Idris.Prelude.Types.Left', E35} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V318) -> case V318 of {'Idris.Core.CompileExpr.CDelay', E37, E38} -> (fun (V319, V320) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V320))(V315)) end(E37, E38)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CForce', V313, V318}))} end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34)); {'Idris.Core.CompileExpr.CDelay', E39, E40} -> (fun (V321, V322) -> fun (V323) -> begin (V324 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V322))(V323))), case V324 of {'Idris.Prelude.Types.Left', E41} -> (fun (V325) -> {'Idris.Prelude.Types.Left', V325} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V326) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CDelay', V321, V326}))} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E39, E40)); {'Idris.Core.CompileExpr.CConCase', E43, E44, E45, E46} -> (fun (V327, V328, V329, V330) -> fun (V331) -> begin (V332 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V328))(V331))), case V332 of {'Idris.Prelude.Types.Left', E47} -> (fun (V333) -> {'Idris.Prelude.Types.Left', V333} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V334) -> begin (V335 = (('un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V334, V329, V330))(V331))), case V335 of {'Idris.Prelude.Types.Left', E49} -> (fun (V336) -> {'Idris.Prelude.Types.Left', V336} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V337) -> case V337 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V342 = case V330 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E51} -> (fun (V338) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V339) -> case V339 of {'Idris.Prelude.Types.Left', E52} -> (fun (V340) -> {'Idris.Prelude.Types.Left', V340} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V341) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V341}} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V338)), V331)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V342 of {'Idris.Prelude.Types.Left', E54} -> (fun (V343) -> {'Idris.Prelude.Types.Left', V343} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V344) -> begin (V346 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V345) -> ('un--evalAlt'(V0, V1, V2, V3, V327, V4, V5, V6, V345)) end, V329, []))(V331))), case V346 of {'Idris.Prelude.Types.Left', E56} -> (fun (V347) -> {'Idris.Prelude.Types.Left', V347} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V348) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConCase', V327, V334, V348, V344}} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E58} -> (fun (V349) -> {'Idris.Prelude.Types.Right', V349} end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43, E44, E45, E46)); {'Idris.Core.CompileExpr.CConstCase', E59, E60, E61, E62} -> (fun (V350, V351, V352, V353) -> fun (V354) -> begin (V355 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V351))(V354))), case V355 of {'Idris.Prelude.Types.Left', E63} -> (fun (V356) -> {'Idris.Prelude.Types.Left', V356} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V357) -> begin (V358 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V357, V352, V353))(V354))), case V358 of {'Idris.Prelude.Types.Left', E65} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V360) -> case V360 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V365 = case V353 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E67} -> (fun (V361) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V362) -> case V362 of {'Idris.Prelude.Types.Left', E68} -> (fun (V363) -> {'Idris.Prelude.Types.Left', V363} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V364) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V364}} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V361)), V354)) end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V365 of {'Idris.Prelude.Types.Left', E70} -> (fun (V366) -> {'Idris.Prelude.Types.Left', V366} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V367) -> begin (V369 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V368) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V368)) end, V352, []))(V354))), case V369 of {'Idris.Prelude.Types.Left', E72} -> (fun (V370) -> {'Idris.Prelude.Types.Left', V370} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V371) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V350, V357, V371, V367}} end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E74} -> (fun (V372) -> {'Idris.Prelude.Types.Right', V372} end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E59, E60, E61, E62)); {'Idris.Core.CompileExpr.CPrimVal', E75, E76} -> (fun (V373, V374) -> fun (V375) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CPrimVal', V373, V374}))} end end(E75, E76)); {'Idris.Core.CompileExpr.CErased', E77} -> (fun (V376) -> fun (V377) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CErased', V376}))} end end(E77)); {'Idris.Core.CompileExpr.CCrash', E78, E79} -> (fun (V378, V379) -> fun (V380) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCrash', V378, V379}))} end end(E78, E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--doEval'(V0, V1, V2, V3, V4) -> begin (V5 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Compiler.Inline.LVar'}, 0, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"compiler.inline.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V2)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show__(CExp $vars)'(V0, V3)))))) end))(V4))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> begin (V11 = (('un--eval'([], V0, V1, V7, [], {'Idris.Compiler.Inline.Nil'}, [], V3))(V4))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"compiler.inline.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Inlined: "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show__(CExp $vars)'(V0, V13)))) end))(V4))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', V13} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileAndInlineAll'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V32 = ('Idris.Idris2.Data.NameMap':'un--keys'('erased', case V5 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> V27 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V35 = (('Idris.Idris2.Core.Core':'un--filterM'('erased', fun (V33) -> fun (V34) -> ('nested--11181-4795--in--un--nonErased'(V0, V33, V34)) end end, V32))(V1))), case V35 of {'Idris.Prelude.Types.Left', E28} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V37) -> begin (V40 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V38) -> fun (V39) -> ('Idris.Idris2.Compiler.CompileExpr':'un--compileDef'(V0, V38, V39)) end end, V37))(V1))), case V40 of {'Idris.Prelude.Types.Left', E30} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V42) -> begin (V45 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V43) -> fun (V44) -> ('un--inlineDef'(V0, V43, V44)) end end, V37))(V1))), case V45 of {'Idris.Prelude.Types.Left', E32} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V47) -> begin (V50 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V48) -> fun (V49) -> ('un--mergeLamDef'(V0, V48, V49)) end end, V37))(V1))), case V50 of {'Idris.Prelude.Types.Left', E34} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V52) -> begin (V55 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V53) -> fun (V54) -> ('un--fixArityDef'(V0, V53, V54)) end end, V37))(V1))), case V55 of {'Idris.Prelude.Types.Left', E36} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V57) -> begin (V60 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V58) -> fun (V59) -> ('un--inlineDef'(V0, V58, V59)) end end, V37))(V1))), case V60 of {'Idris.Prelude.Types.Left', E38} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V62) -> begin (V65 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V63) -> fun (V64) -> ('un--mergeLamDef'(V0, V63, V64)) end end, V37))(V1))), case V65 of {'Idris.Prelude.Types.Left', E40} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V67) -> (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V68) -> fun (V69) -> ('un--fixArityDef'(V0, V68, V69)) end end, V37))(V1)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--Stack'(V0) -> {'Idris.Prelude.Types.List', {'Idris.Core.CompileExpr.CExp', V0}}.
