-module('Idris.Idris2.Erlang.System.File').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in fileInfo-2736'/9,
  'case--fileInfo-2681'/8,
  'case--case block in writeFile-2435'/7,
  'case--writeFile-2407'/5,
  'case--fGetChar-1933'/5,
  'case--fileModes-1559'/1,
  'nested--3890-2095--in--un--scanBack'/3,
  'nested--4873-3051--in--un--getMs'/2,
  'nested--4873-3050--in--un--getM'/2,
  'dn--un--show_Show__FileError'/1,
  'dn--un--showPrec_Show__FileError'/2,
  'dn--un--__Impl_Show_FileError'/0,
  'un--writeFile'/4,
  'un--unknownError'/0,
  'un--stdout'/0,
  'un--stdin'/0,
  'un--stderr'/0,
  'un--removeFile'/3,
  'un--reason'/1,
  'un--readFile'/3,
  'un--openFile'/4,
  'un--mkMode'/1,
  'un--fileStatusTime'/3,
  'un--fileSize'/3,
  'un--fileModifiedTime'/3,
  'un--fileModes'/1,
  'un--fileInfo'/6,
  'un--fileAccessTime'/3,
  'un--fflush'/3,
  'un--fPutStrLn'/4,
  'un--fPutStr'/4,
  'un--fGetLine'/3,
  'un--fGetChar'/3,
  'un--fEOF'/3,
  'un--error'/1,
  'un--closeFile'/3,
  'un--chmodRaw'/4,
  'un--chmod'/4
]).
'case--case block in fileInfo-2736'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Right', E0} -> (fun (V9) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E7, E8} -> (fun (V10, V11) -> V10 end(E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E4, E5, E6} -> (fun (V12, V13, V14) -> V12 end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E1, E2, E3} -> (fun (V15, V16, V17) -> ((V16('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V18) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V19) -> {'Idris.Prelude.Types.Right', V19} end, V3, V18)) end, V9)))) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E9} -> (fun (V20) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E16, E17} -> (fun (V21, V22) -> V21 end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E13, E14, E15} -> (fun (V23, V24, V25) -> V23 end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E10, E11, E12} -> (fun (V26, V27, V28) -> ((V27('erased'))({'Idris.Prelude.Types.Left', ('un--unknownError'())})) end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileInfo-2681'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Right', E0} -> (fun (V8) -> case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E22, E23} -> (fun (V9, V10) -> V9 end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V11, V12, V13) -> ((((V12('erased'))('erased'))(('Idris.Idris2.Erlang.IO':'un--erlTryCatch'('erased', 'erased', V2, fun (V35) -> ('erlang':'apply'('erlang', 'element', [(('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Nat_Integer'(V4)) + 2) | [V8 | []]])) end))))(fun (V14) -> case V14 of {'Idris.Prelude.Types.Right', E4} -> (fun (V15) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V16, V17) -> V16 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V18, V19, V20) -> V18 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V21, V22, V23) -> ((V22('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V24) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V25) -> {'Idris.Prelude.Types.Right', V25} end, V3, V24)) end, V15)))) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); {'Idris.Prelude.Types.Left', E13} -> (fun (V26) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E20, E21} -> (fun (V27, V28) -> V27 end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E17, E18, E19} -> (fun (V29, V30, V31) -> V29 end(E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E14, E15, E16} -> (fun (V32, V33, V34) -> ((V33('erased'))({'Idris.Prelude.Types.Left', ('un--unknownError'())})) end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E24} -> (fun (V36) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E31, E32} -> (fun (V37, V38) -> V37 end(E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E28, E29, E30} -> (fun (V39, V40, V41) -> V39 end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E25, E26, E27} -> (fun (V42, V43, V44) -> ((V43('erased'))({'Idris.Prelude.Types.Left', V36})) end(E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in writeFile-2435'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Right', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkUnit'} -> (fun () -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E12, E13} -> (fun (V8, V9) -> V8 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V10, V11, V12) -> ((((V11('erased'))('erased'))(('un--closeFile'('erased', V1, V4))))(fun (V13) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E10, E11} -> (fun (V14, V15) -> V14 end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E7, E8, E9} -> (fun (V16, V17, V18) -> V16 end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E4, E5, E6} -> (fun (V19, V20, V21) -> ((V20('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}})) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E14} -> (fun (V22) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E26, E27} -> (fun (V23, V24) -> V23 end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E15, E16, E17} -> (fun (V25, V26, V27) -> ((((V26('erased'))('erased'))(('un--closeFile'('erased', V1, V4))))(fun (V28) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E24, E25} -> (fun (V29, V30) -> V29 end(E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E21, E22, E23} -> (fun (V31, V32, V33) -> V31 end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E18, E19, E20} -> (fun (V34, V35, V36) -> ((V35('erased'))({'Idris.Prelude.Types.Left', V22})) end(E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--writeFile-2407'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Right', E0} -> (fun (V5) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E32, E33} -> (fun (V6, V7) -> V6 end(E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V8, V9, V10) -> ((((V9('erased'))('erased'))(('un--fPutStr'('erased', V1, V5, V2))))(fun (V11) -> case V11 of {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkUnit'} -> (fun () -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E16, E17} -> (fun (V13, V14) -> V13 end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V15, V16, V17) -> ((((V16('erased'))('erased'))(('un--closeFile'('erased', V1, V5))))(fun (V18) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E14, E15} -> (fun (V19, V20) -> V19 end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V21, V22, V23) -> V21 end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E8, E9, E10} -> (fun (V24, V25, V26) -> ((V25('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}})) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); {'Idris.Prelude.Types.Left', E18} -> (fun (V27) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E30, E31} -> (fun (V28, V29) -> V28 end(E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E19, E20, E21} -> (fun (V30, V31, V32) -> ((((V31('erased'))('erased'))(('un--closeFile'('erased', V1, V5))))(fun (V33) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E28, E29} -> (fun (V34, V35) -> V34 end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E25, E26, E27} -> (fun (V36, V37, V38) -> V36 end(E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E22, E23, E24} -> (fun (V39, V40, V41) -> ((V40('erased'))({'Idris.Prelude.Types.Left', V27})) end(E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E34} -> (fun (V42) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E41, E42} -> (fun (V43, V44) -> V43 end(E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E38, E39, E40} -> (fun (V45, V46, V47) -> V45 end(E38, E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E35, E36, E37} -> (fun (V48, V49, V50) -> ((V49('erased'))({'Idris.Prelude.Types.Left', V42})) end(E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fGetChar-1933'(V0, V1, V2, V3, V4) -> case V4 of E0 -> (fun (V5) -> ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> {'Idris.Prelude.Types.Left', {'Idris.Erlang.System.File.FileReadError'}} end, fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V6))} end end, ('Idris.Idris2.Prelude.Types':'un--strUncons'(V5)))) end((fun (V7) -> ('unicode':'characters_to_binary'(V7)) end(E0)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileModes-1559'(V0) -> case V0 of {'Idris.Erlang.System.File.Read'} -> (fun () -> ['read' | []] end()); {'Idris.Erlang.System.File.WriteTruncate'} -> (fun () -> ['write' | []] end()); {'Idris.Erlang.System.File.Append'} -> (fun () -> ['append' | []] end()); {'Idris.Erlang.System.File.ReadWrite'} -> (fun () -> ['read' | ['write' | []]] end()); _ -> [] end.
'nested--3890-2095--in--un--scanBack'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V3, V4) -> V3 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V50, V51) -> V50 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V52, V53, V54) -> V52 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V55, V56, V57) -> ((V56('erased'))(('erlang':'apply'('file', 'position', [V2 | [{'cur', ('Idris.Idris2.Prelude.Num':'dn--un--negate_Neg__Integer'(1))} | []]])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V9, V10) -> V9 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V11, V12, V13) -> V11 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> 0 end, fun (V17) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V24, V25)) end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V28, V29, V30)) end end end end end}, fun (V31) -> ('Idris.Idris2.Erlang.Decode':'un--okTuple'('erased', fun (V32) -> ('Idris.Idris2.Erlang.Decode':'un--any'(V32)) end, V31)) end, fun (V33) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', 1, V33)) end)), ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V36, V37, V38)) end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V40, V41)) end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V44, V45, V46)) end end end end end}, fun (V47) -> ('Idris.Idris2.Erlang.Decode':'un--errorTuple'('erased', fun (V48) -> ('Idris.Idris2.Erlang.Decode':'un--any'(V48)) end, V47)) end, fun (V49) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', 0, V49)) end)), V17)) end, V8)))) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--4873-3051--in--un--getMs'(V0, V1) -> (('Idris.Idris2.Prelude.Interfaces':'un--sum'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V5, V6, V7)) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V10, V11, V12)) end end end end end}, {'Idris.Prelude.Num.dn--un--__mkNum', fun (V13) -> fun (V14) -> ((V13 + V14) rem 9223372036854775808) end end, fun (V15) -> fun (V16) -> ((V15 * V16) rem 9223372036854775808) end end, fun (V17) -> V17 end}}))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V2) -> ('nested--4873-3050--in--un--getM'(V0, V2)) end, V1)))).
'nested--4873-3050--in--un--getM'(V0, V1) -> case V1 of {'Idris.Erlang.System.File.FileMode.Read'} -> (fun () -> 4 end()); {'Idris.Erlang.System.File.FileMode.Write'} -> (fun () -> 2 end()); {'Idris.Erlang.System.File.FileMode.Execute'} -> (fun () -> 1 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show__FileError'(V0) -> case V0 of {'Idris.Erlang.System.File.GenericFileError', E0} -> (fun (V1) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"File error: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__Int'(V1)))) end(E0)); {'Idris.Erlang.System.File.FileReadError'} -> (fun () -> <<"File Read Error"/utf8>> end()); {'Idris.Erlang.System.File.FileWriteError'} -> (fun () -> <<"File Write Error"/utf8>> end()); {'Idris.Erlang.System.File.FileNotFound'} -> (fun () -> <<"File Not Found"/utf8>> end()); {'Idris.Erlang.System.File.PermissionDenied'} -> (fun () -> <<"Permission Denied"/utf8>> end()); {'Idris.Erlang.System.File.FileExists'} -> (fun () -> <<"File Exists"/utf8>> end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--showPrec_Show__FileError'(V0, V1) -> ('dn--un--show_Show__FileError'(V1)).
'dn--un--__Impl_Show_FileError'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show__FileError'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show__FileError'(V1, V2)) end end}.
'un--writeFile'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E46, E47} -> (fun (V4, V5) -> V4 end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(('un--openFile'('erased', V1, V2, {'Idris.Erlang.System.File.WriteTruncate'}))))(fun (V9) -> case V9 of {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E35, E36} -> (fun (V11, V12) -> V11 end(E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E4, E5, E6} -> (fun (V13, V14, V15) -> ((((V14('erased'))('erased'))(('un--fPutStr'('erased', V1, V10, V3))))(fun (V16) -> case V16 of {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkUnit'} -> (fun () -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V18, V19) -> V18 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V20, V21, V22) -> ((((V21('erased'))('erased'))(('un--closeFile'('erased', V1, V10))))(fun (V23) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V24, V25) -> V24 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V26, V27, V28) -> V26 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V29, V30, V31) -> ((V30('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}})) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); {'Idris.Prelude.Types.Left', E21} -> (fun (V32) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E33, E34} -> (fun (V33, V34) -> V33 end(E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E22, E23, E24} -> (fun (V35, V36, V37) -> ((((V36('erased'))('erased'))(('un--closeFile'('erased', V1, V10))))(fun (V38) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E31, E32} -> (fun (V39, V40) -> V39 end(E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E28, E29, E30} -> (fun (V41, V42, V43) -> V41 end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E25, E26, E27} -> (fun (V44, V45, V46) -> ((V45('erased'))({'Idris.Prelude.Types.Left', V32})) end(E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); {'Idris.Prelude.Types.Left', E37} -> (fun (V47) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E44, E45} -> (fun (V48, V49) -> V48 end(E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E41, E42, E43} -> (fun (V50, V51, V52) -> V50 end(E41, E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E38, E39, E40} -> (fun (V53, V54, V55) -> ((V54('erased'))({'Idris.Prelude.Types.Left', V47})) end(E38, E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unknownError'() -> {'Idris.Erlang.System.File.GenericFileError', 0}.
'un--stdout'() -> 'standard_io'.
'un--stdin'() -> 'standard_io'.
'un--stderr'() -> 'standard_error'.
'un--removeFile'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V3, V4) -> V3 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V36, V37) -> V36 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V38, V39, V40) -> V38 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V41, V42, V43) -> ((V42('erased'))(('erlang':'apply'('file', 'delete', [V2 | []])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V9, V10) -> V9 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V11, V12, V13) -> V11 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V17) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V24, V25)) end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V28, V29, V30)) end end end end end}, fun (V31) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'ok', V31)) end, fun (V32) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}, V32)) end)), fun (V33) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V34) -> {'Idris.Prelude.Types.Left', V34} end, fun (V35) -> ('un--error'(V35)) end, V33)) end, V17)) end, V8)))) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--reason'(V0) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V3, V4, V5)) end end end end end, fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V7, V8)) end end end, fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V11, V12, V13)) end end end end end}, fun (V14) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'enoent', V14)) end, fun (V15) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', {'Idris.Erlang.System.File.FileNotFound'}, V15)) end)), fun (V16) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V23, V24)) end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V27, V28, V29)) end end end end end}, fun (V30) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'eacces', V30)) end, fun (V31) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', {'Idris.Erlang.System.File.PermissionDenied'}, V31)) end)), fun (V32) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V35, V36, V37)) end end end end end, fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V39, V40)) end end end, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V43, V44, V45)) end end end end end}, fun (V46) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'eexist', V46)) end, fun (V47) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', {'Idris.Erlang.System.File.FileExists'}, V47)) end)), fun (V48) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', ('un--unknownError'()), V48)) end, V32)) end, V16)) end, V0)).
'un--readFile'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V3, V4) -> V3 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V33, V34) -> V33 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V35, V36, V37) -> V35 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V38, V39, V40) -> ((V39('erased'))(('erlang':'apply'('file', 'read_file', [V2 | []])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V9, V10) -> V9 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V11, V12, V13) -> V11 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', {'Idris.Erlang.System.File.FileReadError'}} end, fun (V17) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> {'Idris.Prelude.Types.Right', V23} end, fun (V24) -> ('Idris.Idris2.Erlang.Decode':'un--okTuple'('erased', fun (V25) -> ('Idris.Idris2.Erlang.Decode':'un--string'(V25)) end, V24)) end)), ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V28, V29, V30)) end end end end end, fun (V31) -> {'Idris.Prelude.Types.Left', V31} end, fun (V32) -> ('un--error'(V32)) end)), V17)) end, V8)))) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--openFile'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V4, V5) -> V4 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V26, V27) -> V26 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V28, V29, V30) -> V28 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V31, V32, V33) -> ((V32('erased'))(('erlang':'apply'('file', 'open', [V2 | [('un--fileModes'(V3)) | []]])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V10, V11) -> V10 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V12, V13, V14) -> V12 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V15, V16, V17) -> ((V16('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V18) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', fun (V19) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V20) -> {'Idris.Prelude.Types.Right', V20} end, fun (V21) -> ('Idris.Idris2.Erlang.Decode':'un--okTuple'('erased', fun (V22) -> ('Idris.Idris2.Erlang.Decode':'un--pid'(V22)) end, V21)) end, V19)) end, fun (V23) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V24) -> {'Idris.Prelude.Types.Left', V24} end, fun (V25) -> ('un--error'(V25)) end, V23)) end, V18)) end, V9)))) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkMode'(V0) -> ((((((('nested--4873-3051--in--un--getMs'(V0, case V0 of {'Idris.Erlang.System.File.MkPermissions', E0, E1, E2} -> (fun (V1, V2, V3) -> V1 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) * 64) rem 9223372036854775808) + ((('nested--4873-3051--in--un--getMs'(V0, case V0 of {'Idris.Erlang.System.File.MkPermissions', E3, E4, E5} -> (fun (V4, V5, V6) -> V5 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) * 8) rem 9223372036854775808)) rem 9223372036854775808) + ('nested--4873-3051--in--un--getMs'(V0, case V0 of {'Idris.Erlang.System.File.MkPermissions', E6, E7, E8} -> (fun (V7, V8, V9) -> V9 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))) rem 9223372036854775808).
'un--fileStatusTime'(V0, V1, V2) -> ('un--fileInfo'('erased', 'erased', V1, V2, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V4) -> ('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Integer_Int'(V4)) end, fun (V5) -> ('Idris.Idris2.Erlang.Decode':'un--integer'(V5)) end, V3)) end)).
'un--fileSize'(V0, V1, V2) -> ('un--fileInfo'('erased', 'erased', V1, V2, 0, fun (V3) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V4) -> ('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Integer_Int'(V4)) end, fun (V5) -> ('Idris.Idris2.Erlang.Decode':'un--integer'(V5)) end, V3)) end)).
'un--fileModifiedTime'(V0, V1, V2) -> ('un--fileInfo'('erased', 'erased', V1, V2, (1 + (1 + (1 + (1 + 0)))), fun (V3) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V4) -> ('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Integer_Int'(V4)) end, fun (V5) -> ('Idris.Idris2.Erlang.Decode':'un--integer'(V5)) end, V3)) end)).
'un--fileModes'(V0) -> begin (V1 = case V0 of {'Idris.Erlang.System.File.Read'} -> (fun () -> ['read' | []] end()); {'Idris.Erlang.System.File.WriteTruncate'} -> (fun () -> ['write' | []] end()); {'Idris.Erlang.System.File.Append'} -> (fun () -> ['append' | []] end()); {'Idris.Erlang.System.File.ReadWrite'} -> (fun () -> ['read' | ['write' | []]] end()); _ -> [] end), ['binary' | V1] end.
'un--fileInfo'(V0, V1, V2, V3, V4, V5) -> case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V6, V7) -> V6 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V8, V9, V10) -> ((((V9('erased'))('erased'))(case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V20, V21) -> V20 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V22, V23, V24) -> V22 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V25, V26, V27) -> ((V26('erased'))(('erlang':'apply'('file', 'read_file_info', [V3 | [[{'time', 'posix'} | []] | []]])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V11) -> ('case--fileInfo-2681'('erased', 'erased', V2, V5, V4, V3, V11, ('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V12) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', fun (V13) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V14) -> {'Idris.Prelude.Types.Right', V14} end, fun (V15) -> ('Idris.Idris2.Erlang.Decode':'un--okTuple'('erased', fun (V16) -> ('Idris.Idris2.Erlang.Decode':'un--any'(V16)) end, V15)) end, V13)) end, fun (V17) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V18) -> {'Idris.Prelude.Types.Left', V18} end, fun (V19) -> ('un--error'(V19)) end, V17)) end, V12)) end, V11)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileAccessTime'(V0, V1, V2) -> ('un--fileInfo'('erased', 'erased', V1, V2, (1 + (1 + (1 + 0))), fun (V3) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V4) -> ('Idris.Idris2.Prelude.Types':'dn--un--cast_Cast__Integer_Int'(V4)) end, fun (V5) -> ('Idris.Idris2.Erlang.Decode':'un--integer'(V5)) end, V3)) end)).
'un--fflush'(V0, V1, V2) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V3, V4) -> V3 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V5, V6, V7) -> V5 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V8, V9, V10) -> ((V9('erased'))({'Idris.Builtin.MkUnit'})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fPutStrLn'(V0, V1, V2, V3) -> ('un--fPutStr'('erased', V1, V2, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V3, <<"\x{a}"/utf8>>)))).
'un--fPutStr'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V4, V5) -> V4 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V37, V38) -> V37 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V39, V40, V41) -> V39 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V42, V43, V44) -> ((V43('erased'))(('erlang':'apply'('file', 'write', [V2 | [V3 | []]])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V10, V11) -> V10 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V12, V13, V14) -> V12 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V15, V16, V17) -> ((V16('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V18) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V21, V22, V23)) end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V25, V26)) end end end, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V29, V30, V31)) end end end end end}, fun (V32) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'ok', V32)) end, fun (V33) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}, V33)) end)), fun (V34) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V35) -> {'Idris.Prelude.Types.Left', V35} end, fun (V36) -> ('un--error'(V36)) end, V34)) end, V18)) end, V9)))) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fGetLine'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V3, V4) -> V3 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V41, V42) -> V41 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V43, V44, V45) -> V43 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V46, V47, V48) -> ((V47('erased'))(('erlang':'apply'('file', 'read_line', [V2 | []])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V9, V10) -> V9 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V11, V12, V13) -> V11 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V17) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', fun (V18) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V19) -> {'Idris.Prelude.Types.Right', V19} end, fun (V20) -> ('Idris.Idris2.Erlang.Decode':'un--okTuple'('erased', fun (V21) -> ('Idris.Idris2.Erlang.Decode':'un--string'(V21)) end, V20)) end, V18)) end, fun (V22) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V25, V26, V27)) end end end end end, fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V29, V30)) end end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V33, V34, V35)) end end end end end}, fun (V36) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'eof', V36)) end, fun (V37) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', {'Idris.Prelude.Types.Right', <<""/utf8>>}, V37)) end)), fun (V38) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V39) -> {'Idris.Prelude.Types.Left', V39} end, fun (V40) -> ('un--error'(V40)) end, V38)) end, V22)) end, V17)) end, V8)))) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fGetChar'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E20, E21} -> (fun (V3, V4) -> V3 end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V44, V45) -> V44 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V46, V47, V48) -> V46 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V49, V50, V51) -> ((V50('erased'))(('erlang':'apply'('file', 'read', [V2 | [1 | []]])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E18, E19} -> (fun (V9, V10) -> V9 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E15, E16, E17} -> (fun (V11, V12, V13) -> V11 end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V17) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', fun (V18) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V19) -> case V19 of E14 -> (fun (V20) -> ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> {'Idris.Prelude.Types.Left', {'Idris.Erlang.System.File.FileReadError'}} end, fun () -> fun (V21) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V21))} end end, ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)))) end((fun (V22) -> ('unicode':'characters_to_binary'(V22)) end(E14)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V23) -> ('Idris.Idris2.Erlang.Decode':'un--okTuple'('erased', fun (V24) -> ('Idris.Idris2.Erlang.Decode':'un--charlist'(V24)) end, V23)) end, V18)) end, fun (V25) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V32, V33)) end end end, fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V36, V37, V38)) end end end end end}, fun (V39) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'eof', V39)) end, fun (V40) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', {'Idris.Prelude.Types.Left', {'Idris.Erlang.System.File.FileReadError'}}, V40)) end)), fun (V41) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V42) -> {'Idris.Prelude.Types.Left', V42} end, fun (V43) -> ('un--error'(V43)) end, V41)) end, V25)) end, V17)) end, V8)))) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fEOF'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E35, E36} -> (fun (V3, V4) -> V3 end(E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V82, V83) -> V82 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V84, V85, V86) -> V84 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V87, V88, V89) -> ((V88('erased'))(('erlang':'apply'('file', 'read', [V2 | [1 | []]])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V9, V10) -> V9 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V11, V12, V13) -> V11 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V14, V15, V16) -> ((V15('erased'))(0)) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V17) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V24, V25)) end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V28, V29, V30)) end end end end end}, fun (V31) -> ('Idris.Idris2.Erlang.Decode':'un--okTuple'('erased', fun (V32) -> ('Idris.Idris2.Erlang.Decode':'un--any'(V32)) end, V31)) end, fun (V33) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', ('nested--3890-2095--in--un--scanBack'('erased', V1, V2)), V33)) end)), fun (V34) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V37, V38, V39)) end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V41, V42)) end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V45, V46, V47)) end end end end end}, fun (V48) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'eof', V48)) end, fun (V49) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E25, E26} -> (fun (V50, V51) -> V50 end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E22, E23, E24} -> (fun (V52, V53, V54) -> V52 end(E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E19, E20, E21} -> (fun (V55, V56, V57) -> ((V56('erased'))(0)) end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V49)) end)), ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V60, V61, V62)) end end end end end, fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V64, V65)) end end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V68, V69, V70)) end end end end end}, fun (V71) -> ('Idris.Idris2.Erlang.Decode':'un--errorTuple'('erased', fun (V72) -> ('Idris.Idris2.Erlang.Decode':'un--any'(V72)) end, V71)) end, fun (V73) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E33, E34} -> (fun (V74, V75) -> V74 end(E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E30, E31, E32} -> (fun (V76, V77, V78) -> V76 end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E27, E28, E29} -> (fun (V79, V80, V81) -> ((V80('erased'))(0)) end(E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V73)) end)), V34)) end, V17)) end, V8)) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--error'(V0) -> ('Idris.Idris2.Erlang.Decode':'un--errorTuple'('erased', fun (V1) -> ('un--reason'(V1)) end, V0)).
'un--closeFile'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V3, V4) -> V3 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V17, V18) -> V17 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V19, V20, V21) -> V19 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V22, V23, V24) -> ((V23('erased'))(('erlang':'apply'('file', 'close', [V2 | []])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V9, V10) -> V9 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V11, V12, V13) -> V11 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V14, V15, V16) -> ((V15('erased'))({'Idris.Builtin.MkUnit'})) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--chmodRaw'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V4, V5) -> V4 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V37, V38) -> V37 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V39, V40, V41) -> V39 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V42, V43, V44) -> ((V43('erased'))(('erlang':'apply'('file', 'change_mode', [V2 | [V3 | []]])))) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V10, V11) -> V10 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V12, V13, V14) -> V12 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E11, E12, E13} -> (fun (V15, V16, V17) -> ((V16('erased'))(('Idris.Idris2.Erlang.Decode':'un--erlDecodeDef'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun () -> {'Idris.Prelude.Types.Left', ('un--unknownError'())} end, fun (V18) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<|>_Alternative__ErlDecoder'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', V21, V22, V23)) end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', V25, V26)) end end end, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Erlang.Decode':'dn--un--<*>_Applicative__ErlDecoder'('erased', 'erased', V29, V30, V31)) end end end end end}, fun (V32) -> ('Idris.Idris2.Erlang.Decode':'un--exact'('erased', {'Idris.Erlang.Types.ETErlAtom'}, 'ok', V32)) end, fun (V33) -> ('Idris.Idris2.Erlang.Decode':'dn--un--pure_Applicative__ErlDecoder'('erased', {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}, V33)) end)), fun (V34) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V35) -> {'Idris.Prelude.Types.Left', V35} end, fun (V36) -> ('un--error'(V36)) end, V34)) end, V18)) end, V9)))) end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--chmod'(V0, V1, V2, V3) -> ('un--chmodRaw'('erased', V1, V2, ('un--mkMode'(V3)))).
