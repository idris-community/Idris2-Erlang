-module('Idris.Idris2.TTImp.Elab.RunElab').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--checkRunElab-3022'/19,
  'case--case block in elabScript-2774'/18,
  'case--elabScript-2738'/15,
  'case--elabScript,elabCon-2563'/18,
  'case--elabScript,elabCon-2425'/18,
  'case--elabScript,elabCon-2149'/14,
  'case--elabScript,elabCon-1964'/19,
  'case--elabScript,elabCon-1801'/21,
  'case--elabScript,elabCon-1401'/20,
  'nested--12160-2324--in--un--unelabType'/16,
  'nested--12136-1267--in--un--scriptRet'/17,
  'nested--12160-1923--in--un--quotePi'/18,
  'nested--13893-2923--in--un--mkExpected'/13,
  'nested--12136-1266--in--un--failWith'/16,
  'nested--12136-1268--in--un--elabCon'/16,
  'un--elabScript'/9,
  'un--checkRunElab'/13
]).
'case--checkRunElab-3022'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V19, V20) -> fun (V21) -> begin (V23 = begin (V22 = ('erlang':'get'(V11))), {'Idris.Prelude.Types.Right', V22} end), case V23 of {'Idris.Prelude.Types.Left', E2} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V25) -> begin (V29 = begin (V26 = (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V11, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V25, V4, V19))(V21))), case V26 of {'Idris.Prelude.Types.Left', E4} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V28) -> (('un--elabScript'(V0, V11, V10, V9, V3, V5, V4, V28, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, V12))}))(V21)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V29 of {'Idris.Prelude.Types.Left', E6} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V11))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E8} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V35) -> begin (V36 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V35, V21))), case V36 of {'Idris.Prelude.Types.Left', E10} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V38) -> begin (V39 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V11, V0, V38, V4, V31, V21))), case V39 of {'Idris.Prelude.Types.Left', E12} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V41, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, V12))}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in elabScript-2774'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> ('nested--12136-1268--in--un--elabCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V1)); 1 -> fun (V18) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V18)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--elabScript-2738'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V15, V16) -> case V16 of {'Idris.Core.Name.UN', E2} -> (fun (V17) -> begin (V18 = {'Idris.Core.Name.NS', V15, {'Idris.Core.Name.UN', V17}}), ('case--case block in elabScript-2774'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V17, V15, V18, ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq__Namespace'(V15, ('Idris.Idris2.Core.Name.Namespace':'un--reflectionNS'()))))) end end(E2)); _ -> fun (V19) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V19)) end end end(E0, E1)); _ -> fun (V20) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V20)) end end.
'case--elabScript,elabCon-2563'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Prelude.Types.Just', E0} -> (fun (V18) -> case V18 of {'Idris.Core.Context.TCon', E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V19, V20, V21, V22, V23, V24, V25, V26) -> fun (V27) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V34, V35, V36, V37, V38, V39)) end end end end end end, V28, V29, V30, V31, V32, V33)) end end end end end end, V25, V27)) end end(E1, E2, E3, E4, E5, E6, E7, E8)); _ -> fun (V40) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V16)), <<" is not a type"/utf8>>))}, V40)) end end end(E0)); _ -> fun (V41) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V16)), <<" is not a type"/utf8>>))}, V41)) end end.
'case--elabScript,elabCon-2425'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Prelude.Types.Just', E0} -> (fun (V18) -> case V18 of {'Idris.Core.Env.MkIsDefined', E1, E2} -> (fun (V19, V20) -> begin (V28 = ('Idris.Idris2.Core.Env':'un--getBinder'('erased', 'erased', {'Idris.Core.TT.dn--un--__mkWeaken', fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken__Term'('erased', 'erased', V23)) end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.TT':'dn--un--weakenNs_Weaken__Term'('erased', 'erased', V26, V27)) end end end end}, V0, V19, 'erased', V7))), begin (V29 = ('Idris.Idris2.Core.TT':'un--binderType'('erased', V28))), fun (V30) -> begin (V31 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'(V0, V12, V7, V29, V30))), case V31 of {'Idris.Prelude.Types.Left', E3} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V33) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V34, V35, V36, V37, V38, V39)) end end end end end end, V33, V30)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1, E2)); _ -> fun (V40) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V16)), <<" is not a local variable"/utf8>>))}, V40)) end end end(E0)); _ -> fun (V41) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V16)), <<" is not a local variable"/utf8>>))}, V41)) end end.
'case--elabScript,elabCon-2149'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V14) -> fun (V15) -> begin (V16 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V14))(V15))), case V16 of {'Idris.Prelude.Types.Left', E1} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'(V0, V12, V7, V18, V15))), case V19 of {'Idris.Prelude.Types.Left', E3} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V21) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V28, V29, V30, V31, V32, V33)) end end end end end end, V22, V23, V24, V25, V26, V27)) end end end end end end, {'Idris.Prelude.Types.Just', V21}, V15)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V34) -> begin (V41 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V35, V36, V37, V38, V39, V40)) end end end end end end, V0, V9, V13, 1, V7, {'Idris.Prelude.Types.Nothing'}))(V34))), case V41 of {'Idris.Prelude.Types.Left', E5} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V43) -> (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V12, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V13, V7, V43))(V34)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--elabScript,elabCon-1964'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Lam', E4, E5, E6, E7} -> (fun (V23, V24, V25, V26) -> fun (V27) -> begin (V28 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V12, V10, <<"x"/utf8>>, V27))), case V28 of {'Idris.Prelude.Types.Left', E8} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V30) -> begin (V31 = (((V22(V16))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--withAll'()), V7, {'Idris.Core.TT.Ref', V19, {'Idris.Core.TT.Bound'}, V30}))))(V27))), case V31 of {'Idris.Prelude.Types.Left', E10} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V33) -> begin (V34 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V17, V7, V33, V27))), case V34 of {'Idris.Prelude.Types.Left', E12} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V36) -> begin (V37 = ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V30, V20, V36))), begin (V38 = (('nested--12160-1923--in--un--quotePi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V25))(V27))), case V38 of {'Idris.Prelude.Types.Left', E14} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V40) -> begin (V41 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V17, V7, V26, V27))), case V41 of {'Idris.Prelude.Types.Left', E16} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V43) -> begin (V44 = {'Idris.Core.Env.::', {'Idris.Core.TT.Lam', V23, V24, V40, V43}, V7}), begin (V48 = begin (V45 = (('Idris.Idris2.Core.Normalise':'un--nf'(V12, [V20 | V0], V16, V44, V37))(V27))), case V45 of {'Idris.Prelude.Types.Left', E18} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V47) -> (('un--elabScript'([V20 | V0], V12, V11, V10, V9, ('Idris.Idris2.TTImp.TTImp':'dn--un--weaken_Weaken__NestedNames'('erased', 'erased', V8)), V44, V47, {'Idris.Prelude.Types.Nothing'}))(V27)) end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V48 of {'Idris.Prelude.Types.Left', E20} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V50) -> begin (V51 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, [V20 | V0], V17, V44, V50, V27))), case V51 of {'Idris.Prelude.Types.Left', E22} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V53) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V12, V0, V17, V7, {'Idris.Core.TT.Bind', V19, V20, {'Idris.Core.TT.Lam', V23, V24, V40, V43}, V53}))(V27)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5, E6, E7)); _ -> fun (V54) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Not a lambda"/utf8>>}, V54)) end end end(E0, E1, E2, E3)); _ -> fun (V55) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Not a lambda"/utf8>>}, V55)) end end.
'case--elabScript,elabCon-1801'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V21, V22) -> fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V15, V23))), case V24 of {'Idris.Prelude.Types.Left', E2} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V26) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V12, V0, V26, V7, V21))(V23)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--elabScript,elabCon-1401'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V20, V21, V22, V23) -> case V22 of {'Idris.Core.TT.Lam', E4, E5, E6, E7} -> (fun (V24, V25, V26, V27) -> fun (V28) -> begin (V29 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V17, V7, V18, V28))), case V29 of {'Idris.Prelude.Types.Left', E8} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V31) -> begin (V32 = (((V23(V17))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--withAll'()), V7, V31))))(V28))), case V32 of {'Idris.Prelude.Types.Left', E10} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V34) -> (('un--elabScript'(V0, V12, V11, V10, V9, V8, V7, V34, V6))(V28)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5, E6, E7)); _ -> fun (V35) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V17, V35)) end end end(E0, E1, E2, E3)); _ -> fun (V36) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V17, V36)) end end.
'nested--12160-2324--in--un--unelabType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V18, V19) -> fun (V20) -> begin (V21 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'([], V12, {'Idris.Core.Env.Nil'}, V19, V20))), case V21 of {'Idris.Prelude.Types.Left', E4} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V16, V23}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V12))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E0} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V20) -> begin (V21 = (((((((V14(V0))(V9))(V20))(1))(V7))(V15))(V16))), case V21 of {'Idris.Prelude.Types.Left', E2} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V23) -> (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V12, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V20, V7, V23))(V16)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--12160-1923--in--un--quotePi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Explicit'}} end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Implicit'}} end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.AutoImplicit'}} end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Can\x{27}t add default lambda"/utf8>>}, V22)) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13893-2923--in--un--mkExpected'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Just', E0} -> (fun (V13) -> fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V13))(V14))), case V15 of {'Idris.Prelude.Types.Left', E1} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Right', V17} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V18) -> begin (V19 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V11, V9, <<"scriptTy"/utf8>>, V18))), case V19 of {'Idris.Prelude.Types.Left', E3} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V21) -> ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V11, V9, V3, ('Idris.Idris2.Algebra.Semiring':'un--erased'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V22) -> fun (V23) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V22, V23)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V24) -> fun (V25) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V24, V25)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())})), V4, V21, {'Idris.Core.TT.TType', V3}, V18)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V12))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E0} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V19) -> begin (V20 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V19, V15))), case V20 of {'Idris.Prelude.Types.Left', E2} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V22) -> begin (V23 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V22, V7, {'Idris.Core.Value.NDCon', V5, V4, V3, V2, V1}, V15))), case V23 of {'Idris.Prelude.Types.Left', E4} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V25) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.BadRunElab', V0, V9, V7, V25}, V15)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--12136-1268--in--un--elabCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V14 of <<"Pure"/utf8>> -> case V15 of [E0 | E1] -> (fun (V16, V17) -> case V17 of [E2 | E3] -> (fun (V18, V19) -> case V19 of [] -> fun (V20) -> begin (V21 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V20))), case V21 of {'Idris.Prelude.Types.Left', E4} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V23) -> (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V23, V18))(V20)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V24) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V24)) end end end(E2, E3)); _ -> fun (V25) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V25)) end end end(E0, E1)); _ -> fun (V26) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V26)) end end; <<"Bind"/utf8>> -> case V15 of [E6 | E7] -> (fun (V27, V28) -> case V28 of [E8 | E9] -> (fun (V29, V30) -> case V30 of [E10 | E11] -> (fun (V31, V32) -> case V32 of [E12 | E13] -> (fun (V33, V34) -> case V34 of [] -> fun (V35) -> begin (V39 = begin (V36 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V31))(V35))), case V36 of {'Idris.Prelude.Types.Left', E14} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V38) -> (('un--elabScript'(V0, V12, V11, V10, V9, V8, V7, V38, V6))(V35)) end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V39 of {'Idris.Prelude.Types.Left', E16} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V41) -> begin (V42 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V33))(V35))), case V42 of {'Idris.Prelude.Types.Left', E18} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V44) -> case V44 of {'Idris.Core.Value.NBind', E20, E21, E22, E23} -> (fun (V45, V46, V47, V48) -> case V47 of {'Idris.Core.TT.Lam', E24, E25, E26, E27} -> (fun (V49, V50, V51, V52) -> begin (V53 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V13, V7, V41, V35))), case V53 of {'Idris.Prelude.Types.Left', E28} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V55) -> begin (V56 = (((V48(V13))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--withAll'()), V7, V55))))(V35))), case V56 of {'Idris.Prelude.Types.Left', E30} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V58) -> (('un--elabScript'(V0, V12, V11, V10, V9, V8, V7, V58, V6))(V35)) end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24, E25, E26, E27)); _ -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V35)) end end(E20, E21, E22, E23)); _ -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V35)) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V59) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V59)) end end end(E12, E13)); _ -> fun (V60) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V60)) end end end(E10, E11)); _ -> fun (V61) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V61)) end end end(E8, E9)); _ -> fun (V62) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V62)) end end end(E6, E7)); _ -> fun (V63) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V63)) end end; <<"Fail"/utf8>> -> case V15 of [E32 | E33] -> (fun (V64, V65) -> case V65 of [E34 | E35] -> (fun (V66, V67) -> case V67 of [] -> fun (V68) -> begin (V69 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V66))(V68))), case V69 of {'Idris.Prelude.Types.Left', E36} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V71) -> begin (V72 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V71))(V68))), case V72 of {'Idris.Prelude.Types.Left', E38} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V74) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Error during reflection: "/utf8>>, V74))}, V68)) end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V75) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V75)) end end end(E34, E35)); _ -> fun (V76) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V76)) end end end(E32, E33)); _ -> fun (V77) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V77)) end end; <<"LogMsg"/utf8>> -> case V15 of [E40 | E41] -> (fun (V78, V79) -> case V79 of [E42 | E43] -> (fun (V80, V81) -> case V81 of [E44 | E45] -> (fun (V82, V83) -> case V83 of [] -> fun (V84) -> begin (V85 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V78))(V84))), case V85 of {'Idris.Prelude.Types.Left', E46} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V87) -> begin (V88 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V80))(V84))), case V88 of {'Idris.Prelude.Types.Left', E48} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V90) -> begin (V101 = begin (V91 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V87))(V84))), case V91 of {'Idris.Prelude.Types.Left', E50} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V93) -> begin (V94 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Nat'(V12, V0, V13, V90))(V84))), case V94 of {'Idris.Prelude.Types.Left', E52} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V96) -> ('Idris.Idris2.Core.Context.Log':'un--logC'(V12, V93, V96, fun (V97) -> begin (V98 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V82))(V97))), case V98 of {'Idris.Prelude.Types.Left', E54} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V100) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V100))(V97)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V84)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V101 of {'Idris.Prelude.Types.Left', E56} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V103) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|Unit,MkUnit|)'(V104, V105, V106, V107, V108, V109, V110)) end end end end end end end, {'Idris.Builtin.MkUnit'}, V84)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V111) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V111)) end end end(E44, E45)); _ -> fun (V112) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V112)) end end end(E42, E43)); _ -> fun (V113) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V113)) end end end(E40, E41)); _ -> fun (V114) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V114)) end end; <<"LogTerm"/utf8>> -> case V15 of [E58 | E59] -> (fun (V115, V116) -> case V116 of [E60 | E61] -> (fun (V117, V118) -> case V118 of [E62 | E63] -> (fun (V119, V120) -> case V120 of [E64 | E65] -> (fun (V121, V122) -> case V122 of [] -> fun (V123) -> begin (V124 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V115))(V123))), case V124 of {'Idris.Prelude.Types.Left', E66} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V126) -> begin (V127 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V117))(V123))), case V127 of {'Idris.Prelude.Types.Left', E68} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V129) -> begin (V149 = begin (V130 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V126))(V123))), case V130 of {'Idris.Prelude.Types.Left', E70} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V132) -> begin (V133 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Nat'(V12, V0, V13, V129))(V123))), case V133 of {'Idris.Prelude.Types.Left', E72} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V135) -> ('Idris.Idris2.Core.Context.Log':'un--logC'(V12, V132, V135, fun (V136) -> begin (V137 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V119))(V136))), case V137 of {'Idris.Prelude.Types.Left', E74} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V139) -> begin (V140 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V121))(V136))), case V140 of {'Idris.Prelude.Types.Left', E76} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V142) -> begin (V143 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V139))(V136))), case V143 of {'Idris.Prelude.Types.Left', E78} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V145) -> begin (V146 = (('Idris.Idris2.TTImp.Reflect':'dn--un--reify_Reify__RawImp'(V12, V0, V13, V142))(V136))), case V146 of {'Idris.Prelude.Types.Left', E80} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V148) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V145, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<": "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V148))))))} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V123)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V149 of {'Idris.Prelude.Types.Left', E82} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V151) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|Unit,MkUnit|)'(V152, V153, V154, V155, V156, V157, V158)) end end end end end end end, {'Idris.Builtin.MkUnit'}, V123)) end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V159) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V159)) end end end(E64, E65)); _ -> fun (V160) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V160)) end end end(E62, E63)); _ -> fun (V161) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V161)) end end end(E60, E61)); _ -> fun (V162) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V162)) end end end(E58, E59)); _ -> fun (V163) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V163)) end end; <<"Check"/utf8>> -> case V15 of [E84 | E85] -> (fun (V164, V165) -> case V165 of [E86 | E87] -> (fun (V166, V167) -> case V167 of [] -> fun (V168) -> begin (V169 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V164))(V168))), case V169 of {'Idris.Prelude.Types.Left', E88} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V171) -> begin (V172 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V166))(V168))), case V172 of {'Idris.Prelude.Types.Left', E90} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V174) -> begin (V175 = (('Idris.Idris2.Core.Context':'un--resolveName'(V12, {'Idris.Core.Name.UN', <<"[elaborator script]"/utf8>>}))(V168))), case V175 of {'Idris.Prelude.Types.Left', E92} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V177) -> begin (V178 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.TTImp.Elab.Check.EST'}, ('Idris.Idris2.TTImp.Elab.Check':'un--initEState'(V0, V177, V7)), V168))), case V178 of {'Idris.Prelude.Types.Left', E94} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V180) -> begin (V184 = begin (V181 = (('Idris.Idris2.TTImp.Reflect':'dn--un--reify_Reify__RawImp'(V12, V0, V13, V174))(V168))), case V181 of {'Idris.Prelude.Types.Left', E96} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V183) -> ('Idris.Idris2.TTImp.Elab.Delayed':'un--runDelays'('erased', V0, V12, V11, V10, V180, 0, ('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V12, V11, V10, V180, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), ('Idris.Idris2.TTImp.Elab.Check':'un--initElabInfo'({'Idris.TTImp.Elab.Check.InExpr'})), V8, V7, V183, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--glueBack'(V12, V0, V13, V7, V171))})), V168)) end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V184 of {'Idris.Prelude.Types.Left', E98} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V186) -> case V186 of {'Idris.Builtin.MkPair', E100, E101} -> (fun (V187, V188) -> begin (V189 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V168))), case V189 of {'Idris.Prelude.Types.Left', E102} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V191) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V12, V0, V191, V7, V187))(V168)) end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100, E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V192) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V192)) end end end(E86, E87)); _ -> fun (V193) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V193)) end end end(E84, E85)); _ -> fun (V194) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V194)) end end; <<"Quote"/utf8>> -> case V15 of [E104 | E105] -> (fun (V195, V196) -> case V196 of [E106 | E107] -> (fun (V197, V198) -> case V198 of [] -> fun (V199) -> begin (V200 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V197))(V199))), case V200 of {'Idris.Prelude.Types.Left', E108} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V202) -> begin (V204 = begin (V203 = ('erlang':'get'(V12))), {'Idris.Prelude.Types.Right', V203} end), case V204 of {'Idris.Prelude.Types.Left', E110} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V206) -> begin (V207 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V206, V199))), case V207 of {'Idris.Prelude.Types.Left', E112} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V209) -> begin (V210 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V209, V7, V202, V199))), case V210 of {'Idris.Prelude.Types.Left', E114} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V212) -> begin (V213 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'(V0, V12, V7, V212, V199))), case V213 of {'Idris.Prelude.Types.Left', E116} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V215) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V216, V217, V218, V219, V220, V221)) end end end end end end, V215, V199)) end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V222) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V222)) end end end(E106, E107)); _ -> fun (V223) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V223)) end end end(E104, E105)); _ -> fun (V224) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V224)) end end; <<"Lambda"/utf8>> -> case V15 of [E118 | E119] -> (fun (V225, V226) -> case V226 of [E120 | E121] -> (fun (V227, V228) -> case V228 of [E122 | E123] -> (fun (V229, V230) -> case V230 of [] -> fun (V231) -> begin (V232 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V231))), case V232 of {'Idris.Prelude.Types.Left', E124} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V234) -> begin (V235 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V229))(V231))), case V235 of {'Idris.Prelude.Types.Left', E126} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V237) -> case V237 of {'Idris.Core.Value.NBind', E128, E129, E130, E131} -> (fun (V238, V239, V240, V241) -> case V240 of {'Idris.Core.TT.Lam', E132, E133, E134, E135} -> (fun (V242, V243, V244, V245) -> begin (V246 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V12, V10, <<"x"/utf8>>, V231))), case V246 of {'Idris.Prelude.Types.Left', E136} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V248) -> begin (V249 = (((V241(V13))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--withAll'()), V7, {'Idris.Core.TT.Ref', V238, {'Idris.Core.TT.Bound'}, V248}))))(V231))), case V249 of {'Idris.Prelude.Types.Left', E138} -> (fun (V250) -> {'Idris.Prelude.Types.Left', V250} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V251) -> begin (V252 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V234, V7, V251, V231))), case V252 of {'Idris.Prelude.Types.Left', E140} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V254) -> begin (V255 = ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V248, V239, V254))), begin (V256 = (('nested--12160-1923--in--un--quotePi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V227, V225, V229, V13, V244))(V231))), case V256 of {'Idris.Prelude.Types.Left', E142} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V258) -> begin (V259 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V234, V7, V245, V231))), case V259 of {'Idris.Prelude.Types.Left', E144} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V261) -> begin (V262 = {'Idris.Core.Env.::', {'Idris.Core.TT.Lam', V242, V243, V258, V261}, V7}), begin (V266 = begin (V263 = (('Idris.Idris2.Core.Normalise':'un--nf'(V12, [V239 | V0], V13, V262, V255))(V231))), case V263 of {'Idris.Prelude.Types.Left', E146} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V265) -> (('un--elabScript'([V239 | V0], V12, V11, V10, V9, ('Idris.Idris2.TTImp.TTImp':'dn--un--weaken_Weaken__NestedNames'('erased', 'erased', V8)), V262, V265, {'Idris.Prelude.Types.Nothing'}))(V231)) end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V266 of {'Idris.Prelude.Types.Left', E148} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V268) -> begin (V269 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, [V239 | V0], V234, V262, V268, V231))), case V269 of {'Idris.Prelude.Types.Left', E150} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V271) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V12, V0, V234, V7, {'Idris.Core.TT.Bind', V238, V239, {'Idris.Core.TT.Lam', V242, V243, V258, V261}, V271}))(V231)) end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E132, E133, E134, E135)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Not a lambda"/utf8>>}, V231)) end end(E128, E129, E130, E131)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Not a lambda"/utf8>>}, V231)) end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V272) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V272)) end end end(E122, E123)); _ -> fun (V273) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V273)) end end end(E120, E121)); _ -> fun (V274) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V274)) end end end(E118, E119)); _ -> fun (V275) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V275)) end end; <<"Goal"/utf8>> -> case V15 of [] -> case V6 of {'Idris.Prelude.Types.Just', E152} -> (fun (V276) -> fun (V277) -> begin (V278 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V276))(V277))), case V278 of {'Idris.Prelude.Types.Left', E153} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V280) -> begin (V281 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'(V0, V12, V7, V280, V277))), case V281 of {'Idris.Prelude.Types.Left', E155} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V283) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> fun (V288) -> fun (V289) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V290) -> fun (V291) -> fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V290, V291, V292, V293, V294, V295)) end end end end end end, V284, V285, V286, V287, V288, V289)) end end end end end end, {'Idris.Prelude.Types.Just', V283}, V277)) end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E152)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V296) -> begin (V303 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V297) -> fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V297, V298, V299, V300, V301, V302)) end end end end end end, V0, V9, V13, 1, V7, {'Idris.Prelude.Types.Nothing'}))(V296))), case V303 of {'Idris.Prelude.Types.Left', E157} -> (fun (V304) -> {'Idris.Prelude.Types.Left', V304} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V305) -> (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V12, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V13, V7, V305))(V296)) end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> fun (V306) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V306)) end end; <<"LocalVars"/utf8>> -> case V15 of [] -> fun (V307) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> fun (V312) -> fun (V313) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> fun (V319) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V314, V315, V316, V317, V318, V319)) end end end end end end, V308, V309, V310, V311, V312, V313)) end end end end end end, V0, V307)) end; _ -> fun (V320) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V320)) end end; <<"GenSym"/utf8>> -> case V15 of [E159 | E160] -> (fun (V321, V322) -> case V322 of [] -> fun (V323) -> begin (V324 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V321))(V323))), case V324 of {'Idris.Prelude.Types.Left', E161} -> (fun (V325) -> {'Idris.Prelude.Types.Left', V325} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V326) -> begin (V330 = begin (V327 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V326))(V323))), case V327 of {'Idris.Prelude.Types.Left', E163} -> (fun (V328) -> {'Idris.Prelude.Types.Left', V328} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V329) -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V12, V10, V329, V323)) end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V330 of {'Idris.Prelude.Types.Left', E165} -> (fun (V331) -> {'Idris.Prelude.Types.Left', V331} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V332) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V333) -> fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V333, V334, V335, V336, V337, V338)) end end end end end end, V332, V323)) end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V339) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V339)) end end end(E159, E160)); _ -> fun (V340) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V340)) end end; <<"InCurrentNS"/utf8>> -> case V15 of [E167 | E168] -> (fun (V341, V342) -> case V342 of [] -> fun (V343) -> begin (V344 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V341))(V343))), case V344 of {'Idris.Prelude.Types.Left', E169} -> (fun (V345) -> {'Idris.Prelude.Types.Left', V345} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V346) -> begin (V350 = begin (V347 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V12, V0, V13, V346))(V343))), case V347 of {'Idris.Prelude.Types.Left', E171} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V349) -> (('Idris.Idris2.Core.Context':'un--inCurrentNS'(V12, V349))(V343)) end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V350 of {'Idris.Prelude.Types.Left', E173} -> (fun (V351) -> {'Idris.Prelude.Types.Left', V351} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V352) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V353) -> fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V353, V354, V355, V356, V357, V358)) end end end end end end, V352, V343)) end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V359) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V359)) end end end(E167, E168)); _ -> fun (V360) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V360)) end end; <<"GetType"/utf8>> -> case V15 of [E175 | E176] -> (fun (V361, V362) -> case V362 of [] -> fun (V363) -> begin (V364 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V361))(V363))), case V364 of {'Idris.Prelude.Types.Left', E177} -> (fun (V365) -> {'Idris.Prelude.Types.Left', V365} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V366) -> begin (V396 = begin (V367 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V12, V0, V13, V366))(V363))), case V367 of {'Idris.Prelude.Types.Left', E179} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V369) -> ('Idris.Idris2.Core.Context':'un--lookupTyName'(V369, case V13 of {'Idris.Core.Context.MkDefs', E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206} -> (fun (V370, V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395) -> V370 end(E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V363)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V396 of {'Idris.Prelude.Types.Left', E207} -> (fun (V397) -> {'Idris.Prelude.Types.Left', V397} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V398) -> begin (V400 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V399) -> ('nested--12160-2324--in--un--unelabType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V361, V13, V399)) end, V398, []))(V363))), case V400 of {'Idris.Prelude.Types.Left', E209} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E209)); {'Idris.Prelude.Types.Right', E210} -> (fun (V402) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V403) -> fun (V404) -> fun (V405) -> fun (V406) -> fun (V407) -> fun (V408) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> fun (V413) -> fun (V414) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V415) -> fun (V416) -> fun (V417) -> fun (V418) -> fun (V419) -> fun (V420) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V415, V416, V417, V418, V419, V420)) end end end end end end, fun (V421) -> fun (V422) -> fun (V423) -> fun (V424) -> fun (V425) -> fun (V426) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V421, V422, V423, V424, V425, V426)) end end end end end end}, V409, V410, V411, V412, V413, V414)) end end end end end end, V403, V404, V405, V406, V407, V408)) end end end end end end, V402, V363)) end(E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V427) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V427)) end end end(E175, E176)); _ -> fun (V428) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V428)) end end; <<"GetLocalType"/utf8>> -> case V15 of [E211 | E212] -> (fun (V429, V430) -> case V430 of [] -> fun (V431) -> begin (V432 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V429))(V431))), case V432 of {'Idris.Prelude.Types.Left', E213} -> (fun (V433) -> {'Idris.Prelude.Types.Left', V433} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V434) -> begin (V435 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V12, V0, V13, V434))(V431))), case V435 of {'Idris.Prelude.Types.Left', E215} -> (fun (V436) -> {'Idris.Prelude.Types.Left', V436} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V437) -> (('case--elabScript,elabCon-2425'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V429, V13, V434, V437, ('Idris.Idris2.Core.Env':'un--defined'(V0, V437, V7))))(V431)) end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V438) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V438)) end end end(E211, E212)); _ -> fun (V439) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V439)) end end; <<"GetCons"/utf8>> -> case V15 of [E217 | E218] -> (fun (V440, V441) -> case V441 of [] -> fun (V442) -> begin (V443 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V440))(V442))), case V443 of {'Idris.Prelude.Types.Left', E219} -> (fun (V444) -> {'Idris.Prelude.Types.Left', V444} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V445) -> begin (V446 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V12, V0, V13, V445))(V442))), case V446 of {'Idris.Prelude.Types.Left', E221} -> (fun (V447) -> {'Idris.Prelude.Types.Left', V447} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V448) -> begin (V475 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V448, case V13 of {'Idris.Core.Context.MkDefs', E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248} -> (fun (V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460, V461, V462, V463, V464, V465, V466, V467, V468, V469, V470, V471, V472, V473, V474) -> V449 end(E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V442))), case V475 of {'Idris.Prelude.Types.Left', E249} -> (fun (V476) -> {'Idris.Prelude.Types.Left', V476} end(E249)); {'Idris.Prelude.Types.Right', E250} -> (fun (V477) -> case V477 of {'Idris.Prelude.Types.Just', E251} -> (fun (V478) -> case V478 of {'Idris.Core.Context.TCon', E252, E253, E254, E255, E256, E257, E258, E259} -> (fun (V479, V480, V481, V482, V483, V484, V485, V486) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> fun (V491) -> fun (V492) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> fun (V498) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V493, V494, V495, V496, V497, V498)) end end end end end end, V487, V488, V489, V490, V491, V492)) end end end end end end, V485, V442)) end(E252, E253, E254, E255, E256, E257, E258, E259)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V448)), <<" is not a type"/utf8>>))}, V442)) end end(E251)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V448)), <<" is not a type"/utf8>>))}, V442)) end end(E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V499) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V499)) end end end(E217, E218)); _ -> fun (V500) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V500)) end end; <<"Declare"/utf8>> -> case V15 of [E260 | E261] -> (fun (V501, V502) -> case V502 of [] -> fun (V503) -> begin (V504 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V501))(V503))), case V504 of {'Idris.Prelude.Types.Left', E262} -> (fun (V505) -> {'Idris.Prelude.Types.Left', V505} end(E262)); {'Idris.Prelude.Types.Right', E263} -> (fun (V506) -> begin (V511 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V507) -> fun (V508) -> fun (V509) -> fun (V510) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reify_Reify__ImpDecl'(V507, V508, V509, V510)) end end end end, V12, V0, V13, V506))(V503))), case V511 of {'Idris.Prelude.Types.Left', E264} -> (fun (V512) -> {'Idris.Prelude.Types.Left', V512} end(E264)); {'Idris.Prelude.Types.Right', E265} -> (fun (V513) -> begin (V515 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V514) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'([], V12, V11, V10, [], [], {'Idris.Core.Env.Nil'}, V514)) end, V513))(V503))), case V515 of {'Idris.Prelude.Types.Left', E266} -> (fun (V516) -> {'Idris.Prelude.Types.Left', V516} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V517) -> ('nested--12136-1267--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V518) -> fun (V519) -> fun (V520) -> fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|Unit,MkUnit|)'(V518, V519, V520, V521, V522, V523, V524)) end end end end end end end, {'Idris.Builtin.MkUnit'}, V503)) end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E265)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V525) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V525)) end end end(E260, E261)); _ -> fun (V526) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V526)) end end; _ -> fun (V527) -> ('nested--12136-1266--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V527)) end end.
'un--elabScript'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Core.Value.NDCon', E6, E7, E8, E9, E10} -> (fun (V9, V10, V11, V12, V13) -> fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E11} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V18) -> begin (V23 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V1, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(V19, V20)) end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__Name'(V21, V22)) end end}, V10, V14))), case V23 of {'Idris.Prelude.Types.Left', E13} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V25) -> case V25 of {'Idris.Core.Name.NS', E15, E16} -> (fun (V26, V27) -> case V27 of {'Idris.Core.Name.UN', E17} -> (fun (V28) -> begin (V29 = {'Idris.Core.Name.NS', V26, {'Idris.Core.Name.UN', V28}}), (('case--case block in elabScript-2774'(V0, V13, V12, V11, V10, V9, V8, V6, V5, V4, V3, V2, V1, V18, V28, V26, V29, ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq__Namespace'(V26, ('Idris.Idris2.Core.Name.Namespace':'un--reflectionNS'())))))(V14)) end end(E17)); _ -> ('nested--12136-1266--in--un--failWith'(V0, V13, V12, V11, V10, V9, V8, V6, V5, V4, V3, V2, V1, 'erased', V18, V14)) end end(E15, E16)); _ -> ('nested--12136-1266--in--un--failWith'(V0, V13, V12, V11, V10, V9, V8, V6, V5, V4, V3, V2, V1, 'erased', V18, V14)) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7, E8, E9, E10)); _ -> fun (V30) -> begin (V32 = begin (V31 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E0} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V34) -> begin (V35 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V34, V30))), case V35 of {'Idris.Prelude.Types.Left', E2} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V37) -> begin (V38 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V1, V0, V37, V6, V7, V30))), case V38 of {'Idris.Prelude.Types.Left', E4} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V40) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.BadRunElab', V0, V4, V6, V40}, V30)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--checkRunElab'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V13 = (('nested--13893-2923--in--un--mkExpected'(V0, V11, V10, V9, V8, V7, V6, V5, V4, V3, V2, V1, V11))(V12))), case V13 of {'Idris.Prelude.Types.Left', E0} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = case ('Idris.Idris2.Prelude.Basics':'un--not'(('Idris.Idris2.Core.Context':'un--isExtension'({'Idris.Core.Options.ElabReflection'}, V19)))) of 0 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"%language ElabReflection not enabled"/utf8>>}, V12)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> begin (V23 = {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--reflectionNS'()), {'Idris.Core.Name.UN', <<"Elab"/utf8>>}}), begin (V24 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V9, V19, V23, [V15 | []], V12))), case V24 of {'Idris.Prelude.Types.Left', E6} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.TTImp.Elab.Delayed':'un--runDelays'('erased', V0, V1, V2, V3, V4, 0, ('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V10, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V26))})), V12))), case V27 of {'Idris.Prelude.Types.Left', E8} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V29) -> case V29 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V30, V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E12} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V35) -> begin (V39 = begin (V36 = (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V1, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V35, V8, V30))(V12))), case V36 of {'Idris.Prelude.Types.Left', E14} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V38) -> (('un--elabScript'(V0, V1, V2, V3, V9, V7, V8, V38, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V15))}))(V12)) end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V39 of {'Idris.Prelude.Types.Left', E16} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V41) -> begin (V43 = begin (V42 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V42} end), case V43 of {'Idris.Prelude.Types.Left', E18} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V45) -> begin (V46 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V45, V12))), case V46 of {'Idris.Prelude.Types.Left', E20} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V48) -> begin (V49 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V1, V0, V48, V8, V41, V12))), case V49 of {'Idris.Prelude.Types.Left', E22} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V51) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V51, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V15))}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
